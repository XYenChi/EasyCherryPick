ef57f7d6b1a0568f58eff04a1b27de4a22a5e07f RISC-V Port: Regenerate gcc/configure
0bd99911eea170dc9c627fd17d55e7c3ab8d4286 RISC-V Port: libgcc
b906c007feeacdeea908ae40bc093ce53dc1ee1b RISC-V Port: libatomic
122e7b4f9d0c2d54d865272463a1d812002d0a5c RISC-V Port: gcc/testsuite
154cc77ea00c46a498f827f8e7d1836313e04afb RISC-V Port: contrib
377ee2e435a6ad525625378597313f5d1b4d86e6 Use two spaces to separate options in the RISC-V docs
7953d566595e759038c4930fe901baa796c66678 Alphebetize RISC-V Options section
a4cf4b647cd239cc57d88ed82f7243e7efdf43f5 re PR tree-optimization/79256 (FAIL: gcc.dg/vect/pr25413a.c execution test)
01726bc97785f6e66d6d882bf2b81077391603c5 [riscv] Fix build due to INT16_MAX issue
f39bad9fd050ea3ba39cb68eb3121915da4936c2 re PR target/78604 (test case gcc.target/powerpc/p8vector-vectorize-1.c fails starting with r242750)
02889d23ee3b02854dff203dd87b9a25e30b61b4 gimplify.c (gimplify_scan_omp_clauses): No special handling for OMP_CLAUSE_TILE.
6a5cdb0e9e1294a72f3be8237f8e48c86c8b8dba re PR middle-end/79454 (c-c++-common/ubsan/overflow-vec-*.c FAILs on some 64-bit BE targets)
da9cd044552cb68f95a0beb2995b17119bb5e962 Fix memory leak in tree-ssa-loop-unswitch.c
ee139af5321d25192e675cc276460d7ab6fcffe9 Properly store 128-bit constant in large model
622f6b642a6c90720becec67d63a7b2f9e40a675 re PR middle-end/79505 (Memory leaks in oacc_loop_discover_walk)
25c99850471c3e5d906712711faeeb3e35c03d7d re PR tree-optimization/79347 (vect_do_peeling is messing up profile)
03108bad95b96d9dad75dc99482d652ea9a749c5 [PR 79579] Avoid segfault on NULL ipa_edge_args_vector
45f7faf0b5bfab05293808a03e76938572475037 re PR tree-optimization/79683 (SLP vectorizer drops gs: prefix)
69a2e8a10b5e80bb696269f7d6365a3efd16c18d re PR tree-optimization/79690 (IVOPTs drops gs: prefix)
57fa080bf6c0ae01bf1643a87e72ca636bde0454 re PR tree-optimization/77536 (Vectorizer not maintaining relationship of relative block frequencies in absence of real profile data)
c7d97b2846c5647a81548caa3264d77c0a595010 re PR tree-optimization/79723 (Another case of dropped gs: prefix)
0f3f4ffeafae6e4ae50bba50fae11ed82ab1b33b re PR tree-optimization/79734 (ICE: verify_gimple failed)
86cd0334f35362b1d8b2f66be156bf34eeadf785 [PR 78140] Reuse same IPA bits and VR info
501815065bca4cc3657f3f7f78f81613277ebeb4 re PR target/79395 (Compile error with -mcpu=power9 and __builtin_vec_vcmpne_p)
eb0e7c34d71173a90a2c48f2acbf4c7995240fa0 re PR middle-end/79756 (ICE in execute_todo, at passes.c:2011)
d36a53d6f20d6f689b4e0cc9485103b8f71fe33f vector.md (vector_ne_<mode>_p): Correct operand numbers.
334b3c4b8400c23382b44c14779a5d789b8cb1d4 mips.c (mips_gen_const_int_vector): Change type of last argument.
522fcdd739e5cc24bd8392f5c00dd5b439804c36 re PR tree-optimization/79824 (Failure to peel for gaps leads to read beyond mapped memory)
a8d25fd0dd7e0feffc395ff1db1f2e9d815fb78a re PR tree-optimization/79887 (ICE in set_uid_loop_bbs, at tree-vectorizer.c:482)
5281a167eaf420235edcd5b47425d54a13ff74af tree-vect-loop-manip.c (slpeel_add_loop_guard): Preserve preheaders.
61fdfd8c51a99f07b59706037cb2946bc793480c re PR tree-optimization/79920 (Incorrect floating point results when compiling with -O3)
91cd87db7e4a053f884f8e10e267e0f8913b988e re PR other/79991 (typo in params.def, PARAM_VECT_MAX_PEELING_FOR_ALIGNMENT)
dce15db61bc8c2dc7a7e1f901903fa966077fa3e riscv.c (riscv_emit_float_compare): Use fallthru attribute rather than comments.
cccfcff414eda67a3c89f57401cfad0fa432cfb8 Use gcc_fallthrough() instead of __attribute__((fallthrough)
778dd3b6277e4a4dda9dd55d1daf9c653c81e2be re PR tree-optimization/80030 (valgrind error in vect_get_slp_defs at tree-vect-slp.c:3360)
34e8234204cb51e65f0e4b325634208a227cc8f3 alias.c (struct alias_set_entry): Pack properly.
a3d514f231af029090ba40ebcdae4226b739433c re PR tree-optimization/71437 (Performance regression after r235817)
d8fe28be762164639c98506f9348f082e5f4b880 re PR target/79951 (ICE in extract_insn, at recog.c:2311 on ppc64le with -mno-cmpb)
3b82a32c3e673743f6bbb911efb8be77a7bb1255 RISC-V documentation cleanups
918112d378787a2227f61225098289a14b1ccd22 Fix *_CST ICEs connected to MPX.
5a05e11d968b8acab584a887d978886bbba4aa1b Add RISC-V Maintainers
3611534e1f90fc05f363cc7b40d45fcd295c26ad Disable test inapplicable to RISC-V
e05a9f8e560a09d920555dec2960497dcb9e9ede Use more conservative fences on RISC-V
801f04e010b85f6f3132476215be3f13e672dd2e RISC-V: Don't prefer FP_REGS for integers
b0ba96c2f1c648533eba004d93a29a11ee51b2f0 re PR target/79963 (vec_eq_any extracts wrong CR bit when compiling with -mcpu=power9)
fe62dd045e7a0c246123792b43a2263fc81fb64e stl_deque.h (deque): Access allocator value_type only if concept checks are enabled.
842392c856b8e15f8105b5fd8c3ed454cfd7c912 p9-options-1.c: New test.
79f512ffebee22885684ff63bc3d66e7e6db9b4b re PR tree-optimization/80170 (SLP vectorization creates aligned access)
a9e4a1a56fb8e99594b65d6640432ba29c705f3e re PR target/80162 (ICE on invalid code (address of register variable))
62f96a79f10e0c6772e5302c076b8c062e42b0d9 Fix calls.c for a _complex type (PR ipa/80104).
3e907b90563ad90752acf1b318bdac33d546c7f7 tree-vect-loop-manip.c (slpeel_add_loop_guard): New param and mark new edge's irreducible flag accordign to it.
9d384e80bda2cf905cd550c8908494210ae11c15 tree-vect-loop.c (optimize_mask_stores): Add bb to the right loop.
de008ec4d69a5f7e9b75b25dc9e1fa937d65ff80 re PR target/80206 (ICE in extract_insn, at recog.c:2327)
6c18efd4e20b8af2e625334c6d58e12decebf62b Fix ICE when expanding MSA constant vectors with replicated values
5764ee3c8491e3ecff855a319f781a66fca2484e Fix numerous typos in comments
4d1a05f13808cc12c09e71e6ca3951e878184bb2 re PR target/79905 (ICE in canonical types differ for identical types __vector(4) int and V4i {aka __vector(4) int})
31a07c8102fa4a7e44118bdacda5f8577ca7218e re PR target/80098 (ICE in curr_insn_transform, at lra-constraints.c:3816 on ppc64le)
067bc855b23fc7351db7030be0c881e3760b7e6f re PR target/57796 (AVX2 gather vectorization: code bloat and reduction of performance)
7fd1a7474a04fdf68e3b1645de16bcfa45a915d0 tree-ssa-loop-ivcanon.c (constant_after_peeling): Do not require sth as strict as a simple_iv but a chrec without symbols and an...
25c28f47f8c909b768cc8aac372f5616fd871e15 Add test-case (PR tree-optimization/66278).
2eb8a34363025d04482a798dec1c885e1e3a3803 re PR target/70799 (STV pass does not convert DImode shifts)
1913c8f63fba23103dff324669f581cb2248d98f re PR target/70799 (STV pass does not convert DImode shifts)
9425300b415916c5474204fa1157c94612d9f8ac Improve tests for vector and deque move-assignment
11775988d5f6db984fb902b7447a5b2817b555b1 [multiple changes]
78f2b7ce3aea49818ea97974cb41029f820d0a99 [multiple changes]
f24745230fe28ddd92d28ff681bd95d10578e3b0 [multiple changes]
119092c17a0c6e947f774692849dedb84acb53f2 tree-vrp.c (assert_info): New struct.
b26f45f0694604745bbb3d269cacecefd28b4faf PR libstdc++/80553 don't allow destroying non-destructible types
c6b9e849c04bfb994b72910346cbe24cf8feabd5 re PR fortran/37131 (inline matmul for small matrix sizes)
815d9cc6641a3eeb6734a98f64ea8b183a495ee5 re PR c++/80038 (Random segfault using local vectors in Cilk function)
49ab46214e9288ee1268f87ddcd64dacfd21c31d tree-vect-data-refs.c (vect_enhance_data_refs_alignment): When all DRs have unknown misaligned do not always peel when...
6fe63fb43f5ff71bbd5ba4b3e6128bfdd5efe37d Canonicalize canonical type hashing
6fe906a33de7ad0679cbc4e070feed5809471462 Use call_summary in ipa-prop and ipa-cp
3862ef76c66219fd7adbbd6e3884bc9c1ba9c606 Cap niter_for_unrolled_loop to upper bound
8acb85754af19a055d7d00248ca869496dd4cda0 re PR target/79038 (Improve PowerPC ISA 3.0 conversion between integers and hardware _Float128)
248710c431b94c250e8356211df6f82c753d7b34 RISC-V: Unify indention in riscv.md
822856928407e34bc10f2aa7d00bc6149b43d7f8 RISC-V: Add -mstrict-align option
0f6ed1211d4e6759a0c35bc8d05fb07e5eab7bea re PR fortran/79930 (Potentially Missed Optimisation for MATMUL / DOT_PRODUCT)
4ca2e6ec7cb634b3f2598026be638b768c926681 vect-50.c: Revert last change.
019bd543a9a7c24396eab29a97e4c30c7931bf4d vect-44.c: Add --param vect-max-peeling-for-alignment=0 and adjust.
43b883a99006138770d42067d385347fbae21334 re PR tree-optimization/80705 (Incorrect code generated for profile counter updates due to SLP+LIM)
1bea0f26630c2c7fc35968a6e646bd67a706bf08 re PR target/80695 (gratuitous use of stxvx to store multiple pointers)
65fdd5e9aca0af40e4cd2d0683149171fb5c7d24 mn10300.c (mn10300_match_ccmode): Fix where we look for cc setter after the compare-elim changes.
a5c9f2b736f0d152289628e2ff14d1888b512244 allow constructing a auto_vec with a preallocation, and a possibly larger actual allocation size
6ce6a84ac6751b38d2200d7ee1f2a0a3aecfab60 re PR fortran/80765 (178.galgel in SPEC CPU 2000 fails to run)
ef6cb4c716b9ceb467282357e5ba0c16fe71c6f6 Add default value for last argument of dump functions.
4fc5ebf12924235c9b88a2c645624bc8b1ea266c re PR tree-optimization/80457 (vectorizable_condition does not update the vectorizer cost model)
1a81741814618bc19d13de0b9e59c0324114cc86 Introduce dump_flags_t type and use it instead of int type.
fd71a9a24da0a52b9a752b4a7d4a6f71d96f5c29 OpenACC 2.5 kernels construct: num_gangs, num_workers, vector_length clauses
3cd211af9989ca33f08c9d9d7c29ba7cb208b645 PR c/80731 - poor -Woverflow warnings
11d6b45d431b0aa30cf5ce3941b01ba4fd342af5 Allow some NOP conversions in (X+CST1)+CST2 in match.pd
f408a6350f28490124ae042207027fa6599af29b re PR tree-optimization/80844 (OpenMP SIMD doesn't know how to efficiently zero a vector (its stores zeros and reloads))
2c8f03adb27b15e9e4665dfe24b04f5516ec2ea4 tree-vect-data-refs.c (compare_tree): Rename and move ...
8d44cf7275527abc86f33e6d6c51fc84fa9c877a tree-vect-data-refs.c (Operator==, [...]): Move from ...
cb4fe4013684c2984b309f799373837af582b24a re PR middle-end/80815 (wrong code because of broken runtime alias check in vectorizer)
f8d0706b24ff84eb0adfa161819e71a80f5a918a tree-vect-loop-manip.c (create_intersect_range_checks_index): Pass in parameter loop, rather than loop_vinfo.
3c9feefc8d6372d0e24070b53b40c2a36026e798 Inline and using namespace representation change.
bbe3927b62ae4318c5319da379642aafbf6d15be re PR fortran/37131 (inline matmul for small matrix sizes)
8d21ff9f66a20e551d52b0759c926660dccb49cd Vector peeling cost model 1/6
71595748a3b193518a6bfb3578e9ff1aa813620f Vector peeling cost model 2/6
1e69cc8f2719f0bca87f29fa03e5a65a944ab659 Vector peeling cost model 3/6
64812d33ac6c0f23a3f4c25bc5497d7bb00e0f24 Vector peeling cost model 4/6
4bfb347c0249384240209d0f414eaef5ac5adc48 Vector peeling cost model 5/6
4d3d23fb7d364ce433cf59b7d36d333567990518 Vector peeling cost model 6/6
1a58f770e487e94227fc75a42eee385d86b7bee9 tree-vectorizer.h (struct _stmt_vec_info): Add reduc_type and reduc_def fields.
c7d7e2227f72d54ce3ec725693a0fac35455c555 tree-data-ref.c (prune_runtime_alias_test_list): Relax minimal segment length for dr_b and compute it in wide_int.
9cbd2d979c5e7095530a6fc290615847d31b549d * tree-vect-loop-manip.c (create_intersect_range_checks_index) 	(create_intersect_range_checks): Move from ... 	* tree-data-ref.c (create_intersect_range_checks_index) 	(create_intersect_range_checks): ... to here. 	(create_runtime_alias_checks): New function factored from ... 	* tree-vect-loop-manip.c (vect_create_cond_for_alias_checks): ... 	here.  Call above function. 	* tree-data-ref.h (create_runtime_alias_checks): New function.
748bbe72024ab2840c6b8ab60cef124c4c83fbeb Alternative check for vector refs with same alignment
046a84762b7954d43d14aa8b7e48bf07b8117270 PR libstdc++/80893 Fix null dereference in vector<bool>
67b8dbacf69243ffc6ac999fd4928af83fbf6c04 Change comment style to one we normally use.
4f14911c80fe5e57068a98bf8f65aef0a27a9494 Fix changelog of previous commit, the correct version is:
052754ea183cd0da87af930ae07355137ca68a81 fold-vec-logical-ors-longlong.c: Update the target to power8-vector.
e7754973ed3f91db45ae9257197966e1030e1e85 tree-vect-loop.c (get_initial_def_for_induction): Inline into ...
643a9684fadd71e0b89bc737e937e22fe621a4e7 tree-vect-loop.c (vect_analyze_loop_operations): Not relevant PHIs are ok.
9186a9d353815352d9625fc765dd0449fb64d8a9 tree-vect-slp.c (vect_detect_hybrid_slp_2): Match up what we consider a relevant use stmt with vect_detect_hybrid_slp_stmts.
e09f2fb0ef4c7a04ea7c1e2270870d1654c79cd2 frame-header-opt.c: Include profile-count.h.
e7baeb396d313ef141f972cdedc19b12ef1b9cfe re PR tree-optimization/80928 (SLP vectorization does not handle induction in outer loop vectorization)
6eb2ac659ce3c958b78ec4f2bbdb78b8170df0ae re PR tree-optimization/80928 (SLP vectorization does not handle induction in outer loop vectorization)
46c821e74577edde97754def189f8aea92ef51ae re PR tree-optimization/80928 (SLP vectorization does not handle induction in outer loop vectorization)
7078979b291419f353804cc32ecfdb22367b6e0d tree-vectorizer.h (vect_build_loop_niters): New parameter.
704c28eeebfa5fc3fb555eb980f149ca76a8b948 tree-vect-loop-manip.c (vect_do_peeling): Don't skip vector loop if versioning is required.
6355150f585e2d746a62df19ae89df7c93e8c3c7 tree-vect-data-refs.c (vect_mark_for_runtime_alias_test): Factor out code checking if runtime alias check is possible to below ...
fb4bc6ff6c08f4e5524fa5e1881b478b0f689155 re PR tree-optimization/80928 (SLP vectorization does not handle induction in outer loop vectorization)
01a8cacc96f2b5c1df5be8af746f758006c11511 re PR tree-optimization/66623 (Unsafe FP math reduction used in strict math mode)
225ab2b07b41d0f373efd574e962f90e8b73d46a Add deduction guides for sequence containers (P0433R2, partial)
bae6eef0095c6fb444a547da7a938a2d35a6e3be tree-vect-loop.c (vect_model_reduction_cost): Do not fail, instead get vector type from stmt_info.
c3684b7b86da9b6b01f6fb274227fc6401df053e PR c++/80560 - warn on undefined memory operations involving non-trivial types
7d594224c2375ae5b067b727a46c42b6ddc86de2 stl_bvector.h (__fill_bvector(_Bit_type*, unsigned int, unsigned int, bool)): Change signature.
6a2dfd9a66a678b26c762d0fc614fea267ea706b Make keyed_classes a vector.
14d8a9121242c03ac9b92d131ecc9c1634e8ce10 PR libstdc++/80893 don't run test for C++98 modes
adb7eaa2bac31047b37cc8b9cb7b4121ca0a8fea tree-ssa-loop-niter.h (estimate_numbers_of_iterations): Take struct function as arg.
16122c22dc009696131c250603745b34340b803a re PR target/79799 (Improve vec_insert of float on Power9)
a1aa2599dd85d590f39dbe565cc213c8dab65cae re PR target/81121 (ICE: in extract_insn, at recog.c:2311)
d47d743898d2af37ff24bbc6c5b78fb77020bcef pr65947-9.c: Adjust.
dca19fe10daf00bfef714e3f9f98c63ff70c7a64 Improve dup pattern
85d5b033ae83c37ae0b4dbd4210d463dcacc4842 pr65947-14.c: New testcase.
a78f698034a2ab7fabd0d6ca3d35e688670b6d2f pr65947-14.c: Fix missing brace.
0759db190d979bb4adaeaedd19ab0c823c168691 tree-vect-loop.c (vect_model_reduction_cost): Handle COND_REDUCTION and INTEGER_INDUC_COND_REDUCTION without REDUC_MAX_EXPR...
b6d03af0b128d4a1f923f18aff52549f5fad1453 PR libstdc++/81173 fix undefined memset with null pointer
25853b33482749fb6a07336ea3790a45cc1752f7 re PR tree-optimization/80928 (SLP vectorization does not handle induction in outer loop vectorization)
306b0c920fc691999ecd078f4b1efe015923feea tree-vectorizer.h (vect_get_vec_defs): Remove.
883312dc79806f513275b72502231c751c14ff72 Use ucontext_t not struct ucontext in linux-unwind.h files.
62cf73356918189f84ad9fcc83c1ffe8f86d7595 tree-vect-loop.c (vectorizable_reduction): Move special cond reduction IV var creation ...
6cd83bec4b76e19175a425b7e1841d9c5d0d164e re PR tree-optimization/81196 (Number of iterations found for p!=q but not for p<q)
0630a4ecda602a90e978c3285cf1028e92ff5e8b tree-vect-loop.c (vect_analyze_scalar_cycles_1): Do not add reduction chains to LOOP_VINFO_REDUCTIONS.
357067f243611b9e29367b61a50efe2e78f693c9 asan.c (asan_emit_stack_protection): Update.
4812f0b73c076ead7371785770a1736cf4ed1f49 re PR tree-optimization/81249 (ICE: error: incompatible types in PHI argument 0)
bd2f172f0b67c88ad3dd6126e8ee6fd4e87b6787 tree-vect-slp.c (vect_slp_analyze_node_operations): Only analyze the first scalar stmt.
618400bc14b5c52a450e91d59632d5b08ae1a325 ggc.h (empty_string): Delete.
c7be78e9b3932307536faaedc52e4c553eaf7dd6 tree-vect-loop.c (optimize_mask_stores): Use make_single_succ_edge to update profile.
af2bbc51d3879b6e7a03b4dc2d4ab017a98270ba cfg.c (scale_bbs_frequencies): New function.
c34d09274e72031d768e18d3f2365a1532357879 PR81136: ICE from inconsistent DR_MISALIGNMENTs
bc9f4235bcac6304141c472c94ecedeb9dbbff56 Tweak BB analysis for dr_analyze_innermost
c78e36522d21297b555185f5eeedd6e848eda684 tree-vect-loop.c (vect_analyze_loop_operations): Also analyze reduction PHIs.
b6d447f20948b35804fd780f8f1a237c9d36826f tree-vect-loop.c (vect_create_epilog_for_reduction): Revert back to using VIEW_CONVERT_EXPR.
3f5e8a7690d91daba3d8988318895fe51b7749ec Use innermost_loop_behavior for outer loop vectorisation
e054a1852bf903139a80f34c726453d34338e008 Rename DR_ALIGNED_TO to DR_OFFSET_ALIGNMENT
832b4117d4068670cc9ed496a7ab06104a12dc00 Add DR_STEP_ALIGNMENT
bb64297941f34721c7d4e94e754b454086511cf9 Add DR_BASE_ALIGNMENT and DR_BASE_MISALIGNMENT
25f68d908ff41a912a9bacb88afba665dd59c2ff Add a helper for getting the overall alignment of a DR
6b5e165bd8236e1bcd4e7bc3a6fdc0f63ed9410a re PR tree-optimization/60510 (SLP blocks loop vectorization (with reduction))
80be3333236f4fcb03e15811d4b8487a604bf866 Avoid minimum - 1 confusion in vectoriser
10ea26721d314b7dda7677dea57aad1845d5c9dc * tree-vect-loop-manip.c (vect_do_peeling): Fix scaling up.
542e7230c0dd16977671486414207ef1a3bd52e4 cfgloop.h (struct loop): Add comment.
a7a44c07369631201744422c02dbe59655201865 tree-loop-distribution.c (struct partition): New field recording its data reference.
b8506a8ac0a98ad8d3ece50a6e585e9c72d226d3 Remove enum before machine_mode
dcbf81c94423262b09c3f81e5e1fd3c9b999ff2d Force a dependence distance of 1 in gnat.dg/vect17.adb
5d7b8153b4b0a0f037d13bb9fdaae114b321c5c5 builtins-1-p9-runnable.c (dg-ddo run): Add lp64 && p9vector_hw.
1b68a156d636b8a67e13ac721718c1e1f213f969 riscv.c: Remove unnecessary includes.
1234ee19c9a7b175c154f987d3089d669d17501a tree-ssa-loop-manip.c (tree_transform_and_unroll_loop): Use profile_proability for scalling.
d2e78d766294a5e548c2eaf92f07a8f768120e1c re PR tree-optimization/81418 (ICE in vect_get_vec_def_for_stmt_copy)
ec15a152077b766a2b61c36f86172af05aa03ab5 Fix PR81362: Vector peeling
b267968e676627af45f63c64f4c8c4a0f1939561 re PR tree-optimization/81410 (-O3 breaks code)
1310ff035d548056ad4a0def038a6c5dedd98b47 Add generic v2 vector mode support for nvptx
b98b34b708e321a292886e2dd368223d32a60e86 Add v2si support for nvptx
3717fbe35e288a02ddf97367355b15530745cecb Add v2di support for nvptx
304a15ec643310a4d18521ca36fea5bfed814768 PR libstdc++/81476 Optimise vector insertion from input iterators
f971b2813d7ddbdba210a63290b790a175777679 slp-43.c: Increase loop count to enable vectorization with V64QImode.
891ad31c7b151704de655a1a2b70568830a65086 re PR tree-optimization/61171 (vectorization fails for a reduction in presence of subtraction)
2953b72fdd6c7d812028a636dfadf1c0e89ca314 re PR target/80846 (auto-vectorized AVX2 horizontal sum should narrow to 128b right away, to be more efficient for Ryzen and Intel)
1dae21ad9797ae5cb77db3f2d85e854f3ae121f4 re PR tree-optimization/81303 (410.bwaves regression caused by r249919)
9af7f3731b0ddffb3aa75b78a0ede411d36a3b09 re PR tree-optimization/81500 (ICE with -O3 in process_use, at tree-vect-stmts.c:506)
d629ab44961886947b9ba07b8f26240868904457 re PR tree-optimization/81303 (410.bwaves regression caused by r249919)
8c7331c5563e00e63837d0246f1325371157d46a Add AddressSanitizer annotations to std::vector
4a15d84228ee29d55cd011094f82c8d4fa9a5a76 re PR libstdc++/81064 (Inline namespace regression)
3597188b4b1c0cdc363d0d3965b2cd667d6b448d re PR target/80695 (gratuitous use of stxvx to store multiple pointers)
fdd293743d43c5721e75d951d57d73b50af6738d re PR tree-optimization/81303 (410.bwaves regression caused by r249919)
5ea71a5a7c9f25a7539bdc8c5ed7a92bf2e2115c re PR tree-optimization/81510 (ice in operator[],  at vec.h:749)
ea0638714cacf83107bb886d9cf87f52a32a7ea4 re PR tree-optimization/81410 (-O3 breaks code)
e294f495894cd2d9e217565e340284b2edda4671 re PR tree-optimization/81529 (ICE in vectorizable_induction, at tree-vect-loop.c:6613)
52645850fc57ff68a8a7704f7611b18f5c853cda extend.texi: Update the built-in documentation file for the existing built-in functions...
6cad8c86b86637e9987a02cf84bddb1e8e397319 P0702R1 - List deduction of vector.
0919ce3efe2a0d6a20cb726feabe26dc3503db43 [Patch (preapproved)] Guard Copy Header pass on
9811e84c99df6269baa406c7f42d479b342087c4 re PR middle-end/81502 (In some cases the data is moved to memory unnecessarily [partial regression])
719488f819ceb7e7185bf324f04aa9030ba9c2ad re PR tree-optimization/81571 (ICE at -O3 in both 32-bit and 64-bit modes (internal compiler error: in as_a, at is-a.h:192))
1f9e09b55416098b04b3071549cdd53ab95ff8b5 Add RTEMS support
92e29a5e86c8adc88ee17a483d7284d7bb9e090c re PR middle-end/81502 (In some cases the data is moved to memory unnecessarily [partial regression])
8de33df2783088696d8c426a8467a8e1d70180a0 pr80815-3.c: Require vect_perm.
7488a79fa3675d18da9dc873933ddd4395822875 use C++ for {make,build}_vector_stat
6cc518c6cb819f9c0c7ad1bebad95fba1213e19f re PR tree-optimization/80925 (vect peeling failures)
ff03930a11f3a996e512ed3613eedc1b50ac5b30 re PR target/80846 (auto-vectorized AVX2 horizontal sum should narrow to 128b right away, to be more efficient for Ryzen and Intel)
26d476cd52837de43ed783288af5d4d68bd93c19 Remove flag_tree_vectorize
74cc0b2b66126e4598c4412ccbd879caa287ca81 re PR tree-optimization/80925 (vect peeling failures)
8e1863eca8c8914cc5e05369dacdc5266cdca179 re PR target/80846 (auto-vectorized AVX2 horizontal sum should narrow to 128b right away, to be more efficient for Ryzen and Intel)
636730cadd8be7f6280ea673cf44573bd49c37b0 re PR target/81622 (ICE on invalid altivec code with ppc64{,le})
77eefb7122d544b9e22a7f40a92320742c23e74b re PR tree-optimization/81633 (Incorrect floating point result with tree vectoriser)
04199738b48867d8c1d60e98578340047e3237da tree-vect-stmts.c (vectorizable_store): Perform vector extracts via vectors if supported...
dfbddbeb1ca912c9f9f806d8cff55a6ac2887d89 Handle data dependence relations with different bases
9adee3052156ae36271be28e3ad47dd975c26f42 Use base inequality for some vector alias checks
2c515559f9dbe8bace5f68e2fec7600a9edc7c42 C++-ify vec_info structures
62c8a2cf17cd794241c8f978c8fcfc4682ca4315 Pool alignment information for common bases
08c4c51e365e2957a590db0f4860ad886a6a20e9 re PR target/81593 (Optimize PowerPC vector set from vector extract)
314e6352040016aff26cc2cf0b9eb60c40ca859e trans.c: Include header files.
26d66f28fdb9bea6e05c2c9f9df7870f9d9f76b2 re PR tree-optimization/81723 (fortran build doesn't terminate on 64bit targets)
4261463d962c29bc105f973a8ab4269cf566cd1b re PR middle-end/19706 (Recognize common Fortran usages of copysign.)
b388427bf158402a37a4c966a01cf84eeb60052f vect-xorsign_exec.c: Add --save-temps to the options passed.
47ee1b7c10f2aa90645b0d2a94926fa2a674450c jit: add gcc_jit_type_get_vector
32129a17506ba18a34d07145eb2c1e9f9827034f C/C++: show pertinent open token when missing a close token
adc840379952b3a5649417d1d20d68f0d65e60ba PR81738: Split vect-alias-check-6.c
963aeaad25122bc507f9c72b9af6fc13cbeccde4 PR81815: Invalid conditional reduction
f8c770ddb4b5499780a5e2d58c861a9c903cdd29 Add missing ECF_NOTHROW flags to internal.def
4a89b7e700b9164c2cd9858fd6e1de4d813dfb79 altivec.md (VParity): Remove TARGET_VSX_TIMODE.
953e520dbe6794655602cdecec878d0393404731 jit: fix segfault with autovectorization (PR tree-optimization/46805)
c34960677437197ee2859b243cf185c7f873c83b Move vector_type_mode to tree.c
2be65d9e98a1335e0d948c2de59946e715afcbe5 Add a type_has_mode_precision_p helper function
6e4c6a248b55cad0775c9f47bfcdff79e15b913d Part 3/3 for contributing PPC64LE support for X86 SSE instrisics. This patch includes testsuite/gcc.target tests for the intrinsics in xmmintrin.h.  For these tests I added -Wno-psabi to dg-options to suppress warnings associated with the vector ABI change in GCC5.
d876eb057408fa7904dfc28ae9bc199c69b10858 cp-tree.h (lang_type): Replace sorted_fields vector with bindings map.
faa5399be693b2cdea641b976156f0fc89fa10cf tree-vect-slp.c (vect_bb_slp_scalar_cost): Properly confine life to the active subtree.
a844293de1d30da8ddba7384fc22ae59e857709f Set the call nothrow flag more often
9dc3d6a96167b4c84824be5e472fba4956297033 Make expansion of balanced binary trees of switches on tree level.
2ffc0382ff79b23a6f88113d277842934de258ed 20030926-1.c: Add dg-additional-options.
0d4a1197ba24d4f95b5c5f1face695806075a0c6 [1/77] Add an E_ prefix to mode names
4e10a5a74b2571a72ab944195267334d56b9534b [2/77] Add an E_ prefix to case statements
c94843d2422bdf77e2f86fad0329838f36773b43 [4/77] Add FOR_EACH iterators for modes
490d0f6c91c0c4fef57a5ffe438629b0687113de [6/77] Make GET_MODE_WIDER return an opt_mode
b5f2d801b10c25ef32a80c03d6df8668920a593c [9/77] Add SCALAR_FLOAT_TYPE_MODE
fffbab82e7fd15ef695159746a0ce7b9ac906778 [17/77] Add an int_mode_for_size helper function
304b9962830476dce3fe7632713e5f5ce002c050 [18/77] Make int_mode_for_mode return an opt_scalar_int_mode
b4206259f10455603e0c90825566de1ea777c04a [20/77] Replace MODE_INT checks with is_int_mode
45e8e706e295e7770d02c6d9c9798f4bab7ab524 [22/77] Replace !VECTOR_MODE_P with is_a <scalar_int_mode>
7c61657f68cc45bdbbfcfd762dbfd7021f3acb3f [25/77] Use is_a <scalar_int_mode> for bitmask optimisations
6b9c3decc38f6f852adf16951b9b1b043112cd1c [26/77] Use is_a <scalar_int_mode> in subreg/extract simplifications
c7ad039d8d75666f4f188a913033da36206503b8 [35/77] Add uses of as_a <scalar_int_mode>
e3731c52cf1b60d90f27f81ff0d1e2ad164fed07 [42/77] Use scalar_int_mode in simplify_shift_const_1
22527b59dbb10204626aeb8660a8e262377ac354 [47/77] Make subroutines of nonzero_bits operate on scalar_int_mode
3c84109eae52da59c09e8a91bfb5e79bd0527809 [54/77] Add explicit int checks for alternative optab implementations
b397965cae46d88d4c274fb2ecdde9a4714a4e6a [65/77] Add a SCALAR_TYPE_MODE macro
db61b7f923b769142156eab047c94b04bb7adaae [66/77] Use scalar_mode for constant integers
3bd8f4816fe24ef00641cde33dd13155b83db6e1 [68/77] Use scalar_mode for is_int_mode/is_float_mode pairs
16d2200070f49ed71053b81699e37bd539a0ee69 [71/77] Use opt_scalar_mode for mode iterators
18e2a8b889d520fc3598f74e39e1dbf1ef06ebd1 [72/77] Pass scalar_mode to scalar_mode_supported_p
79d22165ea45e89283ccf147d65cbf66548838da [74/77] Various small scalar_mode changes
18a01e8562aa48e978c0326d3e18fc290c1c9ca6 Revert 2017-08-28 Nathan Sidwell <nathan@acm.org> Restore sorted_fields vector.
db69559bac8ab03ccddfe3a42be630e65c277812 PR82045: Avoid passing machine modes through "..."
792ce29f1cfe2b34a9f081d929e57135f36c3374 re PR tree-optimization/70043 (The compiler hangs in a fortran test-case with -Ofast -g -march=haswell)
f939c3e63c5076205c56fb36e9c7cdc064a189a8 Turn HARD_REGNO_MODE_OK into a target hook
99e1629ff116e2e1aa37a14aa0d15b4533068927 Turn MODES_TIEABLE_P into a target hook
11a82e2597c54016345beb99e5339e37851c7d59 re PR c++/82084 (ICE: constructing wstring with -O3)
f4b316470bf7cccab22fbb97d1b6c541fcfc2855 Make more use of int_mode_for_size
ddc203a7b15306287792a3eed6abfe306e3d26ad Add mode_for_int_vector helper functions
9da15d4097fa2fde5c2a5f1681db8fd04488a563 Make mode_for_vector return an opt_mode
3981fbb65a43dff3a81ebc32c94d6f86bb4f9783 Make targetm.get_mask_mode return an opt_mode
f6bd5664755b207d5bbfedd95231dc62ccfaa1ed 20050604-1.c: Adjust to be a better test for correctness of vector lowering.
1887fb461b2c370aeeedaba95b503fde9b2c70f9 name-lookup.c (count_fields): Rename to ...
edcc77dbd9f95301a8be1a2f2b0d774680b46a1a Make-lang.in, [...]: Find runtime source in libgnat/
635c99aaf7250ef13dbd7a6f02141cb735bdcc2f Make HSA resilient to side-effects of split_edge
cff44c10ae1f4d3dc73abed85dfa785b70a553e1 tree-ssa-threadbackward.c (fsm_find_thread_path): Make GC vectors heap vectors.
dee6fc2b43d2fc004ffe65a0e030fc74facb7c64 tree-vect-generic.c (expand_vector_operations_1): Do nothing for operations we cannot scalarize.
e0bd6c9f0aa67d88bbb20019362a4572fc5fac3c Turn SLOW_UNALIGNED_ACCESS into a target hook
c43f427972be6aecd3c85b854cdf601feb816316 Turn HARD_REGNO_NREGS into a target hook
d681026df10348e1fbede89055cbd395dc66cdd8 PR libstdc++/79433 no #error for including TS headers with wrong -std
2af96386a67a2224abc74e7c2144747240ac4ad5 Define std::__to_address helper
f15643d4ea7103ad1bd9ef893f4c211624e1614d Turn SECONDARY_MEMORY_NEEDED into a hook
bce5091aa995e9faea7c6eb5b11b288bd66bcd98 re PR tree-optimization/80925 (vect peeling failures)
83ada6e8e669d0218771edcc99317b9951431df9 Don't xfail gcc.dg/vect/vect-multitypes-12.c on 32-bit SPARC (PR tree-optimization/80996)
9e822269364f5268b2bdc82530fd6c871f47b1bc Store VECTOR_CST_NELTS directly in tree_node
794e31808f1554d51f0f0357c3a74a6365f0a274 Use vec<> in build_vector
908a1a166dccefa24ae8b3606f4ce1da944eecb0 Use vec<> for constant permute masks
e7c45b6600acfdc0930b980a45a364f77844139a Add gimple_build_vector* helpers
dccf43aed37281a7bb91a7984a75470ad62eb0f1 Make more use of gimple-fold.h in tree-vect-loop.c
e8f142e28262a5048c6f40f4bfb6a612d3da55f0 Add a vect_get_num_copies helper routine
ca09abcb399bcb8cddbda68c75e702cc8989a6ca Add a vect_worthwhile_without_simd_p helper routine
a41a6142df74219f596e612d3a7775f68ca6e96f Add LOOP_VINFO_MAX_VECT_FACTOR
0d803030650a6c671b295d3e7d5161e64b59b2f6 Turn CANNOT_CHANGE_MODE_CLASS into a hook
bb149ca2e912038dce733f95ab1c24ff0d1af280 Turn TRULY_NOOP_TRUNCATION into a hook
7b9361409dda228eedb13a3abe547c3cafbe957b invoke.texi: Document -std=c++17 and -std=gnu++17 and document c++1z and gnu++1z as deprecated.
78d459bbbbadcfe8121106d49e1e6ede3c182c31 PR82228: Move ncopies calculation in vectorizable_live_operation
6b1ce94d31733df9b0055b9e1934704d21973d77 re PR tree-optimization/82220 (SPEC CPU2006 482.sphinx3 ~10% performance regression with trunk@250416)
f64b12bd152735aacb948424766b33303bbeb5f8 omp-offload.c (oacc_xform_loop): Enable SIMD vectorization on non-SIMT targets in acc vector loops.
68a0f2ffff4fdb05cfe110b3828124bcbe6d611f Invoke vectorizable_live_operation in a consistent way
dd25e724a475caffa4372f911d15536d09c342c8 Fix vectorizable_live_operation handling of vector booleans
e009b0558e8dd9bd9b17308104834ef5a1536975 Fix type of bitstart in vectorizable_live_operation
7251b0bfbf09fae831bb5d3d2d7a311e9d37b398 Fix vectorizable_mask_load_store handling of invariant masks
b161f2c927bb7fb70dc0c6d4e9ab22cdba29db6d Include phis in SLP unrolling calculation
ac8936b4677fa10b676e5b12aa682b9d2d42c1e5 Fix an SVE failure in the Fortran matmul* tests
8b7e9dba2bc921c24994129bb9231caa176d6da5 Move computation of SLP_TREE_NUMBER_OF_VEC_STMTS
4d6e2f33a437fc6ead8218bf5f0e2cdb3e834d9e graphite-isl-ast-to-gimple.c (graphite_verify): Inline into single caller.
20bdc473ebd7176544e0c8cdf87750adc6f44a97 Add a vect_get_scalar_dr_size helper function
f702e7d43f2aec71640d0db7ecf1543ba75f37c3 Let the target choose a vectorisation alignment
ea44495d106582b951de1e84d9d7849d3783a56d PR82289: Computing peeling costs for irrelevant drs
d362ac6c6d5a9419d9b7a0db84155a065e113434 re PR tree-optimization/82285 (Optimizing error when using enumeration)
579f368704e340c47957d5fb5aca6ecda6624a69 Update interface to TARGET_VECTORIZE_VEC_PERM_CONST_OK
f39b92e2c485be81ec154d2986495305d5926688 Change permute index type to unsigned short
58e17cf84636d72e3620b5af50b0336d9364ddd0 Turn CONSTANT_ALIGNMENT into a hook
7ba950d31d0cbf135d5fab8da26a37fb580df86e pr65947-9.c: Requires char to be signed by default.
7d6206fe298f420e2292df78ab3480caa98cd1aa Fix libgomp.oacc-c-c++-common/loop-g-{1,2}.c for non-nvidia devices
db6601d2b6e471598716ec7ab88a780bd4676933 crti-hw.S: Add watchdog vector, FT930 IRQ support.
9c53f040cb3c3bc0b86f702af5bd73d904d6cf0f [BRIGFE] Fix (more) crash with calls with more than 4 args.
a46461133eac42da46efe784b5b596c35ebcdafc Testcases using dg-options require at least -mzarch.
c059a92eccd96d00ffd23801d032eba14ff2a244 New target check: vect_long_mult
30d027da83cdcc174747ce19381525a16c4a4503 New target check for double<->int conversions
4f15b6a282bc4c11ee8b32dac4f05aab10ce3e10 New target check: vect_peeling_profitable
6069fe72870e410c08570e94ce2b141c6bc88219 jit: implement gcc_jit_context_new_rvalue_from_vector
8fe3ed4c10e293c69479042667161c79f0accf3e Fix libgomp.oacc-c-c++-common/{loop-red-g-1,routine-g-1}.c for non-nvidia devices
0322303e26cc317970fa311c032121078dab51dc vect-align-1.c: Fix vect_hw_misalign condition.
592fbfb5fb376972c21d88ac57b0a4a38018e79f slp-perm-9.c: Use vect_sizes_16B_8B.
31bee964798d25ac83e513de6858b69c3a9624be re PR tree-optimization/82436 (465.tonto ICE in vect_get_slp_vect_defs, at tree-vect-slp.c:3410)
d20eac1b41b9a86128a80f374e029d9638d14cba re PR tree-optimization/82397 (qsort comparator non-negative on sorted output: 1 in vect_analyze_data_ref_accesses)
2f3914287d4c1c75394d4f101ad5bd4d9d4b66e8 re PR tree-optimization/82434 (-fstore-merging does not work reliably.)
d155a264dfe562806dd2d44aca7e272594a3e92e Committed on behalf of Sudi Das
18b4306c0a150f144cddaf85ed814893b3b44b81 re PR tree-optimization/82397 (qsort comparator non-negative on sorted output: 1 in vect_analyze_data_ref_accesses)
166b87998a85c8c7d6db923bc7c8370af3665381 tree-vect-loop-manip.c (slpeel_tree_duplicate_loop_to_edge_cfg): Skip renaming variables in new preheader if it's deleted.
2fe1a1b888e204fd0ccc4e9c96b7065344e879aa tree-vect-loop-manip.c (rename_variables_in_bb): Rename PHI nodes when copying loop nest with only one inner loop.
8e6cdc90d41633e09a3a34bb8c6f71cf246101b2 Require wi::to_wide for trees
69c328ec60f2ff1858387eaf195119f6976fe99c re PR tree-optimization/78558 (Incorrect loop optimization leads to crash)
1be043a140d516e16930bbc357f5ccb7b98c1db5 re PR libstdc++/82558 (V8 JavaScript engine segfaults since r249235)
cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165 target.h (enum vect_cost_for_stmt): Add vec_gather_load and vec_scatter_store
ef30ab837c42b9555b3fc290454a5c02cb65487a asan.c (create_cond_insert_point): Do not update edge count.
c274eebe4ebaea9ee9e3dd7e1c0a8a4fb3108472 re PR target/82370 (AVX512 can use a memory operand for immediate-count vpsrlw, but gcc doesn't.)
42a764f76f14ce2718d30459dc140d1410ef118e re PR target/82370 (AVX512 can use a memory operand for immediate-count vpsrlw, but gcc doesn't.)
1031b5772a3f2daee0bf01d7d155955833d05c1b re PR tree-optimization/82603 (ICE in ifcvt_local_dce w/ -O2 -ftree-loop-vectorize)
51e28fffbec42be94bd281b0234a38774bdf6c21 re PR tree-optimization/82473 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1524)
8f8f531f0def95af2eb35265a3e7b6c3aa43ad7c sem_dim.adb (Analyze_Dimension_Binary_Op): Accept with a warning to compare a dimensioned expression with a literal.
f6fd8f2bd4e9a91b4683e2cbb144631ff201f587 pr79683.c: Disable costmodel.
a85cf8e99049f4db8b5868b5df5ef201a9a7b2cb Use scalar_mode in expand_shift_1
3ec43c5e312e368cca5cf0b9727bcbd71f13a704 Use SCALAR_TYPE_MODE in vect_create_epilog_for_reduction
2a31c3216c53ffaeb21ec76e4491611bb40792b4 Convert STARTING_FRAME_OFFSET to a hook
6ab5a6f30f2a3a9db37604195ff4b802779f83bc re PR target/82460 (AVX512: choose between vpermi2d and vpermt2d to save mov instructions.  Also, fails to optimize away shifts before shuffle)
8468bfe8cb065d4d7b17a39a756fed8cb66e3a7a libstdc++.exp (check_v3_target_normal_mode): Add c++config.h include.
bc1a75dda26988781847f00cfc5283eb13418106 re PR libstdc++/81706 (std::sin vectorization bug)
a596f4970ededd424328f7789b4a304e5b3a7338 re PR tree-optimization/82436 (465.tonto ICE in vect_get_slp_vect_defs, at tree-vect-slp.c:3410)
0b661358bcd72a70bbf4b903db1f0f8de98a6bbd RISC-V: Add Sign/Zero extend patterns for PIC loads
c3ef5fda143585ca19dff5a977b6aa87b7a17566 vect-dot-qi.h: New.
c5a92111082b32711635a61a602f1495effe65ff vect-multitypes-1.c: Correct target selector.
957f5feacf2f4c7916e0137ad95d2d9559e06fa4 Deduction guides for associative containers, debug mode deduction guide fixes.
76ff5c2403e918519f441b073a8b7c1053d62217 re PR target/82703 (Wrong addition of std::array components with -O2 -ftree-loop-vectorize -ftree-slp-vectorize (works fine with -O2))
f44d7b243a43db45cedc52ea3bd3f385b8f06f0d RISC-V: Correct and improve the "-mabi" documentation
daff6cdf8ea49dd3a9fbb9120f4b5ef39fe78a9a Part 2/2 for contributing PPC64LE support for X86 SSE2 instrisics. This patch includes testsuite/gcc.target tests for the intrinsics in emmintrin.h.  For these tests I added -Wno-psabi to dg-options to suppress warnings associated with the vector ABI change in GCC5.
c7432e76039d2c4fb7a00f0fbd261eec2238d42b GCOV: std::vector refactoring.
4695d816a37abffa3fae55cbb1c874ec1e62446d GCOV: Vector refactoring II
8a3f457f148b7114dfa37927b73410eecc986a33 GCOV: std::vector refactoring III
59d06c050373919ed36a13b37103b6e069d8ebd3 Add gen_(const_)vec_duplicate helpers
9b1de7e2e8e99eabf2b8d1ef74eb57fbd41bc730 Add more vec_duplicate simplifications
06ec586d2c384ba016c784de3279f3770d9f399d Allow vector CONSTs
ef339d6e2e846ba7ff544def1d79f10762da223d Add a VEC_SERIES rtl code
7aaba298fe122dfd40bb612623df89db08499f8b Add an is_narrower_int_mode helper function
cb8e3dda35164dcb85056556779daa673b40166a Use (CONST_VECTOR|GET_MODE)_NUNITS in simplify-rtx.c
d4b51b8ba058a79d9ef64cd03a3bc88d2c7fc6c6 RISC-V: Document the medlow and medany code models
42fc5a70c3d203c85dd09a40e53b3da24faf78e6 RISC-V: Use "@minus{}2 GB" instead of "-2 GB" in invoke.texi
13e4f305e040097de34481a72756dbe0ebd06dbc RISC-V: Handle non-legitimate address in riscv_legitimize_move
e7a740068ed3cc5961101f07012314d940a97ae5 asan.c (create_cond_insert_point): Maintain profile.
ecc82a8d0551e02afc9bb4d9dff450f6f0098b4e RISC-V: Set SLOW_BYTE_ACCESS=1
caf1c1cd1253a847644744e3d6df3f98051ef024 RISC-V: If -m[no-]strict-align is not passed, assume its value from -mtune
0791ac186bdddf4c52a59ee240ad9c3c9d7f197a RISC-V: Emit "i" suffix for instructions with immediate operands
19520957ad27c591e888a82d8dd30cb5fccb3896 Fix test-suite fallout of default -Wreturn-type.
454f8b2b0c6f9645b3df6be98efe2ca520f2ce82 Fix -Wreturn-type fallout.
962b96688689a73ddf5fb97d9c63514f98b49d27 [gcc]
4d30a85ecee179acc22a213653f4c03028994a6b RISC-V: Define MUSL_DYNAMIC_LINKER
6ed01e6b282fa9eb5d19ab8bc829d821f624103e RISC-V: Implement movmemsi
6432f025b4fccaaca8564e0c2518cdba869c4bf5 Simplify vec_merge of vec_duplicate with const_vector
40757a25d45d47ddc50819bfd32dd6aac595abc2 vec_merge + vec_duplicate + vec_concat simplification
fb5621b1841b56a88f66fb1e08dd87db0009c57b RISC-V: Fix build error
136ca74eb91c225ff18a7b08e0e7fd027b88517c GCOV: support multiple functions per a line (PR gcov-profile/48463)
1eae67f812a0b7b6b7132d0375e662bc6200d68a Base subreg rules on REGMODE_NATURAL_SIZE rather than UNITS_PER_WORD
9b4473b6c4a706cd5d38a50d10a83c549d676ca3 Be stricter about CONST_VECTOR operands
b9680369c3b870031120cda2a92511393e936538 Consistently use asm volatile ("" ::: "memory") in vect tests
a826c5019e1439181a822c2b5079fec22654e37b Add VECTOR_BITS to tree-vect.h
d574e624a9d156600731554133db68dc6868e7b5 Add available_vector_sizes to target-supports.exp
83f15782dde23b068a806b3f7e0c253c49d148a2 Don't assume vect_multiple_sizes means 2 sizes
8b26c5492bf1d4c7acab18eff1e78a239af779a1 Add vect_perm3_* target selectors
4d83db5d73ce3e355f9ac166e04d72ce41decfb5 Add a vect_element_align_preferred target selector
b8353767564e8042ce75d6879e813ce313a0a050 Add a vect_unaligned_possible target selector
32c7bafd50e6553f2f79858cf365907979d5eb2a Add a vect_variable_length target selector
331e1a56adf1a81c3544a8034d9e0a413ea35435 Add a vect_align_stack_vars target selector
c48a8e71c8b5d3e6bdffaec85b1e3b111814cee0 Add a vect_masked_store target selector
4d99a8487287e94b9bd42807cbe864991a0d1d3b Moving parameter manipulation into its own file
2041a23a2ed58c7115bc8a942ee40efda0b72324 [riscv] Wrap ASM_OUTPUT_LABELREF in do {} while (0)
211bea6b40bfa457a9e8619cf653227206736e76 GCOV: introduce global vector of functions
4464b9772d6f2fe927a47f3a3e120ce5938fbfdf GCOV: introduce vector for function_info::counts.
f804ba3e12e03dc1d0130b0ab7e9a792b4892d24 RISC-V: Add Jim Wilson as a maintainer
3ef9e1ec4bcd859fca2e8b80739ec5d98618bb23 altivec.h (vec_xst_be): New #define.
00fa28d1b471a3aca9994a21363ce3f58b6bd2f2 tree-vect-loop-manip.c (vect_do_peeling): Do not use scale_bbs_frequencies_int.
efeee67f4c9fd021d2594e0271c84b7e90e63d3d Set default to -fomit-frame-pointer
c261ba2c8b4244128528f964192ca4f4edf1eef5 Tweak vector::_M_realloc_insert for code size
3d7f09de5a5a4e74fdc25d8f7e2756410383d149 Add nds32 vector modes.
19a30b7123aa90caf7de3e9ec588266e218f8028 vec.h (debug_helper): New function.
f370e36dc9aba0a5cafa4e6fac893b49acbfb6e8 re PR c++/82781 (Vector extension operators return wrong result in constexpr)
ee1c213355f0f9d33568c5118f318f22057d1454 RISC-V: Implement __umulsidi3, umul_ppmm and __muluw3
1af4ebf5985ef2aaac13862654044d84a3cd7ae4 New POINTER_DIFF_EXPR
866e4d3853ccc0bc61e3764911d2a0f69c281f0c PR libstdc++/48101 improve errors for invalid container specializations
a76ef9c5a8447bf3e90ed832ef1286cda205e115 PR83004: Accidental change to pr81136.c for VECTOR_BITS==128
16d24520af1ad5ff832d243f177d88f08a1ba012 Replace REDUC_*_EXPRs with internal functions.
ce95abc41e998c8d1e1b2112a634d5a6cdd9ede0 C/C++: fix quoting of "aka" typedef information (PR 62170)
15b6695ac534148a10dd5a5f266bf2e49316dc32 re PR tree-optimization/82402 (error: SSA_NAME_OCCURS_IN_ABNORMAL_PHI should be set)
5e9d6aa4c2fd245837ec26de1d01ee8eb7786af3 Remove Cilk Plus support.
f7300fff74becf365cdadd23c9447521da852e84 re PR tree-optimization/83202 (Try joining operations on consecutive array elements during tree vectorization)
08539f3e949c37dcfe6e128d78c527db47cc609d Riscv patterns to optimize away some redundant zero/sign extends.
a52206ae28ed3e55d601118bedd52739456401ab re PR tree-optimization/83202 (Try joining operations on consecutive array elements during tree vectorization)
fb0e72c8c06acbc30759e707d807c35758c6961c Cleanup riscv option docs.
fb607032b8009d141409b8dc3c5e4df42c93a231 re PR tree-optimization/83232 (fma3d spec2000 regression on zen with -Ofast (generic tuning) after r255268 by missed SLP oppurtunity)
e034c5c895722e0092d2239cd8c2991db77d6d39 re PR target/78643 (ICE in convert_move, at expr.c:230)
f3abed16a01153c7a72d5795076c392cdb19c9dd Fix typos in riscv register save/restore.
fbdec14e80e9399cd301ed30340268bdc5b5c2eb re PR tree-optimization/81303 (410.bwaves regression caused by r249919)
734914b6e230b78eb6c34fbd5a2d93b1a919d36a New VECTOR_CST layout
5ebaa4774fb6de458422c660ae11f1c3b7d96262 Use tree_vector_builder instead of build_vector
059c18abcb9c88bb5a85eb3ce468ffa7252da230 Use tree_vector_builder::new_unary_operation for folding
b3def403fa7ae89679468b8f986cab7361c1034d Use tree_vector_builder::new_binary_operation for folding
abe73c3d32b68809628eaa3266bf98cb7352851c Make gimple_build_vector take a tree_vector_builder
44e1aae4dbd8198a26ab0ec5958e073e2c9cc772 Make build_vector static
63570af0b58a3c354723bc78b75d76dbb0750f47 Make more use of VECTOR_CST_ENCODED_ELT
6cb0725cdbef47a7486629b7933f51a29a591781 Add srodata section support to riscv port.
8da4c8d83b7a21127cbe464aa54c5f3e7c034feb re PR tree-optimization/81303 (410.bwaves regression caused by r249919)
becb7a366039fe2738d56017cfe9eac74a5512fd re PR tree-optimization/81303 (410.bwaves regression caused by r249919)
3a4c600f389e8c5aa6dcbd6cd14bd0c546af0bb2 Add .type and .size directives to riscv libgcc functions.
0eb952ea5eab6a299283635625cef497e831dae4 re PR lto/83338 (SPEC CPU2017 510.parest_r ICE)
4ded4b230da2408bc6752ca4e4551204bebe806b altivec.h (vec_extract_fp32_from_shorth, [...]): Add #defines.
0242c7f0aac22e47b73046b2d60bb5de68057d6a altivec-12.c (main): Add tests for vec_avg.
36f52e8f0812546e6cb533b384b29f56570624ff [SFN] boilerplate changes in preparation to introduce nonbind markers
12c667b5b449a9c86c763438fb96e6e029533fb7 re PR tree-optimization/80631 (Compiling with -O3 -mavx2 gives wrong code)
555758de9007461daa2638c1c5d5ac35ae3dd234 re PR tree-optimization/83359 (ICE in expand_LOOP_DIST_ALIAS, at internal-fn.c:2362)
c5060cadf030f6517a1552bf0fc263cb03eb96c4 [Patch combine] Don't create vector mode ZERO_EXTEND from subregs
95e5bea0012664d225a40a219f98a9cc1f7f1579 re PR target/83332 (new test case gfortran.dg/vect/pr81303.f fails (r255499))
b8d7e076ed0cf5fde5f5d875e4145d63317a6180 Use C version of multi3 for RVE support.
b72805798ac456709eef4a761b84dd1c4a5780e6 re PR middle-end/83415 (ICE during gimplification of assignment to read-only vector)
be4c1d4a42c5c7dc8bffbc5c9e3250f02be0d922 Add VEC_DUPLICATE_EXPR and associated optab
9adab579d59ea50eeb6877df2292d9d5c7b20e3e Add VEC_SERIES_EXPR and associated optab
8fcc61f8964aa9aa2e6fc08cb961f9dc2a5add77 poly_int: IN_TARGET_CODE
b4d43553e9353de4fefb3a1fde1277eeb1bad7be poly_int: mode query functions
d43568222a4564e22a6ffd370481e11ba031b318 PR tree-optimization/83239 - False positive from -Wstringop-overflow
bcfaa720a25d9f3bc760a993ee1d949f68e777ef re PR ipa/81877 (Incorrect results with lto and -fipa-cp and -fipa-cp-clone)
58cc7d798875aee798ba6a5b07c9324717160a2c re PR c++/83300 (Segmentation fault with template and __attribute__((vector_size (sizeof(int) * N)));)
497742efce59a3296461199c16bbc520154d0e2e re PR tree-optimization/80631 (Compiling with -O3 -mavx2 gives wrong code)
36fd64086542ed734aded849304723218fa4d6fd poly_int: tree constants
74c74aa05ee8757210dfb16f6198024e6dc445d5 poly_int: DWARF locations
fc60a41612bad379060969b6ed3a78eb160aae8a poly_int: extract_bit_field bitrange
91914e56a5e952cc87468bdd6d006e51eaa54294 poly_int: SUBREG_BYTE
f37fac2b74df114c5b3e9c8a3be2cad9acd3f4ca poly_int: get_inner_reference & co.
e7301f5fcbfa649beb05da1e3508db7fc7c4d26b poly_int: bit_field_size/offset
aca52e6f8d29064f4712e5f3f4429a36f918f099 poly_int: MEM_REF offsets
a696bc4fec986318a1765c31ac9ee2db3849934a poly_int: loop versioning threshold
8944b5b36e04894f7a0768440e3253400c3c7857 poly_int: compute_data_ref_alignment
af2e447568c939acf8c55eea529b2ac85c5753a7 Use valid_for_const_vector_p instead of CONSTANT_P
d235d09b7c86a2955bebdcb1991cd21758bcc21b re PR middle-end/83623 (ICE: in convert_move, at expr.c:248 with -march=knl and 16bit vector bswap/rotate)
1bfb3b8bfadf6e4972db74562da5718f014a15a0 re PR tree-optimization/83581 (ICE in expand_LOOP_VECTORIZED, at internal-fn.c:2397)
4aae3cb3559802faee3b5cb58d9315dcc5000bc8 Pass vec_perm_indices by reference
7ac7e2868d450dfb9080166ddc4abcc21b86fab3 Split can_vec_perm_p into can_vec_perm_{var,const}_p
279b805713fd498afb7986698a2e3406bc947d87 Refactor expand_vec_perm
f151c9e1414c00e300c9385bc9512c3d9a481296 Remove vec_perm_const optab
6da64f1b329f57c07f22ec034bc7bc4b0dc9e87b Check whether a vector of QIs can store all indices
e3342de49cbee48957acc749b9566eee230860be Make vec_perm_indices use new vector encoding
736d0f28783f12fa042892bc186866dd5101088f Add a vec_perm_indices_to_tree helper function
d980067b1e9394b2b8482b3fc888ac5e8e3ebe59 Use explicit encodings for simple permutes
1a1c441dbe5933ebf9180831236aa5be7d70a434 Rework VEC_PERM_EXPR folding
d3867483044ae00bac6daaeac6274e95254fb991 Use vec_perm_builder::series_p in shift_amt_for_vec_perm_mask
b00cb3bfa50c5477347082a9450b4a63e4fee263 Use ssizetype selectors for autovectorised VEC_PERM_EXPRs
8eff75e0d2a3495c5bc182324644a080d47205ac Use CONST_VECTOR_ELT instead of XVECEXP
3877c560656f4961cc50952c3bba3c40812c36c3 New CONST_VECTOR layout
3d8ca53dd9b4c42b07ef974f92c3c4553cce3a79 Make more use of rtx_vector_builder
cd5ff7bc323a8fa6eafc4513bc814e4e7fa24120 Make CONST_VECTOR_ELT handle implicitly-encoded elements
f1bdc63a898f2fa164e79528c03e96a21a779e82 RISC-V: Fix for icache flush issue on multicore processors.
0f26839a0a779caa6c81d9fb3c31699f6ca86790 Add an alternative vector loop iv mechanism
d9f21f6acb3aa615834e855e16b6311cd18c5668 poly_int: vectoriser vf and uf
4b6068eadcf9801b9ef4e5f1b7b6354947c27ca8 poly_int: SLP max_units
c5126ce8cae4f14194414e266be91fdc4b756807 poly_int: vect_nunits_for_cost
9d2f08ab97bea3c299cce96a0760904501e002dd poly_int: omp_max_vf
87133c45a06aa9c04cb6bc13b3b0733ec43efcec poly_int: get_mask_mode
86e3672871beff63eebb195642566224c9f80891 poly_int: current_vector_size and TARGET_AUTOVECTORIZE_VECTOR_SIZES
9031b367ac87550552318f6516487c70f3ce9a99 poly_int: vector_alignment_reachable_p
e54dd6d3a791536543d4769aa09508b89d882f37 poly_int: vectorizable_reduction
9fb9293aca4ddbe4d11a334befaa7847b279ed39 poly_int: vectorizable_induction
fa780794692994d63febf4fb187567e245cdd4ee poly_int: vectorizable_live_operation
4d694b27c3697f7eef16a17eb926076bf836575a poly_int: vectorizable_load/store
c7bda0f40e1ddd9fc2c347fafeab93350be036f8 poly_int: vectorizable_call
cf1b2ba4ea9ee4b27e341c3f704416dc77d7172f poly_int: vectorizable_simd_clone_call
062d5ccc1180aa6bca717309d26408a029af1fd7 poly_int: vectorizable_conversion
a23644f23da672210ea6a443cefb7cd17111b160 poly_int: vect_get_constant_vectors
dad55d7014374121fd75112014ccadcfb9653182 poly_int: two-operation SLP
b064d4f9d6cb163da32d19cb172cbc4a5fffb39a poly_int: vect_no_alias_p
22afc2b31b75fa61b9558a9be8c8dbb7d4193b8a poly_int: tree-vect-generic.c
e112bba2fced713f1fa6c7f41c6925ee4573f215 poly_int: brig vector elements
d8f860ef70b33d0c49f31114c433b6c654c5a588 poly_int: omp-simd-clone.c
fece509bf196d58d9b31e04d816bb4ecd3f73e89 poly_int: fold_indirect_ref_1
d34457c138d06e989c871e7b295c06a8b9873703 poly_int: folding BIT_FIELD_REFs on vectors
07626e49a0ad431f8e69fcc472400780f3d98044 poly_int: expand_vector_ubsan_overflow
95fe7b4862dd3250e4d6b3e2c592b440b79613df poly_int: load_register_parameters
6b0630fbe8c34255f2739f63a8d3e5b636020bf4 poly_int: vec_perm_indices element type
0ecc2b7db7480fa33d31d95a114b024809cb6883 poly_int: vector_builder element count
16c78b665aa4ce64af71b6ac7ebaa96c9807be4c Directly operate on CONST_VECTOR encoding
b660eccf9b32ee3b962a77cf5565fa2771792c35 Add a fixed_size_mode_pod class
7b777afa955ad765500dfd53d6da990c84067197 poly_int: GET_MODE_NUNITS
edab8e10e3cc127335ae4fa7a5935a28acfae0a9 poly_int: vect_permute_load/store_chain
928686b1c6d0a8b791ec08b2588a5fb8118d191c poly_int: TYPE_VECTOR_SUBPARTS
73a699ae37a7fe98ad0b8c50ac95f5a882fd97da poly_int: GET_MODE_BITSIZE
cf098191e47535b89373dccb9a2d3cc4a4ebaef7 poly_int: GET_MODE_SIZE
5c0caeb37ff72cfd9153e164e9fd9eec7d56e969 Add support for MODE_VECTOR_BOOL
6ce12f6a1647ec2831f3c5908ecf9c23ae191d02 Allow targets to pick a vector prefix other than "V"
c6561a1af68d6439cedde6dc79d19eda9981a4be Add support for adjusting the number of units in a mode
6a3c127cc4e198bd20ae32c37c93cdf7defb0871 Improve vectorization COND_EXPR <bool op bool, ...>
799d6b901de53dcb43cea2fc10ebde9423d09c52 Improve spilling for variable-width slots
b194a722446f51ffa11ea49affe6893a6361cfac Use extract_bit_field_as_subreg for vectors
e251d3ec013bc46d58470988fc45566051a9030b Move code that stubs out IFN_MASK_LOADs
9ce4345afba69ff793ff4df992fc57ec29a92d93 Make vect_model_store_cost take a vec_load_store_type
aaeefd88f464de0a78fa66c8b5e2755babf0d47f Split mask checking out of vectorizable_mask_load_store
3133c3b628da0e39a3ae9cdbd4973de04b214589 Split rhs checking out of vectorizable_{,mask_load_}store
bc9587eb19f6407f5815d46d68325890e29f076a Split out gather load mask building
c48d2d35a122798c047ca7a0f7e0d64293023c44 Split gather load handling out of vectorizable_{mask_load_store,load}
c3a8f964ab330d8e64bb4d33c462c64f4fa35aeb Make vectorizable_load/store handle IFN_MASK_LOAD/STORE
517d489618b115219cdf8e2dc83085176a55eb7b vect-opt-info-1.c: Moved to ...
da374b5b5bb998311935ef989ed41fed1c16366e PR83675: Restore TARGET_VIS2 check for SPARC vec_perm_const
88654ce63de73fc51a47e7d54070c2c0b6b2f34b Allow VEC_PERM_EXPR folding to fail
ccf206491752abc05c608c8475bd925d3969adde Revert DECL_USER_ALIGN part of r241959
8fec4d222f0a35925bfdc4641612120b06d51c59 re PR rtl-optimization/83682 (ICE in simplify_subreg, at simplify-rtx.c:6296)
9ea52d27eca0c56c88a3941b413ef56950d9f5c3 re PR middle-end/83699 (Many 64-bit SPARC gcc.dg/vect tests FAIL)
3e1b80ff33f3a854e757fad185ee86dc30fb3e6f re PR tree-optimization/83580 (Wrong code caused by vectorization)
647c61f1c4623ec9591cb4f10dd94cff5a7b4fa8 PR target/83663 - Revert r255946
a25811c8858901fe414333c836e622257d1506c0 re PR target/83677 (PPC: The xxpermr instruction is not generated correctly)
c8a0c7b660a96081f320c8155f135a46b2202968 RISC-V: Fix -msave-restore bug with sibcalls.
7ad429a4de1197b4b032da0981a2c91ac5d0dd06 Fix permute handling when vectorising scatters
2072a319569067b9b99154e8d1bbec894034652f Mostly revert r254296
f6aa5171a1a0091bcc3741b1ffff9e8a962e728c re PR target/81616 (Update -mtune=generic for the current Intel and AMD processors)
6737facbb3c53a1f0158b05e4116c161ed9bc319 Don't use permutes for single-element accesses (PR83753)
2025a48d089d09011b60c1f5eb981ef71c79be4e re PR target/83399 (Power8 ICE During LRA with 2-op rtl pattern for lvx instruction)
8cad5b143e23668e4b59596972b2249ce2d2d637 RISC-V: Add naked function support.
1ad6e904d4fbad716bc65ac4d0bbdeecf3f552bc re PR target/83203 (Inefficient int to avx2 vector conversion)
c803b2a92822c57abf5464deaf5be5c31d8a4692 re PR target/80846 (auto-vectorized AVX2 horizontal sum should narrow to 128b right away, to be more efficient for Ryzen and Intel)
b27b31dc2d160453e7b05168f1dd195e73cb176b Fix --enable-gather-detailed-mem-stats build.
825010bb37db90c97c9409d3407c8538e3246577 Allow variable-sized temporary variables in gimplify.c
cf736b092afeabe90680443794eb384a9f930cd5 Handle poly_int vector sizes in get_vec_alignment_for_array_type
c0a465457beb663430257375ba529af74b0e4e56 Handle polynomial DR_INIT
646e47bcd15483fcafcc695efefd7a0ddeb4c716 Extra subreg fold for variable-length CONST_VECTORs
11e0322aead708df5f572f5d3c50d27103f8c9a8 Mark SLP failures for vect_variable_length
779fed5fdb6098e67213a82dfd27f5b326a75e88 Fix folding of vector mask EQ/NE expressions
695da53448dcc40e1e5db83bcf14d16217ffbd4a Give the target more control over ARRAY_TYPE modes
7e11fc7f5cecffe650b672ac1af212d4bd9f1335 Add support for masked load/store_lanes
3ea518f6f63e66e48f2d41cfa41e1efae653a484 Protect against min_profitable_iters going negative
018b2744fc7a4fe6fea1a078eae69c5465585668 Handle more SLP constant and extern definitions for variable VF
f1739b4829105fa95d6ff6244632d5977169277f SLP reductions with variable-length vectors
898f07b0458a48a87df334301ada3414ff08d3de Add support for bitwise reductions
7cfb4d93595da03abb4e6414758dc98eb7532b34 Add support for fully-predicated loops
0972596e6d2573a2c7e922c66b017974ed03ad89 Add support for reductions in fully-masked loops
c2700f7466bac153def05a0e070aa78cd2ffc0ae Allow the number of iterations to be smaller than VF
535e7c114a7ad2ad7a6a0def88cf9448fcd5f029 Handle peeling for alignment with masking
76a34e3f8565e36d164006e62f7380bfe6057154 Add an empty_mask_is_expensive hook
bfe1bb57ba4dfd78f8c1ac7d46cf27e8e7408676 Add support for vectorising live-out values using SVE LASTB
bb6c2b68d6961dfe98bece34e4418d7287ce7089 Add support for conditional reductions using SVE CLASTB
4aa157e8d2aec2e4f9e97dcee86068135e0dcb2f Allow single-element interleaving for non-power-of-2 strides
d1d20a49a788bdb82f09ada6377d932ceac07934 Use single-iteration epilogues when peeling for gaps
b781a135a06fc1805c072778d7513df09a32171d Add support for in-order addition reduction using SVE FADDA
bfaa08b7ba1b00bbcc00bb76735c6b3547f5830f Add support for SVE gather loads
ab2fc782509f934ef0cc22c31d743fcb63063c1b Use gather loads for strided accesses
429ef523f74bb85c20ba60b0f83ab7e73f82d74d Allow gather loads to be used for grouped accesses
f307441ac4d58d5a1690081f95b63b70b3e90b48 Add support for SVE scatter stores
a57776a11369621f9e9e8a8a3db6cb406c8bf27b Support for aliasing with variable strides
fc58f4ae9a4051ba6dabe08f3a243a2d97e0e80a Missing vect_double in gcc.dg/vect/pr79920.c (PR83836)
ff3cc569b2d3ba49fe6e2dc07ad761b5d9431c8a RISC-V: Increase mult/div cost if not implemented in hardware.
453ec1ad7aec7e8b9dfab8678330cc1b277f7c64 re PR testsuite/82132 (FAIL: gcc.dg/vect/vect-tail-nomask-1.c (test for excess errors) due to missing posix_memalign)
82279a515eae2b655eaba39e42e7dded25da5e2c Don't group gather loads (PR83847)
e57d9a82996838e73cc5470a1f3367e9c616b947 re PR tree-optimization/83867 (ICE: Segmentation fault in nested_in_vect_loop_p)
fb2f98bb6c5e016514bc3b93f8f1550e39e7d28f Two fixes for live-out SLP inductions (PR 83857)
84e777839cc458da2c24bda8e7be1665be1f709c vsx.md (define_expand xl_len_r, [...]): Add match_dup argument.
e423d5bc0481ee889c3fa251337978675848b0f4 RISC-V: Mark fsX as call clobbered when soft-float.
271134dd4894140542e38a4dcd8b4a07093d823a Avoid ICE for nested inductions (PR 83914)
09a7858b2c53eccf28f780f5f3e4f2764f440eb1 Check whether any statements need masking (PR 83922)
218e2a54e00f70950f441ded237cba8b07466816 re PR target/80870 (ICE building 7.1.0 sh-elf crosscompiler on macOS)
0d918596ace1f32716143a12fd2738bb0e9b2e20 fold-vec-abs-short-fwrap.c: Add xxspltib to scan-asembler valid instructions list.
97e52238b292ca744368f66980533c578838e94c Disable some patterns for fold-left reductions (PR 83965)
ef57eeb23260872cb601a848493488c24cb309c1 Fix vect_float markup for a couple of tests (PR 83888)
0ce42fe12b8e909f30bd57ab24e739d7d6218650 RISC-V: Add -mpreferred-stack-boundary option.
556d3a2433a6e2207c6f36fe292d89d81f46f924 Remove explicit dg-do runs from gcc.dg/vect (PR 83889)
b254c1a2322532451b419c8ce850ab7347f51469 Fix vect-reduc-or_[12].c changes in r257022
73598b3330377a9970f4489f5c5d517f62b51386 PR84033, powerpc64le -moptimize-swaps bad code with vec_vbpermq
5b55e6e333c97aaefc1db6c9d8411de578d05614 re PR tree-optimization/81082 (Failure to vectorise after reassociating index computation)
ee61fae2b1e8315f016384ab5b76dee796d880cd RISC-V: Add --specs=nosys.specs support.
d3f952c5e03e5eb0382e8b24fe8339728a66b922 RISC-V: Allow register pairs for 64-bit target.
7672aa9bc19e2444c3effa2f12274d60022f7d3c re PR bootstrap/80867 (gnat bootstrap broken on powerpc64le-linux-gnu with -O3)
85bb2f9a302acc28dbae6c368d63680aacb15eb1 re PR target/83008 ([performance] Is it better to avoid extra instructions in data passing between loops?)
31b6733b1628a861de4c545bff40acc97850dbbf re PR tree-optimization/81661 (ICE in gimplify_modify_expr, at gimplify.c:5638)
3ae129323d150621d216fbbcdeebf033ef82416f Use range info in split_constant_offset (PR 81635)
17855935101772b79dea35abb696f205f0215e22 fold-vec-abs-int.p9.c: Add powerpc_p9vector_ok requirement.
24fa220cffc9e6bda80d59fff6270a0d71af4ef8 vec-cmpne-long.c: Add p8vector_hw require to dg-do run stanza.
b210f45f527eb017810af815bbb97a8f6939385f re PR tree-optimization/84037 (Speed regression of polyhedron benchmark since r256644)
4253435ecaf28bfc387407dd5a2fb4f4283ed203 re PR target/84154 (PowerPC GCC 7 and 8 have regression in converting fp to short/char and returning it)
3b263f5af20f4ebb92fad0b8797fe59e3cebf828 slp-pr56812.cc: Allow either basic-block or loop vectorization to happen.
414fef4e668856edb8ca885525679c5d5e691fd1 re PR target/84278 (claims initv4sfv2sf is available but inits through stack)
fff2290073cc2d57dcade125227b74cd27c48066 Use nonzero bits to refine range in split_constant_offset (PR 81635)
b5ec4de777870e2d4ff2a5de604eafd1bf0e50df Another fix for single-element permutes (PR 84265)
ebe4bf41d2b96a6b2f1de6a184eb0a7f5c2e5d00 re PR c++/83659 (ICE on compilable C++ code: in tree_to_shwi, at tree.c:6821)
c028d589e94a67795a25763bc95b778e1480f106 vsx-vector-6-le.c: Update CPU target.
5ca8e744641e1b03cc6e4cdbc46e7ece0750240d re PR rtl-optimization/84308 (Memory leak in spread_components)
e519d2e8199746e9d2b6ef70de55f7331df5bc47 re PR fortran/84074 (Incorrect indexing of array when actual argument is an array expression and dummy is polymorphic)
b10bc0d6f9d5e281465c6f8d4197f3158e46e093 Add missing intrinsics for _mm_mask[z]_sqrt_round_[sd,ss]
85c5e2f576fd41e1ab5620cde3c63b3ca6673bea re PR tree-optimization/84037 (Speed regression of polyhedron benchmark since r256644)
78604de064490c8c12d2d4efadbd453f7c8c7685 re PR tree-optimization/84037 (Speed regression of polyhedron benchmark since r256644)
848bb6fc0e502345536b25e1a110eb7f01eccbc1 re PR middle-end/84309 (Wrong-code with -ffast-math)
9bc5ecf3bcb25abbf868d52e7db076248e0ef174 RISC-V: define _REENTRANT with -pthread
e4c1b7e32283b3886847f9e14b33bda5e5d5d448 rl78.c (add_vector_labels): New function.
43edc4f5ac0d0a679b87338043f5d6a372750533 rl78.c (rl78_attribute_table): Fix terminator and entry for "vector".
316b2a2d842eca1cf1a2f31afba946d6328c5477 Check array indices in object_address_invariant_in_loop_p (PR 84357)
7c102986d6f8205ebc3952344c64edbcd7018fbc gcc/testsuite/ChangeLog:
10789329789fbb5b87883fca029e745a06ded6a0 RISC-V: Change sp subtracts so prologue stores can compress.
be77ba2a461eefdf4a2676b19025f36ec092c598 re PR tree-optimization/84037 (Speed regression of polyhedron benchmark since r256644)
7d6ce202609bd8bcbd8618507cef32e793b477e4 re PR fortran/84381 (replace non-std 'call abort' by 'stop 1' in gfortran testsuite)
73829f90459f40d7362fc3ac2d883ac98f1670a9 re PR tree-optimization/84452 (ICE in expand_simd_clones at gcc/omp-simd-clone.c:1612)
ef7866a3f1395f16872a0d61e111660e302a674d re PR middle-end/82004 (SPEC CPU2017 628.pop2_s miscompare)
9bd958c5f361337b15958be8641d59ad38bd0a2b Fix incorrect TARGET_MEM_REF alignment (PR 84419)
b613cc2e9120ea002f8a0855d2620ee4ba8fbfe5 re PR go/84484 (libgo configure tests fail to find -latomic)
7874b7c5b59923d8a56eaf41f7518c71b910355e re PR target/81572 (gcc-7 regression: unnecessary vector regmove on compare)
6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6 PR c++/84424 - ICE with constexpr and __builtin_shuffle.
8562191ad25bd094d393ef4e65b96542a14e8fab re PR c++/84556 (C++17, lambda, OpenMP simd: sorry, unimplemented: unexpected AST)
d99dcb77bbbfdaf30c5993ea917001da259f47ba Make fix for PR 83965 handle SLP reduction chains
b1ddb654aba3859e025565c0af35d1a704c8e5d0 re PR tree-optimization/84512 (Missed optimization: should be precalculated in compile-time)
e688c1ddef2462da3b0dc86e0ecdab87c77a6829 re PR target/84534 (several powerpc test cases fail starting with r257915)
962e91fcf043edab3684dd0564efd3df219d3cb1 Use loop->safelen rather than loop->force_vectorize
70088b953b22eb6a9878d272e4e2a8add136ebc8 Avoid &LOOP_VINFO_MASKS for bb vectorisation (PR 84634)
74f8705ebe6ebf42bcfb46cf1c9a26a5ab3bace8 re PR c++/84578 (ICE with flexible array member and constexpr)
b79fa2f609c70a70125c979e363176002d1f9acd re PR tree-optimization/84777 (-Os inhibits all vectorization)
0dbacfcfadec514b5ccd4ae70fe53dc589ae7439 Fix PTA info in IPA ICF (PR ipa/84658).
a7af848991809005fee685e3fe15a39110136f3e RISC-V: Add and document the "-mno-relax" option
9bb45a958d5281b3979f538a05ffa80c6833c4f7 re PR c/84853 (ICE: verify_gimple failed (expand_shift_1))
22534ea5549e970de4466fe492dacc61c2ff471f re PR target/84711 (AArch32 big-endian fails when taking subreg of a vector mode to a scalar mode.)
15f0c25f4e9194fd03b2788769b7e1163e5caabd [testsuite] Require vect_int_mult in pr84512.c
ce811fc49bb470856f6c4953c071d5b3db6485bb re PR c/84909 (typo: conversion from %qT to to %qT)
928b965f29f587bb033555f0db646c94afe8e7ef Don't try to vectorise COND_EXPR reduction chains (PR 84913)
8455b50eccdeac648fd0ebd0b7dd60b0e8bbffbb re PR target/84711 (AArch32 big-endian fails when taking subreg of a vector mode to a scalar mode.)
c0d3d1b681f7847299b2e8e14c61cf903d6ee8fd RISC-V: Fix bootstrap failure.
df1f46241d8f1869b492023c9f4e1389a12675c4 [testsuite] Add nvptx xfail to pr84512.c
91d014fffae1fcf1eb750d40e622e5b80cd1a4ec re PR target/83789 (__builtin_altivec_lvx fails for powerpc for altivec-4.c)
5a0729f5a4c323aaee60fa93a1b0823c74e32f4e Fix some libstdc++ testsuite failures
aa1c94299c2b81f7728011ada92eb7761144b854 re PR c/84999 (ICE in make_vector_type, at tree.c:9561)
a199d5e74bf37ee4306c70a03c6c58f9935d54c3 Use SCEV information when aligning for vectorisation (PR 84005)
36a4fb13d88960c9950a2a68b05321422245658a re PR testsuite/84004 (gcc.dg/vect/vect-95.c XPASSes)
b36306e9bc664cdbc2f65ecc33867cb7b6e896b3 re PR testsuite/82847 (gcc.dg/vect/slp-perm-9.c fail)
153dba6cbb3b37ad07d23d212890b2bd055ac05f re PR c++/85077 (V[248][SD]F abs not optimized to)
69c94135fc0d62a7ccb017dcc0e0b79c44d3d26e xmmintrin.h (_mm_max_pi16): Use __vector __bool instead of __vector bool.
7be6ee78d62f0fe1ea00fb6c436b535b391f6d92 re PR middle-end/85090 (wrong code with -O2 -fno-tree-dominator-opts -mavx512f -fira-algorithm=priority)
b7ef9225f7f997a37f96a3a9c2eb31533865822b RISC-V: Fix for combine bug with shift and AND operations.
c23ecd7b27ee7bdb458dacbe0a3f826b4efb4953 re PR testsuite/85154 (gcc.dg/vect/vect-95.c fail)
4304d6180adc0b3ef2c9fe2a63e829d5f518a12d re PR target/85169 (wrong code with vector member insert)
8ab30b9778a46cbf0a0853c78cd799b9afca61c5 emmintrin.h (_mm_cvtpd_epi32): Use __vector rather than vector.
f46de383ed507006d6f1d9737856ad0db81ba470 re PR tree-optimization/85191 (gcc.dg/vect/slp-perm-9.c FAILs)
628a15343e494e457c647347e879c69a62016e0c re PR c++/85146 (ICE with __direct_bases for declared but not defined struct)
61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7 re PR c++/80956 (ICE with abstract class vector)
4d47fe5a8f4a7d0275237c2fb45bad8f654467eb RISC-V: Support for FreeBSD.
eda71a9eeaaf1ea16ba56d8cc5a4eb194f6025f7 re PR tree-optimization/85257 (wrong code with -O -fno-tree-ccp and reading zeroed vector member)
f0caea4872076e02cad511db85a2437317c035c1 re PR fortran/83064 (DO CONCURRENT and auto-parallelization)
eb38d071636da1ea2d0f9a068c86c7ceee2634b2 Add missing cases to vect_get_smallest_scalar_type (PR 85286)
2377345dcef913b6f957e1e27a6c82efede47cfa re PR testsuite/85190 (gcc.dg/vect/pr81196.c FAILs)
ef45fd3ba15237b751b530bff1f2691c4988d02b re PR testsuite/85190 (gcc.dg/vect/pr81196.c FAILs)
65739a688542b637b6a9f99aed2de84d9b84460c re PR tree-optimization/82965 (gcc.dg/vect/pr79347.c starts failing after r254379)
2368eaf95dff456f6527f6d82579af0246141553 re PR fortran/81773 ([Coarray] Get with vector index on lhs leads to incorrect caf_get_by_ref() call.)
34722c3669ee87bd6754d4346e12e822641b0cd7 re PR target/85080 (gcc.dg/vect/costmodel/ppc/costmodel-pr37194.c fails starting with r248678)
035fc2add18c0dd06c22bd158a47bf35b8c1c528 RISC-V: Fix 32-bit stack pointer alignment problem.
f53e7e138cf20f1a10fbcef2c14d838f494d4610 re PR tree-optimization/85446 (wrong-code on riscv64)
19986382015e2aa8dc539bf31065af4bdff5ce84 re PR tree-optimization/84737 (20% degradation in CPU2000 172.mgrid starting with r256888)
18108d94e9aff71811a7923fe67db7626378f565 re PR tree-optimization/85467 (ICE: verify_gimple failed: non-trivial conversion at assignment with -O2 -fno-tree-ccp --param=sccvn-max-scc-size=10)
e91eba31fdc49d928090a9b0424247fd6029f044 [nvptx] Fix calls to vector and worker routines
9b922d6aaf143d35ed5f1c116f0a0702df6ae04c RISC-V: Make sure stack is always aligned during adjusting stack.
559fb136c980cd1d52af43202c3a9dc511ea2240 RISC-V: Pass --no-relax to linker if -mno-relax is present.
062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1 re PR tree-optimization/85478 (ICE with single element vector)
c76d9edb09d262a3badc87d5583abcfbc2e94854 tree-vect-data-refs.c (vect_get_data_access_cost): Get prologue cost vector and pass it to vect_get_load_cost.
af1682fc3aaff288f7ac95cf5585971cef15f0ab Microblaze Target: PIC data text relative 2018-04-30 Andrew Sadek  <andrew.sadek.se@gmail.com>
b94c2dc138c60636e3898b04c1026cbb1b868b26 Add VEC_ORDERED_REMOVE_IF
9e4da9b5d5d3d8e14ab1748fafb08c6b9bfcf629 Tighten early exit in vect_analyze_data_ref_dependence (PR85586)
d6476f90da4bfcb8644da32d3b4c4685a72bc84e re PR tree-optimization/85597 (internal compiler error: in compute_live_loop_exits, at tree-ssa-loop-manip.c:229)
27db01d8039a1a1664bcd1ebd1f66cedcfe72398 deque.tcc (deque<>::_M_assign_aux): Cast to void to ensure overloaded comma not used.
dd17274465724f65c09dc2f654d92f6ba92cd90f bb-reorder.c (sanitize_hot_paths): Release hot_bbs_to_check.
53481a280fa276a7c53e1279e3a58d7e7e736064 vsx-vector-6.h (foo): Add test for vec_max, vec_trunc.
080dc24383a602a5a4095eb05b04100f15ba1ad4 [BRIGFE] phsa-specific optimizations
93249dde869329933da091a355032c95e80daf44 Backport of RISC-V support for libffi
ad088249a266b75343cfa293ae16cc03996f3695 Tighten condition in vect/pr85586.c (PR 85654)
ec332f1b44acfdc8fd08680ea75b9f3c23626cd0 Make std::regex automata use non-debug vector in Debug Mode
90aabc7e9be942324952d8705e753ff02cf631a3 macros.h (__glibcxx_check_valid_range_at): New.
37d57ac9a636f2235f9060e84fb8dd7968abd1dc [PATCH] RISC-V: Use new linker emulations for glibc ABI.
3ba4ff4130903a3ded931d715a2204bd8834fe60 Add clobbers around IFN_LOAD/STORE_LANES
a296d6d3bdd83a617e789641b828ff53f65a4ec6 tree-vect-slp.c (vect_bb_slp_scalar_cost): Fill a cost vector.
f2410266a00a3ebd6db07007aa82333b4f6ee6c2 RISC-V: Add with-multilib-list support.
5a599c460e3846df80aaabd2b4629544337167ba re PR tree-optimization/85692 (Two source permute not used for vector initialization)
b0e01682467a22a00530704669d8c253e6dac522 Remove unused headers from tests
1f3cb66326d724cca10ac6097ab32c53191c53ff Handle vector boolean types when calculating the SLP unroll factor
68435eb293a6b9c161936bccab66e4b1f702372b tree-vectorizer.h (struct stmt_info_for_cost): Add where member.
6747254bbaba5bfdb75c7d24e2d14ffaf7cece3b vsx-vector-6-be.c: Remove file.
110fb19f6c6a4a9dfb9cfe00d3295cccf5b00507 RISC-V: Minor pattern name cleanup.
28a8a768ebef5e31f950013f1b48b14c008b4b3b re PR target/85323 (SSE/AVX/AVX512 shift by 0 not optimized away)
6a03477e85e1b097ed6c0b86c76436de575aef04 re PR target/85323 (SSE/AVX/AVX512 shift by 0 not optimized away)
eb69361d0c5e98423e7ad7a537bc3250e083de4a Allow gimple_build with internal functions
bb4e47476537f6431fbbf29cc804252b1504bbc2 re PR tree-optimization/85793 ([AARCH64] ICE in verify_gimple during GIMPLE pass vect.)
7bbce9b50302959286381d9177818642bceaf301 RISC-V: Optimize switch with sign-extended index.
09baee1ab152afb0466c00ce87f0d681f2a50e21 RISC-V: Add RV32E support.
67e9518e20b8b836bbaa9dc783bd6a4db56c2bcb re PR fortran/85841 ([F2018] reject deleted features)
4515e413cb72d3a71b41d3e85da1be03fa88677d re PR tree-optimization/85863 (ICE in compiling spec2006 fortran test case solib.fppized.f starting with r260283)
927a00917dfdf5585159803211c71910b32da10f re PR fortran/85841 ([F2018] reject deleted features)
aeaa0347e94b1dfa040809b3b098fcc0474d45f7 [Ada] Vectors: spurious error in -gnatwE mode
159440699bf6f97dccc94377d9d69e540a1904dc Fix SLP def type when computing masks (PR85853)
c453ccc2335bf4267a154c9385eb50a8c45235a1 Use canonicalize_math_after_vectorization_p for FMA folds
9d4ac06e0235697c7fa3144b6790b779e6385ea5 Add an "else" argument to IFN_COND_* functions
2c53b149b7476fabd329429b2a6dce090f580ff4 tree-vectorizer.h (STMT_VINFO_GROUP_*, GROUP_*): Remove.
0d2b3bca81acf226e6c10defbc6072de4cf7e75c Fold VEC_COND_EXPRs to IFN_COND_* where possible
8f76f377861b4195487416806c4a0eacabc433c9 Prefer open-coding vector integer division
6c4fd4a9fec0af65249a11e44341b5f3f5b209b3 Add IFN_COND_{MUL,DIV,MOD,RDIV}
8e846c6670b85cd69a5760a604d8f9ce0dbc3730 tree-vect-data-refs.c (vect_find_stmt_data_reference): New function, combining stmt data ref gathering and fatal analysis parts.
b55f342bdd8bec16b727a5889c589dd85c5ca3c3 re PR target/85832 ([AVX512] possible shorter code when comparing with vector of zeros)
27312bf2148af2bea946fcec8f4c2e1231e8d63b tree-ssa-alias.h (refs_may_alias_p): Add tbaa_p bool parameter, defaulted to true.
99dcfb5fc184d4eeb2753ae9475bda4d58266161 Fix test case failures for pdp11 target.
d0ebdd9fce00f5fbfec615d72f1dedf0cd7762a6 RISC-V: Add interrupt attribute support.
70d22cdd77fdd3a11514735a7992b5f07bd50159 re PR target/85918 (Conversions to/from [unsigned] long long are not vectorized for AVX512DQ target)
b29502e735e6eafd451a27422e5c8fe211ad0716 re PR tree-optimization/85934 (ICE: verify_gimple failed (error: type mismatch in vector pack expression))
3b1cffccce40e80eeb5f24893ce4fbd0e242b319 re PR middle-end/85933 (FAIL: gcc.dg/sso/p8.c   -O3 -finline-functions  (internal compiler error))
f8c0baaf31ac987bd1e85a3ba2fa8a2edeff92a8 tree-vectorizer.h (struct vec_info): Add stmt_vec_infos member.
1bda738bab8193f0fb4551672d3be928d2015cd2 re PR target/85918 (Conversions to/from [unsigned] long long are not vectorized for AVX512DQ target)
e379122d1f078d230514ff862c4f9053c2898af4 tree-cfg.c (verify_gimple_assign_unary): Add checking for VEC_UNPACK_*_EXPR.
fec0bf3084f5d5531fcdc81e13b4813db31a1750 tree-vect-data-refs.c (vect_preserves_scalar_order_p): Make sure to use non-pattern stmts for get_earlier_stmt arguments.
5af3ff21594b92c698fdc43269a0020f95a15c23 RISC-V: Fix a comment typo.
3c5d07ab057a1cbe23ca655d172bfb53581be960 [Ada] Spurious tampering check failure
57c454d29c12a948fee4a0b437fd57af870710b4 tree-vectorizer.h (vect_dr_stmt): New function.
fb289175ff675d90d5ab24e60c177e4e943d0ebe altivec-12.c (main): Fix declaration of ucz to make it consistent with the naming convention in the file.
69311919e2f67b5bcf474700dd2c1127553addcb Commit 260294 on 2018-05-16 by Carl Love was supposed to add the following files.
1fc9aa543f41a1485187c96806950795a7966974 re PR target/85832 ([AVX512] possible shorter code when comparing with vector of zeros)
8566678b9da3db996f7566ecb691be07ff376c8f Fix expand_expr_real_1 handling of BLKmode bitfield references
fd1e52dc252b33f918891458774f784e96fdf47e RISC-V: Don't clobber retval when __builtin_eh_return called.
1b58c736db9d28975f596f5175c9f9470723c166 re PR target/63177 (Powerpc no-vfa-vect-depend-2.c and no-vfa-vect-depend-3.c failures)
ec74725ce3ed5c96783b76992940d99563c82a47 RISC-V: Add interrupt attribute modes.
1ac2bdb45faaa455afcb3b77eb824dde429c27fb Port IPA CP to edge_clone_summaries.
4af78ef8695b08bd9b7061b350631d2ca5682470 Convert dump and optgroup flags to enums
adff928a6d5fba623c579898cb92077abc970443 vsx-vector-6-be.p7.c: Rename this file to vsx-vector-6.p7.c.
a14175560cca5da1f9ff776c5c7309473397d43d Define special members as defaulted
058872eaadac43dcf75839ba6b951619fea14fe1 p8vector-builtin-3.c: Add vec_pack test.
87cbbc45a950f382853e2e4cf494cdfab62f0e5b libgo: add riscv and js/wasm as known targets
8fd966327ae16a820143f589dd48b8c17a6f6ae5 Tighten LRA test for reloading the inner reg of a paradoxical subreg
7b76867b211f2db8df2f98926ef47fb8c9ea29ee tree-vect-patterns.c (vect_recog_vector_vector_shift_pattern): Properly set vector type of the intermediate stmt.
4c1d999a7e937da0d417e8153f54b646603bb210 PR libstdc++/83982 fix exception-safety guarantee of std::vector::resize
fa6852317327d978d4069175952109505204f6ae re PR tree-optimization/86159 (g++ ICE at -O1 and above on valid code: incorrect type of vector CONSTRUCTOR elements)
d1ac60d5759dc63e4f03311d6c85cda8c9d12133 tree-vect-slp.c (vect_slp_bb): Dump MSG_OPTIMIZED_LOCATIONS here, also noting vector size used.
8422c296a8cbe0317fd06aace694ed0c01f67d5b [testsuite] Remove xfail from vect-abs-compile.c
adac3a685da705d6811d4069f57e1bc73a95a957 Introduce DUMP_VECT_SCOPE macro
df0aef6d7e755b5150ddd8fe8fa4209461541cf0 re PR tree-optimization/86179 (ice in get_later_stmt, at tree-vectorizer.h:1108)
5b04d77ed52bb0317f9793bc95a1ec0370571f35 tree-vectorizer.c (try_vectorize_loop_1): Split out of ...
d54a098e48987e7368ff190b703efd72aba9e6d9 [1/n] PR85694: Allow pattern definition statements to be reused
e3947d809d75c6bc47e600ce490c238006c2de2b [2/n] PR85694: Attach a DEF_SEQ only to the original statement
ed7b8123fab1de4d6da98774262c123f6d1226f9 [3/n] PR85694: Fix dummy assignment handling in vectorizable_call
44ae7a002c23ff0ab884350b5f05876ece985387 [4/n] PR85694: Remove redundant calls to types_compatible_p
1f78617090283f22825807fcc0533e27e983dcde [5/n] PR85694: Remove dead WIDEN_SUM handling
259273074e86ec82c73a4420c102912de6baeabd [6/n] PR85694: Add a vect_get_internal_def helper
49d8df1b95ac68fee5420a4ad7a0cab006302e0e [7/n] PR85694: Add a vect_pattern_detected helper
1cbfeccc8d5ddade3a1727e18fe31c1e83e81701 [8/n] PR85694: Make patterns check for target support
5fa234669f3882aa2190c916df497259153412e4 tree-data-ref.c (dr_step_indicator): Handle NULL DR_STEP.
31dd69b7ff60979b615e45229f759613873989e6 Update OpenACC testcases
84ee432143874a776a5597f77615db3f39cb7c58 altivec-7.c: Add qualifiers for counts on AIX versus Linux.
8c9632905d39afc3c431d0ff4d318d15c9250344 tree-vect-data-refs.c (vect_check_gather_scatter): Fail for reverse storage order accesses rather than asserting they cannot...
f2227a6696f136a181a208d291eb44769a7721e0 tree-vect-data-refs.c (vect_find_stmt_data_reference): Modify DR for SIMD lane accesses here and mark DR with (void *)-1 aux.
ca823c85882f5a0ca9779d8cd7adfcec02549d3b tree-vectorizer.h (struct vec_info_shared): New structure with parts split out from struct vec_info and loop_nest from...
3685dcd7fb618b8dc7c7352a76a55efa959aae84 PR libstdc++/86292 fix exception safety of std::vector<InputIterator> constructor
9ae91886f6a59fbcba0559299e170ee82fa592cb re PR tree-optimization/86287 (AddressSanitizer: heap-use-after-free on bootstrap with -O3)
4f5b9c803ac4edc639d8bf4a827ba40e4dab4db0 Introduce dump_location_t
d5e545a7cc2c9d5e5ed4534e8f7901723ded4d89 fold-vec-neg-int.p8.c: Specify powerpc_p8vector_ok requirement for this test.
356d53635faecee4b8abfc6b21208432c72eebff Add test case that was supposed to be added in commit 255556 on 2017-12-11.
c2fd033cdf1876ff4ec91c747c6fc569de19b322 tree-vect-data-refs.c (vect_analyze_data_ref_dependences): Assert compute_all_dependences succeeds.
6475e077a091ea57b7442ed35feaf031728bdeb2 dumpfile.c: add indentation via DUMP_VECT_SCOPE
894dd753ca8a4120078324cc6cf0ba01afff9cab [9a/n] PR85694: Reorder vect_is_simple_use arguments
0f8c840c28c11b13e630b55ad3dc6e0670b4f817 [9b/n] PR85694: Make vect_is_simple_use look through pattern statements
7b98e98a98c95029434200cdfc5ad87e204d79b4 [10/n] PR85694: Split out check for vectorizable associative reductions
41949de9de0c8ebabb7adb2701e775ecd671aa72 [11/n] PR85694: Apply pattern matching to pattern definition statements
003479340f5ae6b7407b5c92e3e1915101552377 [12/n] PR85694: Rework detection of widened operations
3330053ecaafe8bca82cc3845be9b2d01a614eb1 [13/n] PR85694: Try to avoid vectorising casts of invariants
666fdc46bc848984ee7d2906f2dfe10e1ee5d535 RISC-V: Add patterns to convert AND mask to two shifts.
d379ac227de025d1d44d43ae0bf892f63e4a324b Fix typo in vect_recog_widen_shift_pattern
eb153f07b3618de080b778ffff5693d94bf785b4 RISC-V: Fix interrupt support for -g.
30f502eddecac8ecfbec4b86f3a80f1859076b6d tree-vect-stmts.c (vect_is_simple_use): Consolidate dumping, always set *dt.
3239dde94019f11e6c1a8c6ae2b3f7d944689148 Avoid matching the same pattern statement twice
370c2ebe8fa20e0812cd2d533d4ed38ee2d37c85 [14/n] PR85694: Rework overwidening detection
4ef79c960aa0967cf0298dc496a30a40d86ebd3c [15/n] PR85694: Try to split existing casts in widened patterns
0267732baeb06ec100c1d610197bb88aae1c5123 [16/n] PR85694: Add detection of averaging operations
ba9728b0349aa6dbfae020b283ed8ca9f073bf1f Clean up interface to vector pattern recognisers
9c58fb7aa5e719a3ce9acd94740371e139c035be Ensure PATTERN_DEF_SEQ is empty before recognising patterns
776bfceac8ba24bacd1e76fc768e9b2b10c0e81c Pass more vector types to append_pattern_def_seq
25d861fef34b44f720de813410f29096d4406b02 Remove "note: " prefix from some scan-tree-dump directives
315aadc8642b72fc2d7172312a35e18074cca85b stl_algobase.h (__niter_wrap): New.
15333be70addf4eb750d82d5e298cd3ad33b711a re PR tree-optimization/85694 (Generation of vectorized AVG (Average) instruction)
c98446bc37da231419f6524d788dc6a4712458c8 [testsuite] Remove 'note:' from scan-tree-dump directives
d6e5a37a0402177713e9496f0d852e2e1147437f Correct subreg no-op handling for big-endian vec_select.
09cff37bfdcc9407a72262cbdd6fd3350488d934 Replace NO_IMPLICIT_EXTERN_C with SYSTEM_IMPLICIT_EXTERN_C.
edace3e2295db80d32b1a77676a3697c5029d71b RISC-V: Add support for riscv-*-*.
8660e7908fb884b5a0dda37f937ecced3da16070 Require sse for testcase on i686.
6cd6119c421211c989f53f6d4e457d7523bdacf5 Makefile patches from initial RISC-V cross/native build.
7cf2b955893a333c6f6e4c60427832e97dd2bff7 RISC-V: Initial riscv linux Ada port.
962b3564e98b2634a2d001eceb946d8f15f9bfae re PR target/84711 (AArch32 big-endian fails when taking subreg of a vector mode to a scalar mode.)
4a669ac35988fa6de5931455fb59c713563bc58b tree-vrp.c (vrp_int_const_binop): Change overflow type to overflow_type.
11fcb8f2a69bfdeeafc4b0594b71b85d4e285242 RISC-V: Finish Ada port.
100291de48d70d56f8ec31e8ba8d9edd1ee95b45 re PR fortran/86421 (OpenMP declare simd linear ref in module causes gfortran to bail out)
6a86928d9882c17b7526d657a38cb314fa0aaba6 Extend tree code folds to IFN_COND_*
b41d1f6ed753bf7ae7e68f745e50c26ee65b5711 Add IFN_COND_FMA functions
0936858f081b77319f8f6e5825dc86d2861d0445 Support fused multiply-adds in fully-masked reductions
2c58d42c3ed599b4c2976fc173eefd8e016ea216 Use conditional internal functions in if-conversion
5249ee4d79855edda91b26bb07c9c8737cdfc96c Implement SLP of internal functions
8528f27bda0fd315eef48827c10a9c488071ceb3 RISC-V: Error if function declared with different interrupt modes.
ac07bbf29aefd11bd0786d954592a424ccf3dfc5 RISC-V: Silence expected Ada testsuite warning.
12af29ab10fb5677cf947bcd7530c5f57c97522e RISC-V: Fix nested function trampolines.
e6de53356769e13178975c18b4ce019a800ea946 Clean up of new format of -falign-FOO.
eb5926451a7873a62de7ef02cba9f671bad14b88 re PR target/86557 (missed vectorization with std::vector compared to icc 18)
ef856020de21b5e66e0aaec2d2b186817ae2829b PR bootstrap/86621 - 'alloca' bound is unknown in tree-vect-slp.c:1437:16
651a79532c8e87ac096419d9852a295f9e284fe4 re PR target/86591 (gcc.target/powerpc/builtins-1.c fails starting with r261904)
ed623edb473d862673fc0bbc6b878074667ca5fb Avoid &LOOP_VINFO_MASKS for bb vectorisation (PR 86618)
e8dce850a7ffcffff4690f62f85e0ed4ede4d82a Fix ceil_log2(0) (PR 86644)
e98edc20cd615f43afce32c5de40d59fa25e40ed optimize std::vector move assignment
2b69e93cd1af407becc58ba5c48252af20d35e44 Remove dg-require-cstdint directive from tests
4cdfee3f206d784f8a502af4f34180a0762df4fe [libgomp, nvptx] Handle per-function max-threads-per-block in default dims
0847049dc7a630e4bfa079767ed42c742ff6276b [01/46] Move special cases out of get_initial_def_for_reduction
ac1359be3a39f4d12342c98c2a2e77bd59a839f4 [02/46] Remove dead vectorizable_reduction code
6e2dd807c2aaaba8906a36766b9f98dfbeddc27d [03/46] Remove unnecessary update of NUM_SLP_USES
83a400d0a57c998508c31389286d6fb427985139 [04/46] Factor out the test for a valid reduction input
79cc8302f73a56dd1e84e87a26d35ed7e5bfea53 [05/46] Fix make_ssa_name call in vectorizable_reduction
4fbeb36361aab0c197c01f6268e442446f2c1fa8 [06/46] Add vec_info::add_stmt
6585ff8f3a55bbfed6a4f2c2addac7a27ed087d3 [07/46] Add vec_info::lookup_stmt
c98d05955ba54fcdbae37f2a9e81b8cca6f1ca59 [08/46] Add vec_info::lookup_def
0d0a4e205bb6da84e9218c483acf7b13453f0698 [09/46] Add vec_info::lookup_single_use
dbe1b846648fad29d105e2e503120a4279a32593 [10/46] Temporarily make stmt_vec_info a class
fef96d8e2a370e826acdf914d51c88aa2657340a [11/46] Pass back a stmt_vec_info from vect_is_simple_use
e1bd72966309ac459a55e2bc64ad355272d402f5 [12/46] Make vect_finish_stmt_generation return a stmt_vec_info
10681ce8cb6227ae5c11cc74ddf48f2fc5e6f87e [13/46] Make STMT_VINFO_RELATED_STMT a stmt_vec_info
1eede195fc02f5198b48d75b3fb7705c4c1493dd [14/46] Make STMT_VINFO_VEC_STMT a stmt_vec_info
16edaeb8a6b1cd72b2eedfe8cac684ac3f4785c2 [15/46] Make SLP_TREE_VEC_STMTS a vec<stmt_vec_info>
542ad08cea053ac4a02729e2f37c67bb50019bc0 [16/46] Make STMT_VINFO_REDUC_DEF a stmt_vec_info
32c91dfcfddc4f3c594aa24e803ee605a259f2a9 [17/46] Make LOOP_VINFO_REDUCTIONS an auto_vec<stmt_vec_info>
b978758186fa187d52d2c4a02cdc8474d361a0dd [18/46] Make SLP_TREE_SCALAR_STMTS a vec<stmt_vec_info>
78e02b3bbb00fc898c550b88161838eb5dd95806 [19/46] Make vect_dr_stmt return a stmt_vec_info
bffb8014d0566af64c3cd5c7afac21c125a14df2 [20/46] Make *FIRST_ELEMENT and *NEXT_ELEMENT stmt_vec_infos
f698fccf099a69415619858062431c9383caf070 [21/46] Make grouped_stores and reduction_chains use stmt_vec_infos
c26228d41bcbb1a8027570cbef7a2c00ed75f2d6 [22/46] Make DR_GROUP_SAME_DR_STMT a stmt_vec_info
7bcbf2d83269394899f27695e19715dca8f098bf [23/46] Make LOOP_VINFO_MAY_MISALIGN_STMTS use stmt_vec_info
211ee39b9d1d7d670dd4885bd1f4f038680a1e90 [24/46] Make stmt_info_for_cost use a stmt_vec_info
95c68311b61f6bbb013d0eb2e4403f01c76bf622 [25/46] Make get_earlier/later_stmt take and return stmt_vec_infos
beb456c375ea71d57e35400e9b7107e09e996965 [26/46] Make more use of dyn_cast in tree-vect*
91987857e694109fa312c9d2d83785aee5fb9c28 [27/46] Remove duplicated stmt_vec_info lookups
86a91c0a7d39103bc26f6a9f6cd0b329c9027161 [28/46] Use stmt_vec_info instead of gimple stmts internally (part 1)
a1824cfdcd12f2c928b2aa00278082c56e818497 [29/46] Use stmt_vec_info instead of gimple stmts internally (part 2)
eca52fdd6c570658e417ab38d25e0874d0c9c044 [30/46] Use stmt_vec_infos rather than gimple stmts for worklists
825702749aee7017548db2075cf225a6ed2e3ca8 [31/46] Use stmt_vec_info in function interfaces (part 1)
32e8e429c685629fc4363138f564f41de47aa7a2 [32/46] Use stmt_vec_info in function interfaces (part 2)
d7609678843a0711cf77b5530149658c3997a906 [33/46] Use stmt_vec_infos instead of vec_info/gimple stmt pairs
e4057a3920490abb69bb22237ebe380ac4fd64f5 [34/46] Alter interface to vect_get_vec_def_for_stmt_copy
cef6cac8bcacc3314760686dfae7b23efdf7db07 [35/46] Alter interfaces within vect_pattern_recog
634e7150449157267db1a1152370b11446acb6d0 [36/46] Add a pattern_stmt_p field to stmt_vec_info
f44fb7aa84e0c1f9c0721a69f7b0f157d6058686 [37/46] dr_aux tweaks
89fa689a9e898ccb81b966477b3ac4e254461b05 [38/46] Use dr_vec_info to represent a data reference
1e5e6ff5e63127a7a6ae4ee64d08a22a41a021c4 [39/46] Change STMT_VINFO_UNALIGNED_DR to a dr_vec_info
f5ae28565e7b0788c6b7a4945c2b67c54f46c45a [40/46] Add vec_info::lookup_dr
b5b56c2a039cd308a9d00fc35baf65c1fb59070b [41/46] Add vec_info::remove_stmt
9d97912b85ac4a86767f4f1b6c47efa1ce0ba6af [42/46] Add vec_info::replace_stmt
458135c0354f19eb2bd032d42c27076def8c31de [43/46] Make free_stmt_vec_info take a stmt_vec_info
6ef709e50228eb23c25d3620ac6eadb6d765d40d [44/46] Remove global vinfo_for_stmt-related routines
dddecc5c01a0cdeb06704ed98eac881ead550664 [45/46] Remove vect_stmt_in_region_p
ddf98a96d0112377361258068a167ba7e51ed345 [46/46] Turn stmt_vec_info back into a typedef
047fba343dc9fba211a10058bc423c6373cc57f8 Fix over-widening handling of COND_EXPRs (PR 86749)
99615cf595266cdbe27fb3caf201fa38bd1f8d8b [01/11] Schedule SLP earlier
8fe1bd30e6e1319cde10ed417abbfe87d3511edc [02/11] Remove vect_schedule_slp return value
b0b45e582f31b496ea37a76a20b1f79b25165635 [03/11] Remove vect_transform_stmt grouped_store argument
211cd1e2358d52d3863f727b650c65650dd5ce89 [04/11] Add a vect_orig_stmt helper function
6e6b18e5fbe6be62334c9007a58224fb3700d43a [05/11] Add a vect_stmt_to_vectorize helper function
2d4bca81bd7dceb0701e5cd87132d8e3892c22ba [06/11] Handle VMAT_INVARIANT separately
beeb6ce8631cd0e23160dbbafd5f43d16a749e02 [07/11] Use single basic block array in loop_vec_info
41b6b80e1a70f3731a45d991a83c5bc4a7f73ea4 Fix remove_stmt in vectorizable_simd_clone_call (PR 86758)
a19f98d5defb7a173725e89b1fed532c66561f61 Fold pointer range checks with equal spans
ca9a1314ec5f2b58921e24abdcebae1482c0e2c6 xcoff.c (struct xcoff_line, [...]): Remove.
0246112a9d59b22cc06165b6586b8dc0d76b72a1 Handle SLP of call pattern statements
1ae45251d9fb6b68046cbe1c6f942e1aacdeaf0a [Ada] Partially revert "Makefile patches from initial RISC-V cross/native build."
4c9291262affd31e66dec1c8af607e07a8ce2904 Fix gcc.dg/vect/no-section-anchors-vect-69.c on SPARC etc. (PR tree-optimization/80925)
4beb66421fe0e19d3310c75af3502018119423c6 Fix invalid assumption in vect_transform_stmt (PR 86871)
3dec9a89d480616a4c11454f4ef4030d15a49773 Restore flow_bb_inside_loop_p tests (PR 86858)
b8d5e148f669d56ccfd294dc396daba607237cdb Allow inner-loop reductions with variable-length vectors
1fc9d0b0e4657b29ff140fa03dca1711aa5a1198 Define aliases for containers using polymorphic_allocator
68d235936bff881b22b6f9a8ab4446c225064454 backport: ffi.c (ffi_call_go, [...]): New functions.
b8eac4d06438eb3dfe3c7d88b4b5b16ee0f9816b Fix experimental::pmr typedefs and add tests
c0c1235622280db4a55cd86daa176b08b72f1210 Merge Ignore and Deprecated in .opt files.
6f795a9239f6029072ac83357e8966c56cd572e0 Formatted printing for dump_* in the middle-end
3ad3b3ac8c3eae606897ceba5811760f030fdac1 Only test STMT_VINFO_STRIDED_P for the first statement in a group
203942b8af64926d787b4a545184866f9572978d Make the vectoriser drop to strided accesses for stores with gaps
3a4da26602da1bd30c4ff2793fed480f180248c1 [1/2] Fix bogus double reduction (PR 86725)
18bc19a7aa4cd08d45d64f6741b8b1e0f48f262b [2/2] Fix bogus inner induction (PR 86725)
e9afbed0d65d7546b05cce3d5b5229b0046933ed re PR libstdc++/68222 (_Safe_iterator provides operators the wrapped iterator can't actually support)
af55b3af33f0a35fecd2117a43ee93468925e98c PR libstdc++/78448 limit vector::max_size and deque::max_size
f73a5316b6f76fa62979c29f4ec3620bf821dca0 Fix tests that fail in C++98 mode
568d5ee44d1d6897a9b7750a3934d4539e1a7ded Define debug mode function for C++98
429ca5b4809f0109ccd84984477b436cd35b677c tree-vect-data-refs.c (vect_grouped_store_supported): Fix typo "permutaion".
ab7e60cec1a6f4185b0428f3a2b3e71df0bae533 Handle SLP permutations for variable-length vectors
8c2f568c9a8375927efede4bfc83d6553da7f9a2 Avoid is_constant calls in vectorizable_bswap
f5cd4f8ceb89596be02801cd11e8dbf78fb10014 Define vect_perm for variable-length SVE
9ca2ac699ab2eee4ef6a2904426fa38f58af5a0b Forward declare debug containers so std::pmr aliases work
acf6214eacc97d0779e73c7ab6539ecb3dd1d524 diagnostics: tweaks to line-spans vs line numbering (PR 87091)
e7289cb45d094d9c538dc978c3fc0ae18e4752bd re PR rtl-optimization/87065 (combine causes ICE in trunc_int_for_mode)
df308f8160051f72679981d45ccbabe6b3f25396 diagnostics: show an extra line of context in line-insertion fix-it hints (PR 87091)
85204e23e2fed09fc07159ab5607e0b760269561 Less verbose fix-it hints for missing header files (PR 87091)
efc3a1a101184a73718bcb034e530e57cd65a543 re PR tree-optimization/86927 (Gcc miscompiles at -O3 on valid code)
463a9e0d31351d1b97f98da03cacb0b1867edad5 Add target selectors to slp-37.c (PR87078)
efc601240c12628df7ec467ac07a322306f80b71 Rewrite pic.md to improve medany and pic code size.
9d36bd3b1763035447bf201542545e8b5dcf962d altivec.md (altivec_eq<mode>): Remove star.
7efe0dd0b43db1ac5070908290a3febfcfb73513 Fix vector::_Temporary_value::_M_ptr
888157af3ef730e1e66c5e84ade11036a09d2205 re PR bootstrap/87225 (tree-vect-stmts.c:3748 error: converting to 'bool' from 'std::nullptr_t' requires direct-initialization [-fpermissive])
3c2a8ed0d9a56a45a67f87c5fa3a093c6852e62b dump_printf: use %T and %G throughout
508a909eca536f7f6a60af9bd7ecea761bd2e8f1 Add missing alignment checks in epilogue loop vectorisation (PR 86877)
2d2ee18641557deba692c286cbc2d8751310f697 Fix PEELING_FOR_NITERS calculation (PR 87288)
512cc0151207de4c7ff3a84f040f730fe0d52458 Remove arc profile histogram in non-LTO mode.
edaaef601d0d6d263fba87b42d6d04c99dd23dba Use vectored writes when reporting errors and warnings.
75902396e6dbed2a3cacb42452992db156c6f32f RISC-V: Fix problems with ilp32e ABI support.
ad117173a0d8a5412bc2b9fb99e2c9b1cb4036af RISC-V: Fix weak symbols with medany and explicit relocs.
01414d53cf3c062ca821de9ae48ba4c3db7d8ad7 RISC-V: Add missing negate patterns.
2bd4ca7ad508ec9b94f8c3442a6e39d5276d7915 Simplify vec_merge according to the mask.
ed2d9d3720adef3a260b8a55e17e744352a901fc dumpfile.c: use prefixes other than 'note: ' for MSG_{OPTIMIZED_LOCATIONS|MISSED_OPTIMIZATION}
041bfa6f07787752743e8c32c7a75a47015ba65a Fix caching of tests for multiple variant runs and update existing target-supports tests.
eb471ba379597d73fcd79986cca5b8351a32770a Add support for SVE stack clash probing.
057cf66ca3d290e0f68f66eba0e43379cb77f870 No a*x+b*x factorization for signed vectors
86920074bfc4f6319edce71b7a11e49417599f0c vector<bool> _M_start and 0 offset
6bd2b8ec8dddadce2fff21c2f22a71192a2e4e43 re PR target/87474 (ICE in extract_insn, at recog.c:2305)
119b4963ea4f68e88eb496f0efcb450e1fbbbe9b RISC-V: Add macro for ilp32e ABI.  Cleanup white space.
7db960c5b6adad2fd11789870aa514985ea0da04 Add -fopt-info-internals
f4ebbd243f887b3c5e01c65ad80a8f64a8261e61 Report vectorization problems via a new opt_problem class
808d8de5a2325bc04709e953328c3377493b0557 constraints.md ("C"): Do not depend on TARGET_SSE.
1fcbfb00fc675ee33b90ae486f3acb5916c93400 RISC-V: Fix -fsignaling-nans for glibc testsuite.
8656dafa39de8e537940433220e8f5db3bf7a614 Don't ICE on vectors of enums (PR 87286)
269ba95042e9fa35f6fa4c8270339bb932e8f7e9 tree-vect-loop.c (vect_compute_single_scalar_iteration_cost): Open a dump scope.
c885142a15687c39f6f46c23d7c40afc817ff7a9 tree-vectorizer.c (dump_stmt_cost): Fix cut&paste missing replacements.
6cdd5aecfb4e062354db8f7253240a371ba418af sse.md (reduc_plus_scal_v8df, [...]): Merge into pattern reducing to half width and recursing and pattern terminating...
1c070612117bce2b8ca4230007c1a62778de75b5 re PR c/87286 (ICE on vectors of enums)
7be65e79f68d862f912de22f1c2c61f31ae8e722 re PR target/87573 (error: could not split insn since r264877)
422a9f77892599ecf8e498d0e5e32b1db3cab559 PR libstdc++/87544 limit max_size() to PTRDIFF_MAX / sizeof(T)
2045ae1d3f511717c2a1223148ce63f71800e1dd Elide repeated RTL elements.
4b186707ee29b3189728731adf0ebdd2e620a26d vector (vector<>::cbegin()): Use C++11 direct initialization.
0df7c778ed50095a0c4b266b4beb8b783de832a8 re PR tree-optimization/87022 (miscompilation with -ftree-loop-distribution)
4124119974fd87380de607a6bc9bfdcffe1702d8 [PR87563][AARCH64-SVE]: Don't keep ifcvt loop when COND_<OP> ifn could not be vectorized.
b57d432bdd7d16e552c24ef80777eb27ecb1f973 Fix tests that fail when compiled without optimisation
7702ab653a903d5131bf72244ae22424ffd2e6c7 revert: [multiple changes]
294973a49751a7fc2d6a7a9f2749ce851a368c04 Simplify subreg of vec_merge of vec_duplicate
aff3ce41c4abecead6d05a0422d912468d2c893c Call simplify_gen_subreg to simplify subreg of vec_merge
28dd75a330e7cc929a6be489ea3c252dd4a8bd8a Limit mask of vec_merge to HOST_BITS_PER_WIDE_INT
6d2648763a1b8a74a85d04139c5d1391056810fa re PR tree-optimization/87657 (SLP ICE in libgfortran matmul_i2_vanilla)
92bab15297a57121317df803c9c688955af30722 Fix testsuite failures due to extra errors in strict dialects
f3245887551932de6aba1aa3e9f911b78a57b5ef Skip tests for GNU extensions when testing with strict mode
fe7f972d6ecc1f1df34f15615b7e3dea6f39e564 Enable AVX512 memory broadcast for FMSUB
5d9c5a966810fdedb072c7fef148bac21a075c14 emmintrin.h (_mm_movemask_pd): Replace __vector __m64 with __vector unsigned long long for compatibility.
36bbc05db8ef71811a7b925bbb862d0b1c3b5b89 Add a fun parameter to three stmt_could_throw... functions
ddec5aea567a131daf0c5741d676d6f4a68ca45d Index...
bc37759a51631f667d1728336c3662751f69b5ba re PR tree-optimization/86144 (GCC is not generating vector math calls to svml/acml functions)
34873d4c8e78350ef17e603efe592c46e225a637 tree-vect-stmts.c (vect_analyze_stmt): Fix typo in comment.
1cab645d3e321132dca5e43d9d5057c60852a17c re PR tree-optimization/87105 (Autovectorization [X86, SSE2, AVX2, DoublePrecision])
bf32992748c9849c38c089477d04b546e43ccdd1 re PR tree-optimization/87665 (gcc HEAD (svn: 265340) breaks elements on resize)
be43a8877e2f2f4590ba667b27a24a0cfdf8141d re PR tree-optimization/87105 (Autovectorization [X86, SSE2, AVX2, DoublePrecision])
28d2dc757edb6728d1a0f706ffc308aadbd082fc emmintrin.h (_mm_cvtpd_epi32): Change deprecated __vector long to __vector long long.
7852940e7bbeae3c40cdc6c61356099216bde688 re PR tree-optimization/87665 (gcc HEAD (svn: 265340) breaks elements on resize)
0f317ef76269a989ae751a808f946d15b740baf9 Relocation (= move+destroy)
303d8f779266535269e443f2fa65a3170a742ff4 tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Initialize ng to silence error with release checking bootstrap.
71c3949eeae32f0c242fa00c48be998b13cfdd7a emmintrin.h (_mm_sll_epi64): Remove wrong cast.
7ea4b8ed7b960e25d81c14842f7458e9f29c2042 re PR tree-optimization/87746 (ICE in vect_update_misalignment_for_peel, at tree-vect-data-refs.c:1035)
a1f072e2441c58f6a486f90bb9a32bd5f6c51cb4 re PR tree-optimization/87105 (Autovectorization [X86, SSE2, AVX2, DoublePrecision])
4bfcf87914b412f8fa56cd46f7c3081365b7e647 tree-vect-slp.c (vect_mark_slp_stmts): Add visited hash_set and wrapper.
b4c522fabd0df7be08882d2207df8b2765026110 Add D front-end, libphobos library, and D2 testsuite.
881eaae68818cab0b3419482586174582c348ed7 48101_neg.cc: Remove dg-prune-output 'std' from regex pattern for versioned namespace...
5d8c32cb86043e388fddc9833d9c2cd90ed05284 re PR tree-optimization/87785 (ICE in dr_misalignment, at tree-vectorizer.h:1245 on 454.calculix with -Ofast and -flto)
6c7e3b1fe2889136348984edeca7f9ae71d40027 re PR tree-optimization/87790 (ICE in vect_get_vec_def_for_operand_1, at tree-vect-stmts.c:1475)
266ef3613ea80da937a9fc782eb5c3ae8dcabb8f re PR tree-optimization/87785 (ICE in dr_misalignment, at tree-vectorizer.h:1245 on 454.calculix with -Ofast and -flto)
22e4f1fb6cda89074fa82ba70dfd757fb9ead5f0 re PR tree-optimization/87800 (CPU2006 416.gamess failed to build with LTO)
c397f267f1d0e8ea286904bc5543829b558e154f PR libstdc++/87784 fix dynamic_bitset::push_back
0321d9fac6eff34ef1cd91610a59070d0e9ff54d PR libstdc++/87809 avoid invalid expressions in exception specifications
187cea947e54d08eaed2587edeb49a5cc1fe8d6a re PR testsuite/87802 (g++.dg/vect/slp-pr87105.cc fails starting with r265522)
aac1c11ce4edd9c2e6af7e9ee8abcaba98d8741f [ARC] Add BI/BIH instruction support.
00e6775a5faa43702e96e315e7a1c22297983f2a Fix vector memory statistics.
733441e2e1d207a1ab0a4a255dea03ee7c6c8774 re PR tree-optimization/87873 (ICE: verify_gimple failed (error: incompatible types in PHI argument 0))
d8564d453161dc5302445d00b0e24b0b9c48206f re PR tree-optimization/87889 (CPU2000 177.mesa failed to build)
bfb9d79805753fd6cc69bb114b5c6597269f3e21 tree-vect-slp.c (vect_slp_bb): Move opening of vect_slp_analyze_bb dump-scope ...
8ae8bad7e558ce916c52e91a4e1879557f287bbc Add support for Loongson MMI instructions.
5a951baaf1b789281bf62b852d24a4ab8cf3e714 re PR tree-optimization/87914 (gcc fails to vectorize bitreverse code)
1c8badf66bec4e0ff73ae24bf4f8cabbef8c137a tree-data-ref.h (lambda_int): New typedef.
222cfefa7199b70e62df020c4768840b4434ac7f Update soft-fp from glibc.
536ecfc44b1fd2db67f669e9bb4c388b13d12045 neon.md (div<mode>3): New pattern.
1dd6990226fd92adf1e3c12a96c5776ec8efcb60 re PR tree-optimization/87621 (outer loop auto-vectorization fails for exponentiation code)
89939ff85a7c2ed0c1eb33e51d241f2a6dda0695 re PR c/87953 (asan: stack-buffer-overflow in vectorizable_reduction)
213fd71709e40dbcf601f765e80a56b1c624e4a8 PR libstdc++/87787 fix UBsan error in std::vector
be2b68e4cd63e50f4dd5fca247b9a919fb0013a0 re PR tree-optimization/87962 (ICE in vect_get_vec_def_for_operand_1, at tree-vect-stmts.c:1485)
ca31798e7bf8f87d78ff1ee66c120b135a1b2ebc [PATCH][GCC] Make DR_TARGET_ALIGNMENT compile time variable
41b32876b8a0b8c19b35b768f942bdad1f96f893 re PR tree-optimization/87931 (ICE in vectorizable_reduction, at tree-vect-loop.c:6193 since r265876)
bbeeac91f96bdcbc3eb40ec68c1fd8cf5d4a038d Ensure that dump calls are guarded with dump_enabled_p
53467b5543100b84ad1bb2392efd989639f01eca re PR tree-optimization/86991 (ICE in vectorizable_reduction, at tree-vect-loop.c:6919)
f711908bf61e39432965db84ed12424cc6f251e1 re PR tree-optimization/87974 (ICE in vect_get_vec_def_for_stmt_copy)
9989a43983116c05aca5c3b5fc30191524b73b94 [Ada] Update signal constants for GNU/Linux
e81d464cafa9815e64674a2e3b3e9d0e5eac6b31 re PR tree-optimization/87985 (Compile-time and memory hog w/ -O1 -ftree-slp-vectorize)
22692f3ce9d00eac18d5582de90dda5ae5c07c77 re PR tree-optimization/88031 (ICE in vectorizable_reduction, at tree-vect-loop.c:6953)
1ec7f4929a286da7aa03d413a0fe99c9c36be915 Handle vectors that don't fit in an integer.
d11be094c716885475a4a1562a967e4a127ecece re PR tree-optimization/87546 (Gcc miscompiles at -O3 on valid code)
b579523b7bcd02739e6f06fe21a7ac6eb24dd6ec RISC-V: Fix epilogue unwind info with fp and single sp adjust.
4cb3570c8c453a830589b717d8519daa31ec7468 re PR tree-optimization/88071 (ICE: verify_gimple failed (error: dead STMT in EH table))
1fd319753c90f05e026e16c2c83af8f1c6687a5f Disable unrolling for loops vectorised with non-constant VF
8c944c97a2e5a264779ad1d448f97319f471275a tree-vect-stmts.c (vectorizable_condition): Do not get at else_clause vect def for EXTRACT_LAST_REDUCTION.
98f08eb8939735c1e9cbc1ec5cadebe79e935c90 c-parser.c (c_parser_has_attribute_expression): New function.
ff2e7f1973807759f52808a2594e0635ced69619 Improve relocation
f7b94dec4876c161d7e97ad0ce19695aa487b04a re PR tree-optimization/88149 (ICE in vect_transform_stmt since r265959)
ef6e6914c8245ca24dae952bc054ae2328e751ab re PR tree-optimization/88182 (ICE in vectorizable_reduction, at tree-vect-loop.c:6465)
27c16e61cb99796a912d491ad5d77ed7873a4eed Tweak directives in GCC tests for msp430-elf
3da39f52ff740ad4263a000c48fd5a6d9afd18fd Fix missing dump_impl_location_t values, using a new dump_metadata_t
0c155f24a945a55c37a963f64e89870f60543e64 [libbacktrace] Avoid realloc with size == 0 in backtrace_vector_release
6d760a0197ece131619ac88f0fe34ce452fd774c [libbacktrace] Don't point to released memory in backtrace_vector_release
facf0354cfdaa555f376311b9d3c8fec79747f09 Support simd function declarations via a pre-include.
cece89d0ddb8b1181f15caa0ef44cd2aa89ec957 riscv (riscv_block_mvoe_straight): Use RETURN_BEGIN in call to move_by_pieces.
98f33efc5a533f66abfb0e263be60e719baf5879 re PR middle-end/87157 (gcc.dg/vect/costmodel/ppc/costmodel-vect-33.c fails starting with r263981)
fc60283c5c7987a120cdadd24024a0319bfe0360 re PR tree-optimization/88182 (ICE in vectorizable_reduction, at tree-vect-loop.c:6465)
188588e443008dd7795947db60b68571ed724fe3 Implement uniform container erasure for C++20.
154fb72b6d8e35b1a97fd665dd43c4f215aea1b1 re PR tree-optimization/88243 (ice in vect_create_epilog_for_reduction, at tree-vect-loop.c:4689)
a62b871d65a5c7ce3114ac095fa5490050f2037d Fix erasure goofs.
b076fecbc240380b25bb25c65aae85c4b5ea9ce5 re PR target/88234 (UBsan and runtime error: signed integer overflow using unsigned vector)
f06e47d7b644b4598a85f89eb76c13298e6e5d9f re PR target/88152 (optimize SSE & AVX char compares with subsequent movmskb)
355c62ce02d7d1a5fb7d28c829ee918df3983ad5 Only include bits/stl_algo.h for C++20.
856f4c6a9cfac1471c323b1783130879e2bbc15f re PR target/87807 (passing float/double vectors as variadic args fails on-64bit SPARC)
518a3a2106e4e8172a1c7628b79b63635857fec3 [libbacktrace] Factor out backtrace_vector_free
eea34f203816e71f2fe261b9b8593a01eb01ec81 Restrict vector extension to use 128bit vectors (PR testsuite/88265).
f44697b78a06bf880ba25e9d4cd721f24282a797 gimple-parser.c (c_parser_gimple_postfix_expression): Parse _Literal (type) { ...
0b44b4b807a2d7bee4d2a0e4c37794db2aeeb44f Pre-emptively support P0646R1 for std container erasure.
c10a94358fb8d0762c9eceb5d26125582fa7971f re PR target/88278 (Fails to elide zeroing of upper vector register)
bcda485bdf8b8e7c645648e124e787f78846b2c6 tree-vect-loop.c (vect_transform_loop): Properly compute upper bound for the epilogue when doing epilogue vectorization.
056775650ac086fb069e00415bf262e22f7579c5 re PR tree-optimization/88315 (SAD and DOT_PROD SLP reductions with initial value != 0 create wrong code)
fa29266c1da984345e0637b7479bbcc4b34cafde tree-vect-loop.c (vect_transform_loop): Fix epilogue iterations for epilogue vectorization.
6c620b0744af235ceb1c07c214772895e0f73c15 re PR tree-optimization/87320 (Last iteration of vectorized loop not executed when peeling for gaps)
f7d5864294f77afeae9aa72b55e3cdfe1c24e5b2 re PR tree-optimization/86637 (ICE: tree check: expected block, have <invalid tree code> in inlining_chain_to_json, at optinfo-emit-json.cc:293)
a1ff7f142078df785548469fe000608c28a8c479 Use unsigned arithmetic for demoted vector plus/minus/mult (PR 88064)
5da8ebe9c61f304107b1bcb5146e068093b72d0d Remove bogus test line from vect-over-widen-23.c
f473762515b29ef24c34f52f6c82e2c8a4c275a6 re PR testsuite/88369 (g++.dg/vect/pr33426-ivdep.cc etc. FAIL)
98900a06642a7c10751720a26f8cbca359d89fa3 re PR target/88418 (ICE in extract_insn, at recog.c:2305 (error: unrecognizable insn))
5f531feff7ed6651354ed5b1cbd2a83cf204d170 [Ada] Spurious errors on aspect specifications in generic units
62ebfa527237ba42c9d93032dc008e82d482d271 [Ada] Uintp: add a new UI_From_Integral generic constructor
0e350f135b11b105ae98a45441115b9a2a3e6fc3 re PR tree-optimization/88464 (AVX-512 vectorization of masked scatter failing with "not suitable for scatter store")
4f87bb8d6e8dec21a07f1fba641a78a127281349 PR libstdc++/71044 optimize std::filesystem::path construction
b1985ca02ea01cd32de23be109672a7ebf593a46 re PR tree-optimization/88464 (AVX-512 vectorization of masked scatter failing with "not suitable for scatter store")
305f1fb78347a0bdf5d6ddd6ac5dead1c6167ea5 re PR tree-optimization/88464 (AVX-512 vectorization of masked scatter failing with "not suitable for scatter store")
13e08dc93941675cd6a7cf5470b437c4f640c996 Add a loop versioning pass
5d17a4763a71cbf10d3d4bb93bed11f832a24683 [nvptx] Add PTX_WARP_SIZE
693ad66b86dcadc9764a2ef4365902b153560dde [nvptx] Move macro defs to top of nvptx.c
34a9bcaf8b71771f93fe1f09e0c060767bcb7601 extend.texi (PowerPC Altivec/VSX Built-in Functions): Describe when a typedef name can be used as the type specifier for a vector type...
dc5b05a07544bbab9e309a45ebcb350a37b69103 re PR tree-optimization/88464 (AVX-512 vectorization of masked scatter failing with "not suitable for scatter store")
0d3d674bcb173e8d694715c1e4fa24937cccc0f3 [PR86153] simplify more overflow tests in VRP
a0b3b5c4af07ba34991c4f253496725a760104c2 [nvptx] Make nvptx state propagation function names more generic
08926e6f5bbf23d1eebc776d84d648f8b5836931 re PR tree-optimization/88533 (Higher performance penalty of array-bounds checking for sparse-matrix vector multiply)
dc355223e465d3a2c090f34afd2ce965d20de199 Restrict a VSX extract to TARGET_POWERPC64 (PR88213)
dfd7fdca2ac17d8b823a16700525824ca312ade0 C++: more location wrapper nodes (PR c++/43064, PR c++/43486)
5a5fe9175eec31bc9cce382e8c7b961fd4cfa1a3 re PR target/88547 (missed optimization for vector comparisons)
1c852d1d7096a8833b4e8dc0755a749314c2113a re PR tree-optimization/84362 (Auto-vectorization regression when accessing member variable through getter/accessor)
c9aa91088d2ab49a29c5588f62657afd7a84139e tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Don't do versioning for data accesses with misaligned step.
6647c1e86f3b311d906a19b85182eed010ec03cf tree-vect-data-refs.c (vect_enhance_data_refs_alignment): Use DR_TARGET_ALIGNMENT on dr_info rather than dr.
d6b612a76f77e7c9ae7712df9312bbcf4a92f048 re PR target/88547 (missed optimization for vector comparisons)
53a52133a5fc74d63ce17b328774706bf1e79e02 [libbacktrace] Fix memory leak in build_address_map
40b8d3b2536246b7449b6c7ce7a972537e5f11e1 [libbacktrace] Fix memory leak in loop in build_address_map
eb33bf0a0a4914eb2a88614cf4041069843018d6 [libbacktrace] Reduce memory usage in build_address_map
ec1faddf89cb8219c426418d7af772655d5ad40e re PR testsuite/87304 (gcc.dg/vect/bb-slp-over-widen-1.c fails starting with r262371)
0d06e8c794f37ded34e902ead35e7c70c3b112d1 [nvptx] Add nvptx_mach_vector_length, nvptx_mach_max_workers
5c571497e1b9b4ac407aa0db359292b0de6cd42e [nvptx] Add vector_length 128 testcases
43493c97a6e8ee3b1e52e3983ac255722cdcfdd4 [nvptx] Fix libgomp.oacc-c-c++-common/vector-length-128-3.c
764ecad43b6cac2d2eded706fccd29cc15481ad2 [nvptx] Eliminate PTX_VECTOR_LENGTH
ccc0d492f109456db8df72938bf39fd03510d2b3 [nvptx] Allow larger PTX_MAX_VECTOR_LENGTH in nvptx_goacc_validate_dims_1
0024c32045a72ef45a64ab5673a2ba587978d9d1 [nvptx] Add support for a per-worker broadcast buffer and barrier
d495b5ccd252fdb01c70a73f145a008555b5a253 [nvptx] Don't emit barriers for empty loops -- fix
f881693c53374c743d3b5d1561708a64dcfe7eb6 [nvptx] Handle large vector reductions
d8fcab689435a29dba2862693689c624b257d1bf re PR c++/85052 (Implement support for clang's __builtin_convertvector)
6e723923df52bdde7c3aebd6bccaae3c7bff19ee [nvptx] Force vl32 if calling vector-partitionable routines
46c66a46aa33077bda821e0428cc7859945c04c8 [1/2] PR88598: Optimise x * { 0 or 1, 0 or 1, ... }
f4bf2aabe36633d75852313caafe7efab71d5ba7 [2/2] PR88598: Optimise reduc (bit_and)
18fd43b95264a7244b50fd34cf983f4d78c208dc Fix ICE in get_initial_defs_for_reduction (PR 88567)
cc770199ded4655756eb98399f6d26f5a0c55f29 Fix IFN_MASK_STORE handling of IFN_GOMP_SIMD_LANE
2c372e81a996e105571e71108f6427c38ec2a71a [nvptx, libgomp] Don't launch with num_workers == 0
5ed895a74a12da82d2adafda7e6196de8221ddd2 re PR middle-end/88758 (186.crafty in SPEC CPU 2000 failed to build)
45a8d80fec060195ef6936e43b4fe70158fb7dc7 Define __cpp_lib_erase_if feature test macro
84df580f073debc208187d1ff2e5cec49989e5a9 re PR target/88785 (ICE in as_a, at machmode.h:353)
052aaaceed25c962791b0b973f66febabaf47574 [nvptx] Don't allow vector_length 64 with num_workers 16
980af7cd8fb385f9bb818e29d08fe4af73cd2788 [nvptx] Verify dimension limits after applying defaults
d6f528e70ad88ddcc9786e6050d92e003d19d0a3 [nvptx] Allow default vl to be overridden in nvptx_goacc_validate_dims_1
af79605ec27c0db7dee9ee001cd7d768eb6fcf02 [nvptx] Apply vector-partitionable routines workaround to default vl
2b9d9e393766d2fa6e2dd5f361d0db14872cf261 [nvptx] Enable large vectors
52d22ece49ac0517d4288d65a5ee6dd8d9441d4c [nvptx] Update insufficient launch message for variable vector_length
8e77f71eda4610040727c69a782b12976dd9228b [nvptx] Enable large vectors -- test-cases
2cb7a501ab0be001dca4bac0d9af9298c0bfabbc [nvptx] Enable large vectors -- reduction testcases
56314b772f0867d81a4f7c7850d460e395563dff [nvptx] Force vl32 if calling vector-partitionable routines -- test-cases
a10577582585850c88b77dbc492eb046c05e79ce [nvptx] Add vector_length 64 test-cases
2c2ff1684dd33a4ec2ea7b91c0ada9cf371bf75f [nvptx] Enable setting vector length using -fopenacc-dim
efb56ae82bd871b64861e991466ce616688a88e9 [nvptx] Enable setting vector length using -fopenacc-dim -- testcases
3f21b8e3f7be32dd2b3624a2ece12f84bed545bb Add dg-require-effective-target exceptions
674931d2b7bd8886d142f31ea3d07a2ab2eb608a Port testsuite to GCN
9d576782a29581c04c60d7b9415bb7d3014b0c8c [libbacktrace] Add find_unit
5928bc2ec06dd4e7b5bd77a5915eb268f7bd5619 Reset proper type on vector types (PR middle-end/88587).
649794ff576fb9a033358799eb43a43addff1aa9 re PR tree-optimization/88903 (wrong-code with SLP vectorized shift)
a766ecb0d488624c0289620785ffe4e2d5cc9971 vector long long and vector double require vsx support.
d715f5543117af088e6d8099806b266aa2dac047 Fix after P0600.
c73e7656f5f64a8ee544270adea13cc39ddae70d re PR tree-optimization/88934 (ICE: verify_gimple failed (Error: mismatching comparison operand types))
4d8516587ac4490634b02e647d04db511660bbcb class_66.f90: Fix a dg directive.
c4d825b5e780cea568317b2ca2c82420b677f119 tree-vect-loop.c (vect_analyze_loop_operations): Use auto_vec for cost vector to fix memleak.
a14e30837f2e90ea075a850609c7076d9615b83a Fix overwide shifts in PR/88903 testcase
df69e824488337a4a85f8a4893e0f0081f45cd72 Fix vect-nop-move.c test
8b5d2c55128d953d1d2d29362ea4522057bc016a re PR target/88965 (powerpc64le vector builtin hits ICE in verify_gimple)
e658669fe18d27bbde85085d648f0392f3f9bce6 PR libstdc++/88840 delay evaluation of constant until type is complete
2e42a52fd1bb913d293d4ccc6cdcf34cf916215e altivec.md (build_vector_mask_for_load): Use MEM_P.
cb1ba35f582f07096a045574b571576bdcc439a9 re PR tree-optimization/89049 (Unexpected vectorization)
1f48525ded40b968792c4dfd9a7614c3e88129a4 Ensure pool resources always use normal mode vector
0058a283e1bfe9130f04a0aef76b9ab863a6b22e doc: showcase a "union of vectors" pattern (PR 88698)
c8010d70be43ae96908bb82000518e03b5b65829 re PR target/89186 (ICE in mark_addressable at gcc/gimple-expr.c:894 since r268138)
2781287255a16b6f2db18c68d02c3f40004332a7 PR libstdc++/89090 avoid C++17 features in C++11/C++14 code
258bd1d63aec54899b12269325eca9712d61adfe PR libstdc++/89130 restore support for non-MoveConstructible types
39bc6f8752102f38d0c0ca86c02d14ee5d1d0b5f Restore previous behaviour of test
959dcbc80a60aed2198dab4853a7492b315de7d6 Fix pr84711.c testcase
4763581763de6049c938ea7129d738d497004a06 re PR middle-end/89210 (ICE tree check: expected integer_cst, have real_cst in to_wide, at tree.h:5600)
12f82acc9e55a16334d303ae2b88609bdcbf13e5 vsx-vector-6.p7.c: Update instruction counts and target.
25b67546a1a5fd49ddcb0a923a8d23d77a91e05f Fix more ICEs in -fsave-optimization-record (PR tree-optimization/89235)
3bdf0b644a3e808d740a3edc32a29d934bf5deea trans.c (Regular_Loop_to_gnu): Replace tests on individual flag_unswitch_loops and flag_tree_loop_vectorize...
5f5d88d82bcc0d7a483c6872368e66e3961df7ff re PR testsuite/89250 (gcc.dg/vect/vect-24.c XPASSes)
a2d0c3bf8c4487249aae1e2b1927d71703bfcda4 re PR tree-optimization/89247 (ICE in expand_LOOP_VECTORIZED, at internal-fn.c:2409)
79e2c811f8fe8b212aeb63ae837f9c3a8289e693 re PR tree-optimization/89268 (r268689 caused FAIL: gcc.dg/vect/pr79887.c)
8ced066037201d2c193560bf7d9cd6e738e26e55 vec-sld-modulo.c: Require p8vector_hw.
a6c723e202ebd5ae388ca04b7be5ff6fbe70439f re PR go/89321 (cross build with riscv64 gccgo compilation failed due to assert in constructor_expression)
990525f659db023bbcaf8d313916e4533843c664 target-supports.exp (check_effective_target_vect_usad_char): Add PowerPC support.
d331c5f10d5e6c9f41a24ff7cb7a8c6493790885 PR libstdc++/89416 fix __is_move_insertable trait
9f0ffb2bdfa04a617ca81e55ab686a80d6ad6c77 re PR tree-optimization/89440 (ICE in vect_create_epilog_for_reduction, at tree-vect-loop.c:5502)
953e25c44acc2458d854b1442d7775d997aaf187 re PR rtl-optimization/89445 (_mm512_maskz_loadu_pd "forgets" to use the mask)
f86624d85f937e03110eb044e438d8316d860501 re PR tree-optimization/89280 (ICE: Segmentation fault (in is_gimple_reg_type))
f2d040abea60db10675e0a5c2f91b7991541df90 Fix mask type choice in vectorizable_call (PR 89535)
8e96621085f2a0364fe87a4019d6cc9bfc52cd11 RISC-V: Generalize -march support, add ELF attribute support.
ea5212b741b5cc751d0d8271a9666c4ad0b4e799 re PR tree-optimization/89570 (ICE in prepare_cmp_insn, at optabs.c:4001)
deeec83de4379e253af4f41eaaf8f45d4db17302 re PR tree-optimization/89594 (ICE: Segmentation fault (in gsi_for_stmt(gimple*)))
5161ffa4f5ae6133167673afc607c07e0be787f8 re PR tree-optimization/89618 (Inner loop won't vectorize unless dummy statement is included)
ec274050c516660c2d23c905dc900bdb98e120f8 RISC-V: Add libstdc++ check-abi support.
04e5c73db8b51c76bff5fb30553089ccfa7bb5fc re PR target/79645 (missing period in microblaze.opt)
03001a351528a1fc35bfe0c70deb08c7e18d314b re PR tree-optimization/89649 (r269458 FAILs g++.dg/pr80481.C, scan-assembler-not vmovaps)
a3f9f006a8e24bfc2a045b918a4f3665407f0018 Wrap option names in gcc internal messages with %< and %>.
b9da0278667b43843b750a1ad35a9d6dbc1d1b54 d/dmd: Merge upstream dmd 19b1454b5
0ee285909bcef729415995e16c68e8713c59996f re PR c++/89652 (ICE during constexpr evaluation)
27814aed3462d6bdce3c653e5e66d5e58cf4a5e7 re PR ipa/89684 (ICE in gsi_for_stmt, at gimple-iterator.c:613)
baa09dc5c951213452446689466ad889656b9936 c-tree.h (enum c_declspec_il): New.
30bb0e44d3893b27c6cd74c72a077e5a0d96a244 re PR target/87532 (bad results from vec_extract(unsigned char, foo) dependent upon function inline)
985a72168a64267df8ad4c73337b3f678787174e re PR fortran/89724 (Fortran diagnostics give wrong line number because of math-vector-fortran.h header file)
4d7dfada8935a362601d1782bd6598e3e1d78d74 gcc/riscv: Correctly ignore empty C++ structs when flattening for ABI
c57546fe94712a723bc2e123445dc5d9b0a0ca1a Fix a case in which the vector cost model was ignored
891cd9e3b9a89b0461fb838d38c51b6fab596337 RISC-V: Fix testsuite regression caused by quotes around options.
026216a753ef0a757a9e368a59fa667ea422cf09 RISC-V: Fix %lo overflow with BLKmode references.
64a40f1320c0edc160796266876958ffae8fdd96 [PR72741] Encode OpenACC 'routine' directive's level of parallelism inside Fortran module files
51e471ae61b6a9fe672fe92e00edacabf69f55a4 extend.texi (Common Type Attributes): Document vector_size.
88108b27dda964afc145e9e5d176a481d1aee707 RISC-V: Add sifive-7 pipeline description.
6461f211e09415edd95315f4f9ff843f4f1d8eff re PR debug/89463 (debug information for iterator of an empty loop is gone (at -O3))
1509905e82c45228d431b41be32fe15fcb469393 pr81740-2.c: Require vect_hw_misalign.
76d4accffd19a094761bf25b2d66435ce6642105 RISC-V: Fix __riscv_compressed regression.
f401d62362d405ea8751b10581cf8eb5921ff4d8 re PR target/89902 (ICE: in extract_insn, at recog.c:2310: unrecognizable insn with -mavx512bitalg)
c51b04ec33fea61e89363fd5c94e38b4df8b12c1 re PR rtl-optimization/84101 (-O3 and -ftree-vectorize trying too hard for function returning trivial pair-of-uint64_t-structure)
904f3daa028eea44c6a591fb1ac746ee81c72be1 Remove usage of apostrophes in error and warning messages (PR translation/89935).
2723350fc6fd336768abd93e568babe032d97228 Fix ChangeLog entries.
10f26de9155b71a2bd5055060004420939cf7a2d PR libstdc++/87431 re-adjust never-valueless optimizations
145f764aae16c101baf41c815abe99353fcf797d Fix expected scanned pattern.
d6366157deac0b526ce7ecfd2821745eecce06c8 re PR middle-end/89725 (ICE in get_fnname_from_decl, at varasm.c:1723)
a265c9a929b4ca727e9b0c93eb98e15244f2735c re PR tree-optimization/90006 (gcc loops indefinitely around vect_get_constant_vectors on -O2 -ftree-slp-vectorize -fno-math-errno)
31215daa9b8099963fc1fb04abd13f6321f02a74 re PR target/90015 (riscv: typo "intterupt" in diagnostic)
6c0b8df123c24ef3c14305698eb2910bcf5979ce SVE fallout from PR90006
765f8786cf6e22aa6309f321f0afd8e7dc79b4bb re PR translation/90011 (trailing space in diagnostic)
e009dfb32037f94447f0547a3930ecccd7fabe37 Hi there,
f95b75977014fbbc919bd7a478bbaab24438b001 tree-vectorizer.h (_stmt_vec_info): Remove same_dr_stmt member.
2fd579ab530ca9ca5682eeba305c4946bf710c25 re PR tree-optimization/90018 (r265453 miscompiled 527.cam4_r in SPEC CPU 2017)
34f02c07fb1a9d966fb7af5a8c28c213e84d89c5 re PR target/87532 (bad results from vec_extract(unsigned char, foo) dependent upon function inline)
3fb82380dcbbc768e2a5bdb5ab4079259ee0e683 PR c/88383 - ICE calling __builtin_has_attribute on a reference
377c9e461130f54ebedb57441be0a0bc371226ef Commit a change missed in r270326:
6c76c0e408765f43253b2457363978f8fd5ca6f3 PR middle-end/89797 - ICE on a vector_size (1LU << 33) int variable
a34d6343a758f651064d81abb1534971fa4170e7 Improve implementation of parallel equal()
d9392bfa032b448839abadb523aff65b8ccb3dba libphobos: Add D support for RISC-V Linux
8a55f9c57a1ffd900262aa2fc2015822dc059331 extend.texi (vector_size): Add missing comma after @xref.
4ef8a24ca5416226d82ca272dea88e460ae2ce86 Add commentary to (SET_)TYPE_VECTOR_SUBPARTS
5117550700dc9b81a0073e8e802be9992a7a59e9 RISC-V: Promode modes of constant loads for store insns.
ad1f4687368ea026a0060969da1edd4dc1abbbfe Add nodiscard to std::vector<bool>::empty()
074084767c9d7c4d52d919c343b65bb61c564096 Remove DDR_INNER_LOOP
379637d5e2d6965cb842a0fe29a9442f1322544d * config/abi/post/riscv64-linux-gnu/baseline_symbols.txt: Update.
9e3501f765540f08aad0bcc0821908181366f177 gnu.ver (GLIBCXX_3.4.26): Change _Lock_policyE2 exports to _Lock_policyE[012].
4f4753914455ad186f7c1f994743abfcb05a7dc9 RISC-V: Short-forward-branch opt for SiFive 7 series cores.
243dd48646beb0de2a2aac8236eef8fa60f5b99d RISC-V: Update last ChangeLog entry to mention Andrew Waterman.
8964432ad6f17cef74aa97c367d2975ba9458f92 re PR tree-optimization/89653 (Missing vectorization of loop containing std::min/std::max and temporary)
1ababc8bd59bcca3bac8c08d367bf0e91c7e11ab Improve docs for Library Fundamentals TS
1770f16993054e140d3cfd288ced4e85389c6787 libphobos: RISC-V: Fix soft-float build errors with IEEE exception flags
a7eb97ad269b6509bd7b31ca373daea98e4d7e85 re PR middle-end/88963 (gcc generates terrible code for vectors of 64+ length which are not natively supported)
419c5f99876d9ee517f6b646dd785cdcaf5cb6fe tree-vect-stmts.c (get_group_load_store_type): Avoid peeling for gaps by loading only lower halves of vectors if possible.
3bc104bdb4b5aa99ff6dceb246beaa65b012c5ac re PR tree-optimization/88828 (Inefficient update of the first element of vector registers)
898758504fa87d9f5e72c2c8b32139b413276a10 re PR tree-optimization/90358 (526.blender_r train run does not finish after r270847 on znver1)
cd0a831ce6d6fe9ff14959b0602ad7deed6d2785 PR c++/90265 - ICE with generic lambda.
9f708a844853eb2fe87e696d27de14cbd68896f8 tree-vect-slp.c (vect_build_slp_tree_2): Bump size whenever we build a SLP node.
d7b6aee8cd346328b6f22fc415ffc28b9cf8a285 [libcpp] Reimplement mkdeps data structures
fcd0566b03e8e22190590bda888b48349639f1a0 tree-vect-stmts.c (vect_is_simple_cond): When vectype is not specified still compute a comp_vectype for invariant compares.
a9fad8fe6c84de272f2a56d462e67d53c9f4a73d This patch adds support to vectorize sum of abslolute differences (SAD_EXPR) using SVE.
5d30228e2b9837e66827acfe95c9a74c90c1d42b re PR middle-end/89765 (Multiple problems with vec-insert implementation on PowerPC)
362e280d10c61bec13c1d02c11a1c4ac0846db7e re PR tree-optimization/90395 (ICE: verify_flow_info failed (error: BB 2 cannot throw but has an EH edge))
e9c54233f7a9b4827702d64034d51db52787a659 stl_bvector.h (operator==(const _Bit_iterator_base&, const _Bit_iterator_base&)): Make hidden friend.
65ecff904b65ee1c0b8d7b642a72cad3222f2ecd darwin, ppc - improve debug for mdebug-stack
6db881be90d9b953ed48c69f6ecbdbb534d8d678 Fix wrong usage of dump_printf_loc (PR tree-optimization/90416).
544be2beb1fa53dfdd6988418ad3b365c289536d Remove Profile Mode, deprecated since GCC 7.1
61021c35c0b3ca3f37ad23002083d4f6c70e1bd1 tree-vect-slp.c (vect_get_and_check_slp_defs): Handle VIEW_CONVERT_EXPR.
cd9cf97bbfdc3b810b408a98cf79e629929dd5f6 Use releasing_vec more broadly.
962372f9f853c582c879f11c0db14973cc8687e0 re PR tree-optimization/88828 (Inefficient update of the first element of vector registers)
066f9ea27960c21b73be820f2bcd62d0c2f3d6b8 Add __gnu_test::NullablePointer utility to testsuite
0b3c00ff3c53818110484f9e295523a0c3c7f324 Make std::match_results::_M_resize more useful
595ffc073bf5b1753e3a18dfa704391ad5fad626 re PR tree-optimization/88828 (Inefficient update of the first element of vector registers)
c221c627cb03585892bbcae2334c013b8fdf4b41 darwin, testsuite, powerpc - handle tests for new processors.
fed2a43c018366566c3b5b73269f863444b06163 omp-low.c (lower_rec_input_clauses): For if (0) or simdlen (1) set max_vf to 1.
1bf2a0b90f2457f6d9301535560eb5e05978261b re PR target/90424 (memcpy into vector builtin not optimized)
8c3f47feb3d7b69e185cfa4897c717292a886c1c re PR testsuite/90502 (gcc.dg/tree-ssa/vector-6.c FAILs)
f7430263c07b4a1bcf3deb708c8c691f233fcb40 gcc: move assemble_start_function / assemble_end_function to output_mi_thunk
4e65deeffb7205dc20b70fdfbce51bc6b381f0db omp-low.c (lower_rec_input_clauses): If OMP_CLAUSE_IF has non-constant expression...
935469daaa5c02ac5104c0d5c04a1f12e23529b1 Move from state of allocators (LWG2593)
bc374246e211608c4cf9732fb814620a5dfe91b1 re PR middle-end/90518 (ICE: in emit_move_insn, at expr.c:3745 in gcc.dg/gimplefe-40.c)
f63445e56c265757ebd50dc12fcd01773341b49f cfgloop.h (struct loop): Add simdlen member.
4f8b89f092467f9550cb2aa873c2e30ac809c08a re PR tree-optimization/90510 (Unnecessary permutation)
c54eb7f40ce09bc22aca2aea7cdde6e286249ada sse.md (VF1_AVX2): New mode iterator.
9ee0fb4c276cc0281ce180917c1bd20600ae7e09 vect-signbitf.c (dg-final): Improve scan-assembler-not string to avoid false matching on 32bit targets.
5879ab5fafedc8f6f9bfe95a4cf8501b0df90edd re PR tree-optimization/88440 (size optimization of memcpy-like code)
1d672917b4b324a6aac3743f21b8c58940a0ceb8 re PR tree-optimization/88440 (size optimization of memcpy-like code)
11a04334157039895d2df8f5eb492064dc5d4608 Remove Solaris 10-only note about -mvect8-ret-in-mem
3aad84a49e51a0cd5bfae5176c5311303ebfb8a7 re PR testsuite/90615 (several vector test cases fail starting with r271553)
b9778c45fc1cd361c3012e30aeb02b53cb3e531c ada-builtin-types.def: New file.
d6b3654a9ace038ddce90f4c671d5edb4b3479e2 re PR tree-optimization/90637 (ICE in vect_loop_versioning, at tree-vect-loop-manip.c:3055)
997636716c5dde7d59d026726a6f58918069f122 Current vectoriser doesn't support masked loads for SLP.
441ed45ca2abe83f78be48e6ca816e9ec6e27222 PR libstdc++/90634 reduce allocations in filesystem::path construction
1585b483236dc2e9a9460a11c14cf3b32a967a84 re PR fortran/90539 (481.wrf slowdown by 25% on Intel Kaby with -Ofast -march=native starting with r271377)
00a0e1f5a3bd62519e4742477e11a32c7df2db98 Fix RISC-V build failure for go language.
3263fb9c6b90b565fc6ca4d2ce9247b97b4027d3 Remove using-declarations that add std names to __gnu_cxx
1ce8fc63a4132b66ced527afd2c88b840ecbb0b9 omp-low.c (lower_rec_simd_input_clauses): Set TREE_THIS_NOTRAP on ivar and lvar.
e7393c8936b9cfb1a28f7e16043c107490491ba4 tree.h (OMP_CLAUSE__CONDTEMP__ITER): Define.
bcde3345ea97aef36f5b4e29f09f71bcd41879b2 Fix ICE in vect_slp_analyze_node_operations_1
3a0afad0d212b3ff213b393728e018caf2daa526 re PR target/88837 ([SVE] Poor vector construction code in VL-specific mode)
ebaf3659632c0d5f45ca86593562c6c8367fda67 Enforce allocator::value_type consistency for containers in C++2a
a9fae4b47ff749ff4d063d60d54b409412ed151e IPA ICF: rewrite references into a hash_map.
e756e900e911fdbc57cd76d6c12d20a9b1892e55 re PR target/78263 (Compile failure with AltiVec library on PPC64le and -std=c++11 flag)
9ea2bfca6a3fd80f14d24557f71efaafae3846a9 omp-low.c (lower_rec_input_clauses): Force max_vf if is_simd and on privatization clauses OMP_CLAUSE_DECL is...
a2dbc0bf2aa42f0f078d0d46f7d9cdafc5383d93 Fix tests that fail in C++2a mode
ad60f42883a5641d4d8e7f5e9017b473cec29f93 Fix more failing tests for C++98 mode
5e664ed0938357392823d2a43be8a196526dd97c RISC-V: Move STARTFILE_PREFIX_SPEC into target OS files.
f75d3701103301d452c02548d48facc2f95613b9 toir.cc (pop_label): Only queue labels in a vector.
7ac9a201848f020a7803c5b3e20dc4768a992c40 fold_real_zero_addition_p for vectors
5a5da48013f29c55bd9a4221ebc72104b80e4982 re PR c++/90810 (Different intrinsics behavior on G++ 7.4 and G++ 8.3)
fa9863e7d34ecd011ae75083be2ae124e5831b64 re PR target/88834 ([SVE] Poor addressing mode choices for LD2 and ST2)
9b884225bfc609606f9b169b021c4da93feba48e re PR target/88838 ([SVE] Use 32-bit WHILELO in LP64 mode)
2778a719bebf7a32c34638cb39e9697c93ed484a tree-vectorizer.h (vect_loop_vectorized_call): Declare.
9a9c7a625d3813d062a6b17d071bd8cc9fe5cb8b Fix tests that fail without PCH
0356aab806921fe5d766d3fc74cf49dffc271d18 omp-low.c (struct omp_context): Add scan_inclusive field.
bce29d65ebe1316d15ec7582a1d257ef1be163f7 [Vectorizer] Support masking fold left reductions
fcae0292de06aeb54c44d26cfb80d798df60e339 Restore correct iv step for fully-masked loops
6a2892a6d3aef8a1ce26386d626f26e6100099f6 omp-low.c (lower_rec_input_clauses): Handle references properly in inscan clauses.
2e83f583c27ef7a9d3b0fb0b5ed372439d6222a8 md.texi: Document vec_shl_<mode> pattern.
36d0dada6773d7fd7c5ace64c90e723930a3b81e Have std::vector printer's iterator return bool for vector<bool>
48b63a31f8c02f262579432fd65f61abfefe4980 tree-vect-stmts.c (enum scan_store_kind): New type.
94872d7f99ceb9da9ecb90064d59d4518c9a6f37 Improve tests for std::vector<bool> printer
ceb76ffc6b65e8e35d6cde1148dc0ac958e4a06c * config/sh/sh.c (sh2a_function_vector_p): Use get_attribute_name.
080c269b61251983df2115b783f749216969d8c8 tree-vect-data-refs.c (vect_find_stmt_data_reference): Handle "omp simd array" arrays with one byte elements.
1612b1febdd5b6b6ad17c96c980a218bfd40c025 omp-low.c (lower_rec_simd_input_clauses): Add rvar2 argument...
b614fca25fac28542b8c6b2df3862688b96e0581 re PR tree-optimization/90913 (ICE in maybe_gen_insn, at optabs.c:7341 since r272239)
c13c129f8f49b41184f5b1c4b64d76d67db90dae tree-vect-data-refs.c (vect_find_stmt_data_reference): Handle even zero DR_OFFSET...
d611cec3de1e54091843019a0d02c23493d288ce re PR target/90972 (ICE in fold_convert_loc, at fold-const.c:2429)
1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd Properly sum costs in tree-vect-loop.c (PR tree-optimization/90973).
bc2687dd948d74b181f71bf4886f4b8719c51f57 re PR c++/90969 (ICE: tree check: expected array_type, have vector_type in array_ref_low_bound, at tree.c:13570)
44ead50eb657c17ca9113db3212fde8b25e655a2 Fix one another thinko in tree-vect-loop.c (PR tree-optimization/90973).
9f962469cabc7fdc2ee830125a5cb4e61e1632e4 re PR target/89021 (Implement mmintrin.h in SSE)
45309d286c80ecad8b7a4efba0e9aba35d847af6 Remove quite obvious dead assignments.
ef874db611879d5004e1d834543e55d31f2bfe1c Fix various issues seen with clang-static-analyzer.
76715c3216cf6ccd071fc852920af55d6b0054ae builtins.c (get_memory_rtx): Fix comment.
12213acba9cff14bb8e37bbafd5918ba3265f829 re PR tree-optimization/91010 (ICE: Segmentation fault (in location_wrapper_p))
14ec49a7537004633b7fff859178cbebd288ca1d re PR tree-optimization/58483 (missing optimization opportunity for const std::vector compared to std::array)
a7b3509eb6aa51d696be5edba6f4e451ceff03a0 re PR tree-optimization/91033 (ICE in vect_analyze_loop, at tree-vect-loop.c:2416)
8ba6ea878fd0965606ba6cfd74cf7097a40ed6c1 Remove another bunch of dead assignment.
cc49641a7132b66a8fdf26038aa1343e60473eaa re PR tree-optimization/91069 (Miscompare of 453.povray since r272843)
6b150619545449f40d14acb87d636535e1e838ac re PR tree-optimization/91069 (Miscompare of 453.povray since r272843)
75da268e1a563a1a52389cd2ecee12d07c45a655 re PR target/88833 ([SVE] Redundant moves for WHILELO-based loops)
6f01ad76c11eacc9f32539f769e4cb3fd169466a re PR tree-optimization/91063 (ICE in set_vinfo_for_stmt, at tree-vectorizer.c:676)
5cee32399049534903f3ddb0bf55657b909492f4 re PR tree-optimization/90911 (456.hmmer regression with r272239)
584b52902b4b1bbcabc0e5bdd4196bd223d2f5a8 [Ada] Ada.Containers.Formal_Vectors: make vectors always bounded
fe04f57a81366e5aaf0fec054d87919f6c243947 [Ada] System.Linux: fix typos in comments
5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4 re PR tree-optimization/91096 (Openmp vector max reduction incorrect)
7ef004023510d0c88e1a8bb718ee2848c1358ea4 [riscv] Fix ambiguous .md attribute uses
ace4317affd3068cc01c06f0928e119f1559519c RISC-V: Fix splitter for 32-bit AND on 64-bit target.
b68cae81760cd158ee465466280fc0df58e6a768 Avoid clash with system header declaration.
f069f0f20fb7a8467cb0dd6f01575e9c56aa8bc2 MAINTAINERS (Write After Approval): Remove myself, already listed in RISC-V port maitainer.
6cda84b509af152b2ea2cfc48f896cb7b776548d tree-vect-stmts.c (scan_operand_equal_p): Look through MEM_REF with SSA_NAME address of POINTER_PLUS_EXPR.
1f88cc260c67c8492ac15490184b8faead4b6f62 re PR tree-optimization/91114 (ICE in vect_analyze_loop, at tree-vect-loop.c:2415)
6c1dae73cd2ceb6a326f786f6d4e8674863de45e PR c++/61339 - add mismatch between struct and class [-Wmismatched-tags] to non-bugs
99b1c316ec974a39bdd949f8559bb28861b69592 PR c++/61339 - add mismatch between struct and class [-Wmismatched-tags] to non-bugs
a0aeb7fb93da156b64fd08391c79ff35a69af7ba tree-vect-stmts.c (vectorizable_comparison): Swap operands only once.
2cb7362310288cce61244e39f90fccd75b1c28e1 Fix folding of vector EQ/NE
831e688af50c5f77a2daa3cd3bfd0f27d54d5d72 fold-const.h (get_array_ctor_element_at_index): Adjust.
72ab1c51b607dd5446ee24ff9fce9178d6b811cb Relax vector_builder::elt sanity check
cf91b5997dec281e4b784c163d76d5be3e8569f6 re PR tree-optimization/91145 (ICE: in vect_build_slp_tree_2, at tree-vect-slp.c:1143 with -march=skylake-avx512 -O3)
d64c6837a72def74a510429cc33e279c355829b7 [PATCH] Fix typo in test case.
f2b29269c407f10718bc935b3dd5c7e8641b6847 re PR target/90723 (pr88598-2.c segfaults with -msve-vector-bits=256)
6c2833e74e4e64a71bafaf6e20e65506bbce5a5c re PR tree-optimization/88497 (Improve Accumulation in Auto-Vectorized Code)
d6350f82315a6d811c6dd0910ea37f64524ef07b re PR tree-optimization/91181 (Failing as_as type conversion in vect_build_slp_tree_1)
7eb5baff994b249c0fb5d913e6f7afa7b9fbbc63 re PR tree-optimization/91157 (ICE: verify_gimple failed (error: position plus size exceeds size of referenced object in 'bit_field_ref'))
7921a90e334117206c6bb78bad57e07fb242214c re PR tree-optimization/91178 (Infinite recursion in split_constant_offset in slp after r260289)
bc59a4cf1af79b77e3621b2103efc02c57ac7aec re PR tree-optimization/91207 (Wrong code with -O3)
b6339213ff68ac5a87b7fdda878f26b52d801b76 omp-low.c (lower_rec_input_clauses): Don't force simd arrays for lastprivate non-addressable iterator of a...
ffbb9818b0efd04bff65c372e3e9444fae634363 RISC-V: Add -malign-data= option.
21caa1a2649d586f4f8830aba43b0c132584f2dd re PR middle-end/91166 ([SVE] Unfolded ZIPs of constants)
efab3e3a7326ad503532955ccd31f953851e388a gimplify.c (flag_instrument_functions_exclude_p): Include namespace/class information in the printable name.
4ce6ab6889446984fd7017e2150962eb4550a7ee Implement more rtx vector folds on variable-length vectors
708cc6132bb374e2c5bd1c4f43f9fe7306d20970 Generalise VEC_DUPLICATE folding for variable-length vectors
c1b3d827832f883e0634b18c88eb2bbde335aa42 Handle IFN_COND_MUL in tree-ssa-math-opts.c
2153fa7b60a430970cfebade3b04c6a4dd3e83f6 re PR tree-optimization/91293 (Wrong code with -O3 -mavx2)
285cf766c1309edd7e61bf0dc45754af987d1b26 RISC-V: Raise error on unexpected ISA string at end.
ee9021bc1565655a1cd47039df58f093c7be0324 RISC-V: Fix testcase on rv64
f66e6e2bea4bf5999c972974f4a13044fdeb02dd re PR tree-optimization/91201 (SIMD not generated for horizontal sum of bytes in array)
860edc46624a23e678934a907d8fccb2fad0dcb5 RISC-V: Promote type correctly for libcalls
779724a5913b4e6a7ccccc0b8b415a772144a067 Add a gimple_move_vops helper function
868363d4f52df19d8d5e9529b8906fa25c8d0c95 Fold MASK_LOAD/STORE with an all-true mask
7551a6e467c64b3155d5b8f005cd7ea7143b21f3 RISC-V: Handle extensions combination correctly in multilib-generator.
609d9bdeab1365b04b84891e5d75cd86d003c8e2 RISC-V: Handle g extension in multilib-generator
e98c3ee9712a360b4f470f930ac0c68863db1d3f RISC-V: Fix C ABI for flattened struct with 0-length bitfield.
5b7ed762347ea9e82a3982b57975747de0943eb4 re PR target/91408 (ICE in extract_insn, at recog.c:2310 since r273981)
dfa6d55af715a2b902d6ed30f2c0276b1709dd5b [Ada] Extend range type in search primitives of formal vectors
0b1fe8cf6f1dde656c505dde6d27279dff388962 Optimise constant IFN_WHILE_ULTs
cb1180d547e3b28547134a06ee020163afa59cc3 Protect some checks of DECL_FUNCTION_CODE
4d732405bd91b54c196fdc38191f838bb01f23a6 Use checking forms of DECL_FUNCTION_CODE (PR 91421)
c6521daac82b717bad7e9e90dc8dd3c4e24ba2c2 re PR rtl-optimization/91154 (456.hmmer regression on Haswell caused by r272922)
93cf5515729f526761489ec3892c6f0ea0d7105b re PR rtl-optimization/91154 (456.hmmer regression on Haswell caused by r272922)
20103c0ea9336d2b5286eb7f2605ace3fd49a431 Add support for conditional shifts
eb2211e35713796c5899939d983d9e8c6d037e60 Add missing check for BUILT_IN_MD (PR 91444)
6490e2556dc1ae5346ef73022ff1e415c35742ad PR target/91441 - Turn off -fsanitize=kernel-address if TARGET_ASAN_SHADOW_OFFSET is not implemented.
f386ca413862152954a0ac73a7a2294fd6bbae1a re PR target/91498 (STV change in r274481 causes 300.twolf regression on Haswell)
a7c81bc1fb43366ca1b4332d8a6042b648a84cdc Use function_arg_info for TARGET_ARG_PARTIAL_BYTES
52090e4dbd064f486af606e3f8a283dbddc7c18a Use function_arg_info for TARGET_PASS_BY_REFERENCE
e7056ca417326a70eca05defb6a8b20b737d3417 Use function_arg_info for TARGET_SETUP_INCOMING_ARGS
6783fdb7057d559aa1da8afa2c15a702c532a03e Use function_arg_info for TARGET_FUNCTION_(INCOMING_)ARG
6930c98c69ad695469ee7daa74b3b6d578afdd0d Use function_arg_info for TARGET_FUNCTION_ARG_ADVANCE
0728477991b0a10cdde60ca1b4ae39fce414041a [Ada] Allow for of iteration on formal vectors
8ef64ab95417d6787b9bd2777ac282932b09a530 re PR target/91498 (STV change in r274481 causes 300.twolf regression on Haswell)
20e7012b755427d1db00ba6f236583ff3c24e710 RISC-V: Add testcase for testing li pseudo instruction
48a31a09839b12127ce7c40d7adc4bd5bf1d3407 re PR target/91522 (STV is slow)
b5a6addb5b60ff6232d1e11367b44f969d2a3e8f 2019-08-27  Richard Biener  <rguenther@suse.de>
2bd86b95f76315f102c52a81453ef375c97e8f1b re PR fortran/91496 (!GCC$ directives error if mistyped or unknown)
8a902edbbdb53a00209e88b6182457941ff196a9 Implement P1152R4: Deprecating some uses of volatile.
f48e4da3259d52076f86aa081cece40dfda7b235 re PR tree-optimization/91568 (internal compiler error: in vect_schedule_slp_instance, at tree-vect-slp.c:3922)
61f5cb2313f7a3336264eeabbe9fbaccd00e49a0 PR libstdc++/89164 enforce constraints for uninitialized algos
1ecaf589db96cd981feaa78c9c55244732fb0cad Fix errors in new test
a169f35890152e8a31ef9bdc0d28a2e0a62e866e RISC-V: Disable -msave-restore for shared libraries.
36ec3f57d305e343ad1bbffa53e3484661a176a6 RISC-V: Fix bad insn splits with paradoxical subregs.
2f4d895197e7b137f50624bef58c9b614bf081e5 RISC-V: Re-enable -msave-restore for shared libraries.
44a06a709565805d68994b65d871565a07ebf73e re PR tree-optimization/91665 (ICE in build_vector_from_val, at tree.c:1904)
8bdcbd013538dae97e72ba4c3c54f524daeeac72 misc/cgo/testcshared: restore gofrontend-local changes
a365fa0636886aeda83e57b84d837cfba13597fe Add call_used_or_fixed_reg_p
26d815a3e587ac04dbd63eec3fb5aecb04db7242 re PR tree-optimization/91723 (builtin fma is not optimized or vectorized as *+)
debae5232b81f4f0adcdc25ad8c8d2645a6ea376 golang.org/x/sys/cpu: define doinit when needed
58cc98767aa1d8136d36467b892dc4adaf427acc Vectorise multiply high with scaling operations (PR 89386)
bdc91a3299f955ed6b862adf0f2fea6d5496bc31 re PR tree-optimization/91750 (Induction vectorization introduces signed overflows)
d6ecb707cc5a58816d27908a7aa324c4b0bc67bb re PR tree-optimization/89386 (Generation of vectorized MULHRS (Multiply High with Round and Scale) instruction)
a6fa2e83e958802036ad9ed558bee1988299e0e7 gnatmake: Accept the `--sysroot=' GCC driver option
8054d17a735e4e1a35e9a24556eea100249345ed re PR tree-optimization/91790 (ICE: verify_ssa failed (error: definition in block 2 follows the use))
defc6f266c1dd625cc64ad1ecfbd1eacbcd66e4f Handle variable-length vectors in compute_record_mode
22b6299199da4efd3944cdaabca1d095d19ff901 Don't treat variable-length vectors as VLAs during gimplification
5fdd6038147e4ba30c8c01332dae8ab0d717bc14 tree-vectorizer.h (get_initial_def_for_reduction): Remove.
31de92e39bbeffb9f1641d292e94b48f70809ae1 tree-parloops.c (report_ploop_op): Copy from report_vect_op.
901083b9bdf69a7b1382f9682c6fd1d5759667dd tree-vect-loop.c (vect_is_simple_reduction): Remove operand swapping.
a923a4639434f9c845db002c8445e61cf5dda545 RISC-V: Fix more splitters accidentally calling gen_reg_rtx.
a7268fd7652406b41707af0c4b49e8523b667360 tree-parloops.c (parloops_is_slp_reduction): Do not set LOOP_VINFO_OPERANDS_SWAPPED.
f24f4c15884bf1ee65a10e2f959842eec4198876 Rework constant subreg folds and handle more variable-length cases
c449d3ae28ff4e133114fb67dbf7dcc7a95ca5d5 Enforce correct COND_EXPR order for EXTRACT_LAST_REDUCTION
b3c4d0dd309b7027f6e0f0b9a84829fcd53f7d64 tree-vect-loop.c (vect_is_slp_reduction): Remove.
ff6686d2e5f797d6c6a36ad14a7084bc1dc350e4 New IPA-SRA
6e222b2a3aede20f3093802d1649e75848e3bd2b re PR tree-optimization/91822 (FAIL: gcc.dg/pr88031.c (internal compiler error))
d63eadac7db10d4846bdffa93fd164cb035fb102 re PR testsuite/91821 (r275928 breaks gcc.target/powerpc/sad-vectorize-2.c)
9f635bd13fe9e85872e441b6f3618947f989909a Avoid adding impossible copies in ira-conflicts.c:process_reg_shuffles
193410e311002ebe1013a7b18ad30c0c2e8f31b1 * config/abi/post/riscv64-linux-gnu/baseline_symbols.txt: Update.
d469a71e5a0eb512b522248841c56496abca8cd6 tree-vect-loop.c (get_initial_def_for_reduction): Simplify, avoid adjusting by + 0 or * 1.
a7701dd16103048432ec8051e4773760c0e2cf90 tree-vectorizer.h (_stmt_vec_info::const_cond_reduc_code): Rename to...
fadb01364d36a50836201bc9a6a03e525d267967 re PR tree-optimization/91896 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1687)
704bc4bb36a0b091c42955608c47aee4d43faf8d Add TODO_update_ssa for SLP BB vectorization (PR tree-optimization/91885).
9593e8e5e391e77bb065d4689b7511bed6a640a3 tree-vect-loop.c (vect_analyze_loop_operations): Also call vectorizable_reduction for vect_double_reduction_def.
8eb60b2f2254eee16d44ed5169837743b0debd5a Remove include directives for deleted Profile Mode headers
1b4dbccc1f828fa00e6acc8b88d24301c65552df tree-vect-loop.c (vect_analyze_loop_operations): Analyze loop-closed PHIs that are vect_internal_def.
0bfc204142439b8167bf3447d7d12b65d1da82f8 re PR tree-optimization/91896 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1687)
18908a56e18f15f84a91a4529923dd0878b2294f Fix reduc_index==1 handling for COND_REDUCTION (PR91909)
29f26978866f32bddd656847441a3a953ffd7a21 tree-vectorizer.h (_stmt_vec_info::reduc_fn): New.
b19d2e5e1a895ee5e331c20f7eec02f3081b3d79 vec_perm cost to 1 for non-Power7 VSX architectures
61362d9d18916bd5b694385982cf4a02b7537b0e gimple.c (gimple_get_lhs): For PHIs return the result.
8209db250f305cc79fd751c3ed056fb9ff551a83 [C] Improve diagnostics for vector types
c7ea76ea5629e9f0357de49847274cf80e35f2f8 tree-vect-loop.c (vectorizable_reduction): Move variables to where they are used.
0b92cf305dcf34387a8e2564e55ca8948df3b47a invoke.texi (early-inlining-insns-O2): Document.
8951374df1e7139b163129c9e18161c5253d0fe2 libada: Remove racy duplicate gnatlib installation
61e619b4fd1252d0fee7f4bfc821824031c52dc5 Disable tests that aren't valid in parallel mode
291fa23ac04e317877c1e102937532f080180bb2 tree-vectorizer.h (stmt_vec_info_type::cycle_phi_info_type): New.
9ff9a0a5e6edd8729f559bf86ca06f781c4da246 re PR tree-optimization/91940 (__builtin_bswap16 loop optimization)
9f4d9a366b3299c276043ab987234c7bed7d29f2 tree-vectorizer.h (vect_transform_reduction): Declare.
806bdf4e40d31cf55744c876eb9f17654de36b99 re PR tree-optimization/91975 (worse code for small array copy using pointer arithmetic than array indexing)
dcd2ca63ec5c467decb70db983fc19a8329f67dc Introduce can_vcond_compare_p function
69f8c1aef5cdcc54d5cb2ca4f99f4f26c2f822a9 tree-vectorizer.h (_stmt_vec_info::v_reduc_type): Remove.
f78347996e02a8a767a525bfb764e769afe29d67 tree-vectorizer.h (_stmt_vec_info::reduc_vectype_in): New.
4a8841c0413d52261a8d024577381582d07a866a tree-vect-loop.c (vect_is_simple_reduction): Simplify and allow stmts other than GIMPLE_ASSIGN in nested cycles.
247afa98ba2512c7d90f3e9e05af41067ef756a3 re PR middle-end/92046 (Command line options (that are per-functions) are affecting --params which are global.)
1e99e6fe6bb61ad2011030324cfdf84d2a67e75d vec_promote_demote cost to 1 for non-Power7 VSX architectures
9d99596e3289766c392466eebb8b2f2d2f4f1bc1 re PR tree-optimization/92066 (Many vectorization tests FAIL)
bd01f4da3ecc88b25712e2d2a8f5c7ab3ed1b0e3 tree-vect-loop.c (vect_analyze_loop_operations): Adjust call to vectorizable_live_operation.
56898e437a538c7edc0724a3650f5cb81c9d5721 [C] Avoid exposing internal details in aka types
7bd8bec53f0e43c7a7852c54650746e65324514b re PR tree-optimization/92069 (ice in vect_analyze_scalar_cycles_1, at tree-vect-loop.c:560)
4236e880ee7902f789f8b99e21faea33ecb8a6dd mips.c (mips_cannot_force_const_mem): Reject vector constants.
c30587c0200f52f8845a5aea21bd7bef6cbe0bf4 re PR fortran/92094 (ice in vect_transform_stmt at tree-vect-stmts.c:10921)
c1d781707eb611d65aa4e1275f246debba557a3d [C++ PATCH] clone_function_decl breakup
bf78ed91a445d188e4368adc30dd5c32d973ed6e re PR tree-optimization/92119 (ICE: SIGSEGV in contains_struct_check (tree.h:3380) with -Os -fno-tree-dce -fno-tree-dse -ftree-slp-vectorize)
aab8c2fd6542a52663243eec160b80bdd61516d5 tree-vect-loop.c (vect_valid_reduction_input_p): Remove.
3599dfbaa22b95ecabd3da9ba68ad4bb4f1124a4 RISC-V: Include more registers in SIBCALL_REGS.
7ca9ca86bd43ab86cb023c1a7cf1dc465b2e2c25 re PR tree-optimization/92129 (ICE in vectorizable_reduction, at tree-vect-loop.c:5869)
aa9dffac731d0359a0e7a925ff8f4a1bef182eac tree-vect-loop.c (needs_fold_left_reduction_p): Export.
a421fe9e610b5dbfce1913cd724c8ba193addd47 [vect] Refactor versioning threshold
31b35fd503e1c6713839db24044812d237aba5f1 [vect] Outline code into new function: determine_peel_for_niter
f261d4808cc28a2dfd47fe06c97364c0869bb78f [vect] Be consistent in versioning threshold use
58baf7ab85cbb1068a651c96f7d56e2902ead6cc tree-vect-loop.c (check_reduction_path): Compute reduction operation here.
47519a5687d48af4b932d54b0525fafcdc0e48d6 PR libstdc++/92124 fix incorrect container move assignment
c11cccc0285f02f117a1e80924fb7673b6486ce9 tree-vectorizer.h (_stmt_vec_info::cond_reduc_code): Remove.
fa0c8df71d4f0476834db0b7cd88524878b46cf7 Avoid recomputing data references in BB SLP
1d778697b37aec23db5b6003dfe08d2d78bd9424 Move code out of vect_slp_analyze_bb_1
da157e2ee9e12348df78246ee33b244b7cc334df Avoid setting current_vector_size in get_vec_alignment_for_array_type
a5c3185a503fbdbc1bf05efe8ab9d12850a211c1 Pass a vec_info to vect_supportable_shift
dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8 Pass a vec_info to vect_supportable_direct_optab_p
1bd5196c9b1a0cd7280adadd6d788f81a82ca023 Pass a vec_info to get_mask_type_for_scalar_type
7ed54790da87bbb4a134020a9fb8bd1b72fd0acb Pass a vec_info to get_vectype_for_scalar_type
cdbe6e9bb4ae2882f77f94993783085fa342a9f9 Pass a vec_info to duplicate_and_interleave
43fdde5738ea0554fa000987e9769add027f4876 Pass a vec_info to can_duplicate_and_interleave_p
6c261c667801eee46a6221d3681d17493c0bbd65 Pass a vec_info to simple_integer_narrowing
db8374a63fd0ea84f72ac76cc899be44df36df6a Pass a vec_info to supportable_narrowing_operation
b0dab10e71b03441beefbbf951c0812056413cd3 Pass a loop_vec_info to vect_maybe_permute_loop_masks
830e90dab3dee5c8129c7760ff09ab112c2cd271 Pass a vec_info to vect_halve_mask_nunits
8d1473958808fe4714ec24991ac83ee6cbf45397 Pass a vec_info to vect_double_mask_nunits
ba7f76dd6bbf038948bbe516764a8bb0c851f750 Replace current_vector_size with vec_info::vector_size
d2db7f790194ac690beae00f2f7956e3fe865cac [vect] Only change base alignment if more restrictive
ae7f3143a3876378d051e64c8e68718f27c41075 re PR tree-optimization/92161 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1687)
30c0d1e3cf8b03992e08cfd00ccf1fcb638d3c03 tree-vectorizer.h (_slp_tree::ops): New member.
53b15ca96116544a7a3ca8bc5f4e1649b74f3d45 re PR tree-optimization/92162 (ICE in vect_create_epilog_for_reduction, at tree-vect-loop.c:4252)
87121696fb2ddbec5f33daa359234850f7fd306d Fix use after free in vector_size change
9107d6526b938eba8168025c0d90d06ad3634e69 re PR tree-optimization/92173 (ICE in optab_for_tree_code, at optabs-tree.c:81)
6c7b0df8029d01e05577668333660d0bc58a3023 re PR tree-optimization/92173 (ICE in optab_for_tree_code, at optabs-tree.c:81)
2cae56bd61a048b0fac5c2829283744abc44c545 Remove redundant std::allocator members for C++20
f99d62629933adf91e7e0bc1b1ff344ffb68e1a2 tree-vect-slp.c (vect_build_slp_tree_2): Do not build op from scalars in case there's a constant operand in its definition.
6bd7e7069504668eb37b2b9c976f4f0942666ef2 re PR tree-optimization/92179 (r277288 causes ICEs compiling several test cases)
82e8e335f917b9ce40801838c06f7945cf88da43 re PR tree-optimization/65930 (Reduction with sign-change not handled)
603aec6775d5191fafd57412364578db68432f74 Adjust extension types to use allocator_traits
85f241149328ce8e677cbdfa7fa8592aca155066 PR c++/91369 Implement P0784R7 changes to allocation and construction
0214d31a48f867b9b00134cea7223d35ed7865aa tree-vect-slp.c (vect_analyze_slp): When reduction group SLP discovery fails try to handle the reduction as part of...
0caece2c6b3fe5d48104db170e72cf3660f825db re PR tree-optimization/65930 (Reduction with sign-change not handled)
3574e5df1f2a483b992b272ec57080472c24f0cb re PR tree-optimization/65930 (Reduction with sign-change not handled)
e227594789d909fbad56f6036910938678738f92 re PR tree-optimization/92205 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1688 since r277322)
4352288a3df915575a2b820f702242908740106f tree-vect-slp.c (vect_get_and_check_slp_defs): For reduction chains try harder with operand swapping and instead of putting a...
bf037872d3cd0928bea72335dc7a138a0b2fb43c ipa-sra-19.c: Avoid unprototyped function
ea3628bdeb9a5411aaa1aa567fa6bc005057482f symbols-summary.h (fast_function_summary<T *, [...]): Free m_vector.
f8cb8bcde13df2f2b1a996567c849ec512eec210 arc.c (hwloop_optimize): Add missing space in string literal.
ea133b14f48ed5730748a7e02e322fb07ccc2d85 tree-vect-loop.c (vectorizable_reduction): Verify STMT_VINFO_REDUC_IDX on the to be vectorized stmts is set up correctly.
89d0345ad7b8d84045813972ee60557a6b511c57 Fix reductions for fully-masked loops
77100812a3bf4c693cb24c65be54ea367f17a246 tree-vect-slp.c (vect_get_and_check_slp_defs): Only fail swapping if we actually have to modify the IL on a shared stmt.
7098ab48b08782af5016dc8ac6d10215994447a4 re PR tree-optimization/92222 (ice in useless_type_conversion_p, at gimple-expr.c:86)
8bbf3dea78325c39d7750e815024eef960415592 Adjust predicates and constraints of scalar insns.
ffbdd78a4a84d80a5303d4f7a20553cf96954db9 Fortran] OpenACC – libgomp/testsuite – use 'stop' and 'dg-do run'
e0c4f7fbd6a4ee8e3a1468514044bd941fa28522 tree-vect-loop.c (vect_create_epilog_for_reduction): Use STMT_VINFO_REDUC_IDX from the actual stmt.
97c6bea819ec0a773041308e62a7c05c33f093b0 re PR tree-optimization/92241 (ice in vect_mark_pattern_st mts, at tree-vect-patterns.c:5175)
96d9d1620f28517de0464ab636662d9a35a92993 re PR tree-optimization/92252 (ICE: Segmentation fault (in vect_stmt_to_vectorize))
fa03d5763a91f5061152842c92fbb4e446a3b75f re PR middle-end/91272 ([SVE] Use fully-masked loops for CLASTB reductions)
e18a6d1441cfb5d43d3193a2643207fc3f95fd5a gcc/riscv: Add a mechanism to remove some calls to _riscv_save_0
891966480630f58f115825c31badc59dd18d5eb9 re PR tree-optimization/92241 (ice in vect_mark_pattern_st mts, at tree-vect-patterns.c:5175)
b7ff7cef5005721e78d6936bed3ae1c059b4e8d2 re PR tree-optimization/65930 (Reduction with sign-change not handled)
1d149b7260bcc4c0c6367b3aea47a8b91a1cf345 Fix reduc_index calculation in vectorizable_condition
97c146036750e7cb3966d292572ec158a78f356e [vect]PR 88915: Vectorize epilogues when versioning loops
318bd8c60d83ca294b237559908dd9f88ee7c300 re PR tree-optimization/92260 (ICE in exact_div, at poly-int.h:2162)
b4673569c2a8b974e3f84ffaa547941c5d40cfe5 re PR tree-optimization/65930 (Reduction with sign-change not handled)
b81f2dafdbd2c5aa49213b35dc12d4610834e39e re PR tree-optimization/92275 (ICE: error: definition in block 11 does not dominate use in block 15 since r277566)
9aeb3bef2cae234dbb90609392e536bafc09365c Apply C++20 changes to various iterator types
1297712fb4af6c6bfd827e0f0a9695b14669f87d [vect]Make vect-epilogues-nomask=1 default
d9a6144c87bd4c15c855785ced57907d66754861 [testsuite] Fix wrong order of dg-additional-options
271da732841345d3834cf458d47f8242ac5ef513 PR testsuite/92127: Disable unrolling for some vect code model cases
8dc56a2244cfe35cbdb53e0f586c16f90a2677e4 RISC-V: Build soft-float divide routines for -mno-fdiv.
360386c7ef1c3fa30de216b1d68ed6a27296fd80 ipa-fnsummary.c (inline_read_section): Set vector size ahead of time.
b76f4e6c06bd494d2383c4c16d1e1a034da74641 re PR bootstrap/92301 (Wrong vectorizer code since  r277566)
a6ba623777513e31721030092e4d786f461a0f06 re PR tree-optimization/92345 (ICE in vec<_stmt_vec_info*, va_heap, vl_embed>::space (vect_get_and_check_slp_defs))
818b3293f4545d899148810f4f7d676b81e989dd [SLP] SLP vectorization: vectorize vector constructors
494d6c28c53d0852bb6468b1f1ca189159775fcc [vect] Clean up orig_loop_vinfo from vect_analyze_loop
0ec77a6c25cbe321d9712e41a3aa04dff97eaaa6 SLP: Initialize variable to fix bootstrap after r277784.
a1b680597178df866e6de80444695fab82b90492 [D] Remove unchecked to_constant in VECTOR_TYPE handling
f340142b839ca1ed576013b4dba3d34245bac7d0 re PR tree-optimization/92324 (ICE in expand_direct_optab_fn, at internal-fn.c:2890)
02bf7e6fa219f939b3225c54fbe8bab2133b1aeb re PR tree-optimization/92371 (ICE in info_for_reduction, at tree-vect-loop.c:4106)
a81ffd93b83c4be250514ff385b5b88fa5c3835b Allow libcalls for complex memcpy when optimizing for size.
2e7a4f579b1157754ea20a03431b4fa80cd4567a [vect] PR92317: fix skip_epilogue creation for epilogues
72d6aeecd95ec49fff1d258e4631167a03351cbb Restructure vect_analyze_loop
8ec5b16a9a3dbd6d825596c22f1bc32646de28fe Check the VF is small enough for an epilogue loop
feba3d8838118d3c41b8e25f13beaa6a15b38302 Use scan-tree-dump instead of scan-tree-dump-times for some vect tests
06af1f1a0def9de076ec629ea634122f15882ce6 tree-vect-loop.c (vectorizable_reduction): Remember reduction PHI.
4b205bf82d06c4d9d0ae7b78e54c712d79d5b021 Don't vectorise single-iteration epilogues
1aeecaf58fa1fb33a08fba9b62f007740e9cb843 Fix inefficient vector constructor.
09eb042a8a8ee16e8f23085a175be25c8ef68820 Generalise gather and scatter optabs
f486280c53be53136f0bb9b578f43dc6c9c5acea [C] Opt out of GNU vector extensions for built-in SVE types
f1e1ed3314b7c6308f64cbbcf6d1916e239c8e35 re PR tree-optimization/92324 (ICE in expand_direct_optab_fn, at internal-fn.c:2890)
be5f7eccf766a4c3a59b821f77ce320001df838f Handle POLY_INT_CSTs in declare_return_value
714fc568abfd02d7dc28607ff60301902f830917 re PR tree-optimization/92324 (ICE in expand_direct_optab_fn, at internal-fn.c:2890)
b602712b3ea2a0729a2eda61bd9ee795aba6138f [vect] Disable vectorization of epilogues for loops with SIMDUID set
4e9d58d16767b1bc686f0c4b3bd2da25dc71e8f3 [vect] PR 92351: When peeling for alignment make alignment of epilogues unknown
d308ca27c71e43625b378dc6c2774105867d4fa7 Use correct vector type in neutral_op_for_slp_reduction
87b47251924c7539a9a8e191587d118a14496473 [vect]Account for epilogue's peeling for gaps when checking if we have enough niters for epilogue
599bd99078439b9f11cb271aa919844318381ec5 Fix SLP downward group access classification (PR92420)
6e9a85d5052607c8ed31940ce2794323df9463cc * typeck.c (cp_build_binary_op): Sorry about <=> on VECTOR_TYPE.
f03099371687f3f087e4949a68daccf76c8d18bc re PR tree-optimization/92347 (ICE in vect_get_vec_def_for_operand_1, at tree-vect-stmts.c:1537)
62aee289e4791fd68aace01accf433fb26b3eeae Add OpenACC 2.6 `serial' construct support
028d409252058d88805341a3f6dc0ff1553f5bdc Apply mechanical replacement (generated patch).
0c29cac4a8cc840a0a597313147a7e0df0064c54 Remove gcc/params.* files.
830d1b18526dd1f085e8a2e1467a6dde18fc6434 re PR tree-optimization/92461 (ICE: verify_ssa failed (error: excess use operand for statement))
41098a37444b69d7b3b3072fde52e2785bef7012 re PR tree-optimization/92460 (ICE: verify_ssa failed (error: definition in block 13 does not dominate use in block 22))
3f446c27195400aea98ff9c37ed2651ab54f7c03 Fix vectorizable_conversion costs
e4020b28d02a00d478a3a769855ae6a8d9cc6b26 Don't assign a cost to vectorizable_assignment
6eed64b96d886da2518d86eae5bc0a5ed66cabe0 Avoid accounting for non-existent vector loop versioning
61e5f2df0345bcc1f7675125922692d727e20603 Account for the cost of generating loop masks
4a96e1c4dd7ab3bd412ba5b8b1206efd8feb4155 Enable libsanitizer build on riscv64
eb270950acbae6f70e3487a6e63a26c1294656b3 Support extended aggregate jump function in ipa-cp
9773f69c1161677e68f693562da82c92fd3821da [testsuite] Fix PR92464 by adjust test case loop bound
f09552335030433018fd5f7f6b9848339b5ca2da Add a targetm.vectorize.related_mode hook
d083ee47a9828236016841356fc7207e7c90bbbd Replace mode_for_int_vector with related_int_vector_mode
0a0ef2387cc1561d537d8d949aef9479ef17ba35 Add build_truth_vector_type_for_mode
e8738f4e9686203451fd11f05b268b8a31b95ebd Remove build_{same_sized_,}truth_vector_type
10116ec1c147a76522cafba6b6a5b4ed1cb37b77 Pass the data vector mode to get_mask_mode
95da266b86fcdeff84fcadc5e3cde3d0027e571d Use build_vector_type_for_mode in get_vectype_for_scalar_type_and_size
0203c4f3bfb3e3242635b0cee0b9deedb4070a62 Use consistent compatibility checks in vectorizable_shift
e021fb865564b62a10adb1e98f75b5ea05058047 Replace autovectorize_vector_sizes with autovectorize_vector_modes
1c84a2d25ecd4c03dde745f36a4762dd45f97c85 Replace vec_info::vector_size with vec_info::vector_mode
2df4150075c03f8a292c40afd3bb25febb673578 Make less use of get_same_sized_vectype
7f52eb891b738337d5cf82c7c440a5eea8c7b0c9 Require equal type sizes for vectorised calls
df7c22831f1e48dba49479c5960c1c180d8eab2c Support vectorisation with mixed vector sizes
a55d8232df3dd4f7a3f5b70025074c3919b802a6 Avoid retrying with the same vector modes
05101d1b575a57ca26e4275e971da85a0dd1d52a Allow mixed vector sizes within a single vectorised stmt
9c437a108a14b9bdc44659c131b0da944e5ffeab Vectorise conversions between differently-sized integer vectors
60838d634634a70d65a126166c944b159ac7649c Consider building nodes from scalars in vect_slp_analyze_node_operations
3771033244b3ee1b53a8a00d734580b16384fdd3 Tweak gcc.dg/vect/bb-slp-4[01].c (PR92366)
d03431d0f59f5aa5c2a8e2e5ea94ea1660b240f8 re PR tree-optimization/92324 (ICE in expand_direct_optab_fn, at internal-fn.c:2890)
b9f71c51cd578c6ab6ad2986edb80ba48aa477bc re PR tree-optimization/92512 (ICE in gimple_op, at gimple.h:2436)
f31e515fd519fe6ec3dc0b5cf5b1388fd1373ba4 Fix vector/scalar to vector/vector conversion (PR92515)
9b75f56d4b7951c60a656396dddd4a65787b95bc Apply maximum nunits for BB SLP
f884cd2fea62eebe71b422e1c97e550958dd42ae Extend can_duplicate_and_interleave_p to mixed-size vectors
bcc7e346bf9b5dc77797ea949d6adc740deb30ca Optionally pick the cheapest loop_vec_info
1fb2b0f69ee849142b669ba1b82264ce6d0f75f9 Move canonicalisation of dr_with_seg_len_pair_ts
e9acf80c96d681917d930869b7cbfb7d2fa54d51 Add flags to dr_with_seg_len_pair_t
52c29905259363ce2b78dd7aa8a25cf531cddb3a Record whether a dr_with_seg_len contains mixed steps
cad984b289e2b3aca786314c673339eb0500fefa Dump the list of merged alias pairs
b4d1b635737a4780e5be247f8be9550eaf83dae5 Print the type of alias check in a dump message
f9d6338bd15ce1fae36bf25d3a0545e9678ddc58 Use a single comparison for index-based alias checks
5be106b86006e00c80bf846a172b2b69b40d10ef re PR tree-optimization/92558 (Miscompare of 554.roms_r with -Ofast -march=znver2 -flto since r278289)
10a73df76280e12886cb20b028727436d73724c5 re PR tree-optimization/92516 (ICE in vect_schedule_slp_instance, at tree-vect-slp.c:4095 since r278246)
1aeffdce2dfe718e1337d75eb4f22c3c300df9bb LRA: handle memory constraints that accept more than "m"
8489e1f45b50600c01eb8ed8c5d0ca914ded281c Optimise WAR and WAW alias checks
13c247d6f2a75b7e7a11546e897489716bc31506 Handle VIEW_CONVERT_EXPR for variable-length vectors
78930e4b4867c0558cf347778591a67a0b235ca0 Add an empty constructor shortcut to build_vector_from_ctor
58c036c8354e4d14551ceaeffaa1dda2fe445640 Add optabs for accelerating RAW and WAR alias checks
e89a689f0a1b94083af100314373a6c2ef2c280e Initialize a variable due to -Wmaybe-uninitialized.
f1e0c7e0eb3eafb122fc3d00242828c82a9286a2 re PR tree-optimization/92555 (ICE in exact_div, at poly-int.h:2162)
04c4599d30b1eb7c21d39b15a685aa1d9b8bf968 re PR tree-optimization/92554 (ICE in vect_create_epilog_for_reduction, at tree-vect-loop.c:4325)
ef8777c14ce8694f53eab7a88d24513cbf541ba4 re PR tree-optimization/92581 (condition chains vectorized wrongly)
2439d584d5def75d705f33218bb3b97fca4c11a1 re PR tree-optimization/92537 (ICE in vect_slp_analyze_node_operations, at tree-vect-slp.c:2775)
140ee00a961fda084c1b4b3f0e7e489a917858f7 tree-vect-slp.c (vect_analyze_slp_instance): Dump constructors we are actually analyzing.
516fd7cedb025b09000563cdba6214461621400d Add pool_allocator for fibonaci heaps.
83115e9eb8a54893088eb556fb4cc9194c0c5926 libgomp/test: Add flags to find libatomic in build-tree testing
be12e7c72676a25cf1cd2fef513066283887760a Adjust expected output for bb-slp-21.c (PR 92527)
28cebdb178ecfad17726711c78e1aa669cb5393c Restrict bb-slp-40.c to targets with VnQI addition (PR 92366)
0f6e9b2946bfde1086263f4457ef9f11b0edded3 Restore stmt def types after scheduling two-operation SLP
a877996fa38034348c569f2fe1651e88a99df737 revert: re PR tree-optimization/91790 (ICE: verify_ssa failed (error: definition in block 2 follows the use))
d78b70959f334699bf556e9b8d4e0a8c12a64b46 cfgloop.h (loop_iterator::~loop_iterator): Remove.
b0d5547612f08d7112d9284a7b5a862df3373570 ipa-fnsummary.c (evaluate_conditions_for_known_args): Be ready for some vectors to not be allocated.
9c572192f0019c3dec3ef8c00c00c809e355820f Fix previous commit.
7c327e2d4d04966c8c5dc19cee9e242befdff6ef re PR tree-optimization/92596 (ICE in exact_div, at poly-int.h:2162 since r278406)
934f135b967c7501be6e2e10a2c3c03c54a198d3 Add missing VECTOR_MODE_P checks (PR 92595)
91f161b03b649984991573c2f2605555da4a678c Add more markup to vect-alias-check-{1,18}.c (PR 92543)
557532d1728af193d47867dabbe26bd556fb8586 Reject versioning for alignment with different masks (PR 92526)
27071013521b015d17a2666448f27a6ff0c55aca Move EXTRACT_LAST_REDUCTION costing to vectorizable_condition
aa5521f298fc8042e11e7b352270a33e6c454cb4 Fix markup in gcc.dg/vect/vect-cond-reduc-3.c
f2f3dbc67b85af0f1b6c6feb529a67baf011939c Disable epilogue loop vectorisation for vect-widen-mult-u8-*.c
204b0bebee5343b5bd07e2a7be6fd74d6698b937 re PR tree-optimization/92618 (error: type mismatch in binary expression in reassoc since r273490)
9340d34599e6d5e7a6f3614de44b2c578b180c1b Convert inliner to function specific param infrastructure
1e83bd7003e03160b7d71fb959111e89b53446ab Convert inliner to new param infrastructure
f10d2d85c90c9c649675c248cd5a99f66288f81f cfgloop.h (get_loop_exit_edges): Add extra parameter denoting loop body, defaulted to NULL.
c6aef8d8009e324c971b892e8fa3c163bfdf6ba1 tree-vect-slp.c (vect_detect_hybrid_slp_stmts): Add assertion.
f4a74d2786ec812e40cfd0b3b7fa3cbeb2093444 re PR tree-optimization/92645 (Hand written vector code is 450 times slower when compiled with GCC compared to Clang)
e4c935cb98add40d0a6350a798a8258951dfc9d9 Update vect_char_add target selector to use its own cache
1fa715db5490fb44668e0a37f9a5927d9030a50e re PR tree-optimization/92645 (Hand written vector code is 450 times slower when compiled with GCC compared to Clang)
1f9fae28095488a9accd1e7688116ed4d145b03f [PATCH] Fix PR91790 by considering different first_stmt_info for realign
88feafba3cb5b186d53080c4958474065c4bd5d2 re PR tree-optimization/92690 (vector CTOR optimization performs invalid conversion)
477daf831aea18923733772d686eb1ed448d96e7 target.def (TARGET_VECTORIZE_BUILTIN_CONVERSION): Remove.
78307657cf9675bc4aa2e77561c823834714b4c8 re PR tree-optimization/92645 (Hand written vector code is 450 times slower when compiled with GCC compared to Clang)
68578d6efa09a5e5d3e7eca4de48f03b21f701c0 re PR tree-optimization/92645 (Hand written vector code is 450 times slower when compiled with GCC compared to Clang)
34b43828f840640f8275712867fc52ef6c2714dd Handle C2x attributes in Objective-C.
438d9c4afa635c7a1475feebbc220fe8d335c664 re PR tree-optimization/92715 (error: position plus size exceeds size of referenced object in  ‘bit_field_ref’)
60178a322b4e8d0dc6cf50f57f8fa1fdf624a1f0 Testsuite: Turn off vect-epilogue-nomask for slp-rect-3
3edaed39583aeb49cfda7093ed4c0f9fed3fbea0 Don't pass booleans as mask types to simd clones (PR 92710)
ce19a4822794992097deab96bf15bf78ff481ea1 Improve tree-vect-patterns.c handling of boolean comparisons
4177e933b309408e69eb5561fee7a3cc5e6f8899 Make vectorizable_operation punt early on codes it doesn't handle
1c5d68a677b076262c5508e6d4fbdb765cba2d2f Make vect_get_mask_type_for_stmt take a group size
0c3ea6b3424ee4d32d97ca5d7453891b587b3132 Record the vector mask precision in stmt_vec_info
02d895504cc59be06fc3f7ec0cfd4eb160561211 Don't defer choice of vector type for bools (PR 92596)
7e99af4816cfad578094fcf08e2377f3ed76e201 Fix DR_GROUP_GAP for strided accesses (PR 92677)
d005f61e7a0dbb2c991f13b4b61b1a27ca2d8b73 re PR fortran/91003 (ICE when compiling LAPACK (CGEGV) with optimization)
7a4f45d7e61e651330931df9d09fe6299874929d driver: Do not warn about ineffective `-x' option if no inputs were given
65ef05d0b7fb429c5760189e638c441dc3da33f4 [C] Add a target hook that allows targets to verify type usage
2679730bab0202e7591adc6ac0ea1347b8954983 re PR tree-optimization/92742 (ICE in info_for_reduction, at tree-vect-loop.c:4367)
fddcfa5b84bf8a063e3e1347d787df5a36beceb2 Tighten check for vector types in fold_convertible_p (PR 92741)
3d109462bdd666cc5ce2d0b6b0c3b7a3c19b0b4c re PR tree-optimization/92645 (Hand written vector code is 450 times slower when compiled with GCC compared to Clang)
89ee3a872fdf460402d1fc137e5cdce20f62bc8e re PR tree-optimization/92751 (VN partial def support confused about clobbers)
5105b576dfdcae0c6cc30a89a68b4ef3cbf56a1c re PR tree-optimization/92645 (Hand written vector code is 450 times slower when compiled with GCC compared to Clang)
577f4a0e5e7f7ef9b5729a3eed79e523cba9dfa9 re PR target/92758 (r278833 breaks gcc.target/powerpc/fold-vec-splat-floatdouble.c)
2c98350fcb269a653b11f73ca0175679aa29977a Mark constant-sized objects as addressable if they have poly-int accesses
ee1de08d4d22648cf3168caa60e283135755da85 re PR c++/91369 (Implement P0784R7: constexpr new)
6f1e966874de23d7e47cbaebfb5a9de6759cb089 [C++] Opt out of GNU vector extensions for built-in SVE types
7b86aaf45c00ec038a0da003f41d5334a00e603c Fix VIEW_CONVERT_EXPRs for VECTOR_BOOLEAN_TYPE_Ps
a3408fa3fbf20455eb3b17b5c78397f9d66065c7 re PR tree-optimization/92803 (error: type mismatch in 'vec_perm_expr' since r278764)
b0a71a184c6e2ec2cdf5eed90308d4e96fb1beda re PR tree-optimization/92818 (Typo in vec_perm -> bit_insert pattern)
56b4b16eb18e8af5615a9c7b56c6b5e7f9c3adf0 Check for bitwise identity when encoding VECTOR_CSTs (PR 92768)
8575d5925226a8f92ee644d6d59a2b1b93840d94 [Patch, GCC] Fix a condition post r278611
81884594ce15b7117d136380c8d0661b57ab558c re PR tree-optimization/92768 (Maybe a wrong code for vector constants)
2ef278569f60a2c1556f1752aeba39c586521371 re PR tree-optimization/92819 (Worse code generated on avx2 due to simplify_vector_constructor)
ea1ff9e46c7ec5e49ec671616cfcf405ef665054 Avoid quadratic behaviour in prune_runtime_alias_test_list
2b99bed8443f97550962e6e994b7395534a38e0c Enable QI/HImode vector moves
6d8fd122c4f856e9c6037adc310505f2d65347d9 Fix overflows in -fprofile-reorder-functions
8b905e9b0c09530c0f660563540257f3d181c2ac Enable mask movement for VCOND_EXPR under avx512f for 128/256-bit vector when integer mask is available.
8e03b21e84e4b6a3c806bb48bb5eceac1f7ed273 re PR tree-optimization/89007 ([SVE] Implement generic vector average expansion)
49647b7b25673273262fb630598027c6d841690f re PR tree-optimization/92834 (misssed SLP vectorization in LightPixel)
e3126e5f649c8eebe07fc517d86f10d6867b7eec [GCC, Vect] Fix costing for vector shifts
ca6932ad0ccbbbe3c788cd71595d9a25b8ae0d20 typeck.c (check_for_casting_away_constness): Add location_t parameter and use it.
ca49c831ca9c042db6cea746c21040c1ada18abb Disallow EXTRACT_LAST_REDUCTION for reduction chains
9ec35478ccf0f3539988a054b7996278706a7710 Fix EXTRACT_LAST_REDUCTION handling of pattern stmts
f1c13d6ddeecc9da5f53643b6b6b715546d670fe Record the loop masks needed for EXTRACT_LAST_REDUCTIONs
b78500ecb86ef800509270d2d2f161e4eb9aadd0 Add missing conversion in vect_create_epilog_for_reduction
b78d005e8fa47fd698f103ee62d145c01f05de38 Make dwarf2out punt for MODE_VECTOR_BOOL
6004c17b4d1a2dd1e1936b2e705a5ccfb6e48ab2 libstdc++: Rework std::copy/copy_backward/move/move_backward/fill/fill_n algos
f5c03155aa77bdb065fed3c5a0031db45a850493 re PR target/92723 (ICE in expand_shift_1, at expmed.c:2635)
d878b2c9819e0ae9e942c87c3eb547b0bfb30dc5 [Ada] Use correct subtype for call to Last in formal vectors
666b46c6106dbd3ad6a27be4bf1844ccbaa8e67d [Committed, testsuite] Fix PR92870
1a4c0446c0b38d86e7385a114cd99af591eece05 re PR target/92908 (wrong code with -Og -fno-tree-fre -mavx512bw and vector compare)
070fa48b0a4fbdc754e18962d586f41cc263dad7 Fix PR92950: Wrong code emitted for movv1qi
8354bb0ebe5be8427c3795d0a32ad0564bf71489 Add pointer to PR92772
ed0eca5e631a1652c42a7f91b6c557aea887e1ce Don't mangle attributes that have a space in their name
14818f987abbb15c203043838e4ef9fbb20c783e PR c++/92745 - bogus error when initializing array of vectors.
d42b84f427e404e6deca78a4cc76c40ab506d737 testsuite: Fix run-time tracking down of `libgcc_s'
c8e759b4215ba4b376c9d468aeffe163b3d520f0 libgomp/test: Fix compilation for build sysroot
96bea935c08ab0773b02cdeed7a2c066744fe861 [C++] Fix ICE for binding lax vector conversions to references (PR 93014)
b8c9cc5100a8ba3aa56a6ffdd58d370cbb0134a4 [C++] Make same_type_p return false for gnu_vector_type_p differences (PR 92789)
cd8aa0d1a5e9547cf3d47ab3bd53f63ec3920b36 Add missing target check for fully-masked fold-left reductions
4bbd661e9937d46cc66182423f1946761a4f31c9 Check for a supported comparison when using EXTRACT_LAST_REDUCTION
f0657516067909d688dc2424a876c1c894cbc182 Unshare DR_STEP before gimplifying it
5d8ccdc9a4d2e339a37df401a940bbc9d8bfec2e undefine OFFSET in testsuite/gcc.dg/vect/tree-vect.h
e3969868d63b2930a0714ca3cb466831fd4be634 Fix SSA update when vectorisation adds a vdef to a read-only loop
dc176c3ccd6a8cd3f809f3c1549ad00674061eb5 Fix EXTRACT_LAST_REDUCTION segfault
46e6341fc824ee10bdd4975a2841f945017609dc re PR target/93089 (Force mprefer-vector-width=512 in 'e' simd clones)
1609beddb1bac416456743dff136b486f54a572c re PR target/93089 (Force mprefer-vector-width=512 in 'e' simd clones)
8a0ae3c130cd1e6beb0087a6967d33d8203f0dce Check mask argument's type when vectorising conditional functions
a0643f028e43aa2a5b09907295ecaadedac2d295 Require equal shift amounts for IFN_DIV_POW2
dfef3500361057392f3c17e1f97883222347c0ef Add support for large prefixed address in adjusting a vector address.
3d53551b8809a2a673530aad9c7b5ccf2c26bbd3 Fix bad code of vector extract of PC-relative address with variable element #.
1b02c8c34c9668d05fa42a9779c0824d9de4d03f Refactor some code for a future change.
c4b30920c7427fc57181d91f17e9998502fe1866 Don't mangle attributes that have a space in their name
ab341f5003f8ad9f5ee30ce566d68d8284a31f00 Add a generic lhd_simulate_enum_decl
dca7e570a58f88596267d57cd32ce11b4681252b RISC-V: Disable use of TLS copy relocs.
a0ab54de0ec3e0d48b2a681f7f78fe14bc4099eb re PR inline-asm/93202 ([RISCV] ICE when using inline asm 'h' operand modifier)
2b5d3dc22c321e1c8928735c47733806a1163827 PR middle-end/93200 - spurious -Wstringop-overflow due to assignment vectorization to multiple members
482b2b43e5101921ad94e51e052a18b353f8a3f5 Add a compatible_vector_types_p target hook
9ecb4221263c5416a73a8afe5ef16a8dce07a72d Fix tree-nrv.c ICE for direct internal functions
160e95dc3d73329d2367fb405ef9f0e12bd2cc7b libstdc++: Fix undefined behaviour in random dist serialization (PR93205)
67723321fb917e94acf5844c2524ca3d9655ff7b [vect] Keep track of DR_OFFSET advance in dr_vec_info rather than data_reference
9c158322b6fdb47666f49c001dc54ea9f5c853e9 [vect] Add missing comment
ac190fcea1bebf87a2c8c3963548a0e5272c42ec Fix gather/scatter check when updating a vector epilogue loop
d29c7f605fc6b531eaf351bf5909e7c551fc6b9e Use get_related_vectype_for_scalar_type for reduction indices
7ca50de02cf12c759f4f8daf60913704782b7d45 hash-table.h: support non-zero empty values in empty_slow (v2)
86c3a7d891f9f175d09d61f5ce163c6dc5ce681f Fix type mismatch in SLPed constructors
711421af001b8f4f044f485c78f1d07ed5201656 PR tree-optimization/93247 - ICE in get_load_store_type
f7dff7699fd70d3b8c3e637818e18c86f93ccfec PR tree-optimization/92429 do not fold when updating epilogue statements
dc9ba9d045d0cfc06207806fd64b06ab3304b196 vect: Fix ICE in vectorizable_comparison PR93292
9c4f0d311810eba3f4faab1295c47eb57e695fcc tree-optimization/93094 pass down VECTORIZED_CALL to versioning
e0a5b313c1a3edfb33a28b8d8fea92e01490ebb3 RISC-V: Disallow regrenme if the TO register never used before for interrupt functions
bd0a3e244d94ad4a5e41f01ebf285f0861cb4a03 riscv: Fix up riscv_rtx_costs for RTL checking (PR target/93333)
0501b74264e93bf9ebf45cf10a624a549dc474f1 RISC-V: Fix rtl checking enabled failure with -msave-restore.
7c46e71d016c86971ac26c6fa38d76482859f296 cfgexpand: Update partition size when merging variables
bf91504dc23f17248df6302f7bad849f3ddedee7 Fix a couple of memory leaks in the C++ frontend
9085381f1931cc3667412c8fff91878184835901 Allow tree-ssa.exp to be run by itself
83b0448980f894b527ed8df588a0ae12510f06d5 Revert "Allow tree-ssa.exp to be run by itself" and move some testcases
1e156d9b214b275dc8b98c0ab5330b788a688f0f internal/cpu: don't define CacheLinePadSize for riscv64
1442bc31da61a7f6c7d7c526e0449cfd9a917cd5 tree-optimization/93397 delay converted reduction chain adjustment
6cedf5d8e23c862db147e71d5767ca57e6b4f433 predcom: Fix invalid store-store commoning [PR93434]
1ee3b380dfb479b335f3b50039ce26abcbffe59a forwprop: Tweak choice of VEC_PERM_EXPR filler [PR92822]
1e26ff7391c54c6d30760aea427b6bc2bdb46124 vect: Pattern-matched calls in reduction chains
148018bc3fe7ce47d005a1c5f7b6dd044024a4af tree-optimization/93428 - avoid load permutation vector clobbering
bba18325a1021ef8690334e349c242cde23ce92a dump CTORs properly wrapped with _Literal with -gimple
5910b14503dd82772dfeca5336a0176f9b1d260a testsuite: Fix up pr91838.C test [PR91838]
19e43cbce353b63a05c3b7c39d83a2e32c9f911f Add some gcc_asserts for vector extract processing.
e7f3e075282bda5c5df03e01932cf8d8e9b55cfc Adjust how variable vector extraction is done.
fb47dc28d2d38f56af65e9f244af8870bd568b0b Rewrite convulated code to avoid adding r0.
e181ffc92a355d1854a413f27354e519f93e126a Optimize vec_extract of vectors in memory with a PC-relative address.
79530f94e9c53153c4fae3b50a8c938f89db0c32 syscall: fix riscv64 GNU/Linux build
fc98d038618b792c413212759057b2125507d3ef tree-optimization/92819 restrict new vector CTOR canonicalization
9847df2c9573f1e4b948b5a7272c6aadf8e01c22 testsuite/92177 fix for SLP build changes
d10cddeaad2a315c114063b7c1ff11c6a356ab65 Fix PR 93568 (thinko)
5a8ad97b6e4823d4ded00a3ce8d80e4bf93368d4 c++: Mark __builtin_convertvector operand as read [PR93557]
a66219dce7fcba068a0998dd926e2ffc6857f149 Fix PR 93569.
c7c09af8ef0fe6671c7733d4d67bb73ecf10fc1b c++: Handle CONSTRUCTORs without indexes in find_array_ctor_elt [PR93549]
b780f68e025b2cf5631183e199ebf672ea463af6 RISC-V: Improve caller-save code generation.
e87deb37649cfe480217fc83c8d56fe925600f93 analyzer: handle vector types (PR 93350)
55b00d14f4daf671b865550c119dafdeb3139672 libstdc++: Update __cpp_lib_erase_if macro (P1115R3)
be7c145ad52e76a1a0fd201dd96bc92e8d3a275d tree-ssa: Fix ICE in build_vector_type [PR93780]
bfe78b08471fa6daffb8e8e8e70bd5b1d3071ff6 RISC-V: Using fmv.x.w/fmv.w.x rather than fmv.x.s/fmv.s.x
f91aa3e6cb808f8dfc6b45fa135f7583a7549161 vect: Fix offset calculation for -ve strides [PR93767]
b150c838d9dcf2aa9a50bffdc1eb3012200a4d21 testsuite: Require vect_mutiple_sizes for scan-tree-dump in vect-epilogues.c
9069e9484cec2ff981c87c75b226ad738847ca07 RISC-V: Adjust floating point code gen for LTGT compare
81c833b311b16cfd87a947374d5ffbbd48facd03 tree-optimization/93868 copy SLP tree before re-arranging stmts
b6268016bf46dd63227dcbb73d13c30a3b4b9d2a optabs: Don't use scalar conversions for vectors [PR93843]
759bd406a2b900dd323571c3855a64f885e6b3b7 dump load permutations and refcount per SLP node
15fc2e04a592f8bfcc3eafead71d0313566d8372 PPC64, fix documentation for __builtin_crypto_vpmsum* builtin functions.
e840185b31e40466e1575507200e1600e2343454 tree-optimization/93953 - avoid reference into hash-map
46788c65f93c61a06764b284b4656dd9024e88d2 work-around system header namespace pollution
10a32d479861c3a39987d3468f6a400e907499a2 libstdc++: -D_GLIBCXX_DEBUG fixes in the constrained algos tests
c9d92a575c98057d4bdc2058f0df417634cba860 Update comment to reflect optimization.
0ab503d34f2a8c22262ceefea6c882ae2ff75230 explow: Fix ICE caused by plus_constant [PR94002]
8cc59ac591256f8899e137db7633fd7d1a2164ba PR target/93995 ICE in patch_jump_insn, at cfgrtl.c:1290 on riscv64-linux-gnu
22a75da901ba18110638abc497f56fecd11895d2 [PATCH][testuite] Fix pr80481.C after epilogue vectorization
46275300312b44e1388b86a45f1600a5a1722303 re PR tree-optimization/90883 (Generated code is worse if returned struct is unnamed)
120070973425d785734837c06800dba3da4d1ac3 RISC-V: Fix testsuite regression due to recent IRA changes.
191bcd0f30dd37dec773efb0125afdcae9bd90ef Fix mangling ICE [PR94027]
d5114529228f97c2a433fa72ddea3fadeb6465b3 [testsuite] Fix PR94023 to guard case under vect_hw_misalign
cb2c60206f4f2218f84ccde21663b00de068d8c7 [testsuite] Fix PR94019 to check vector char when vect_hw_misalign
5fea87cc7902c7c03c0d3c8cf7784cd99db8315d RISC-V: Fix testsuite regression due to recent IRA changes.
4069adf4bbc90d16b603e0308b48499c36b2b637 c++: Tweak reshape_init_array_1 [PR94124]
43d513af3f2026420312cc709dd729c81862de0c [testsuite] Fix PR93935 to guard case under vect_hw_misalign
700d4cb08c88aec37c13e21e63dd61fd698baabc Fix up duplicated duplicated words mostly in comments
3d42842c07f4143042f3dcc39a050b262bcf1b55 fix CTOR vectorization
1aa22b1916a493ac46453d96e0c78ca47bcaeda3 c-family: Tighten vector handling in type_for_mode [PR94072]
a89349e664ff420f33612d47e486954de5848e49 adjust SLP tree dumping
4dcc4502f316a7320fe72b62c60af12c77e1c96c tree-optimization/94261 - avoid IL adjustments in SLP analysis
f1154b4d3c54e83d493cc66d1a30c410b9b3108a sccvn: Fix buffer overflow in push_partial_def [PR94300]
eeb0c7c07133634eb5e98ba0348392684a763c95 Fix vector-compare-1 regressions on sh4/sh4eb caused by pattern clobbering T reg without expressing that in its RTL.
48817fbd7616f086ac7bb1dd38b862f78762c9b8     Fix vector-compare-1 regressions on sh4/sh4eb caused by pattern clobbering T reg without expressing that in its RTL.
8d689cf43b501a2f5c077389adbb6d2bfa530ca9 Fix PR90332 by extending half size vector mode
75defde9fb56157d5f0279720d48866925b71b19 c++: Replay errors during diagnosis of constraint satisfaction failures
ec919cfcef8d7fcbaab24d0e0d472c65e5329ca6 Fix vextract* masked patterns [PR93069]
3a9db91bee496712656e0f8aecf55f39cffd8413 Fix scan pattern of vect-8.f90 dump.
48e331d63827a0500670d685c0fe7d609e0a807a Define TRY_EMPTY_VM_SPACE for riscv64-linux
1dcffc8ddc48f0b45d3d0d2f763ef5870560eb9a fold-const: Fix division folding with vector operands [PR94412]
e06cde870edc7ec21736145b6857565d4b2f0e85 Library-side tests for parenthesized aggregate init
f14b41d27124601284347a10d496362c8b4b8e1c vect: ICE: in vectorizable_load, at tree-vect-stmts.c:9173 [PR94398]
bd0f22a8d5caea8905f38ff1fafce31c1b7d33ad Fix PR94043 by making vect_live_op generate lc-phi
81ce375d1fdd99f9d93b00f4895eab74c3d8b54a Fix PR94401 by considering reverse overrun
879bc686a0aac4277532fc2aa18704c125fb0c45 doc: RISC-V: Update binutils requirement to 2.30
4441ecedc3d74114683761901075085651928c52 Fix PR94443 with gsi_insert_seq_before [PR94443]
37244b217a7329792f4ec48027f63cf5010b0ea8 c++: Fix constexpr evaluation of self-modifying CONSTRUCTORs [PR94219]
5ff06d762a88077aff0fb637c931c64e6f47f93d libatomic/test: Fix compilation for build sysroot
542f73539db1433303a4dd16bd2cfc5e7e12eda8 update polytypes.c -flax-vector-conversions msg
f52eb4f988992d393c69ee4ab76f236dced80e36 vect: Fix up lowering of TRUNC_MOD_EXPR by negative constant [PR94524]
e7c4084d11b957d925ba586f86db2f346fb3bfe0 [testsuite] Fix PR94079 by respecting vect_hw_misalign [PR94079]
2111d5406a4ec56d6335bde779a995914d0a36d1 sra: Fix sra_modify_expr handling of partial writes (PR 94482)
bd2420f8faaf4bb33310e82f7dd45c5e33476c87 libstdc++: Add comparison operators to sequence containers
77aecf92a2c47af6e8fda93b020f75c7de48b84c vect: Tweak vect_better_loop_vinfo_p handling of variable VFs
85353e24ca90282e1d3620682841f524de20475c forwprop: Fix ICE when building a VEC_PERM_EXPR [PR94683]
0fe9eaaa083b6cc032cbd3ad1286b1dd73ccdf54 libstdc++: Improve tests for __cpp_lib_erase_if macro
413232a55b960c9b207abf14eea4a8dd247c3e90 forwprop: Fix ICE when building an identity constructor [PR94700]
901f5289d9465d4c388ae288f850ad4f29e99a2c vect: Fix comparisons between invariant booleans [PR94727]
bca558de2a24b2a78c6a321d6cec384e07759d77 tree: Fix up get_narrower [PR94724]
f51be2fb8653f81092f8158a0f0527275f86603b Shortcut identity VEC_PERM expansion [PR94710]
018730326d878d98b85b1256ff220e76665ed97e d: Merge upstream dmd 09db0c41e, druntime e68a5ae3.
a0b48358cb1e70e161a87ec5deb7a4b25defba6b libffi/test: Fix compilation for build sysroot
d15edd9dc1df4d5eff664a089e46b22a1f94328b testsuite: Add -Wno-psabi option for ipa-sra-19.c on AIX.
5328710be314dee43da8027dbff547d48b85e35e forwprop: Fix ICE when building an identity constructor [PR94784]
e62a820d686d1fa97a9eefdc65ca07d8f96ac9f4 vect: Fix COND_EXPRs involving variant booleans [PR94727]
162c40a4c127cc55d701bb8760e17708d0ca2fe0 libstdc++: Fix regression in std::_Construct (PR 94831)
691eeb65a01dab3084b6ce381737adf097bd2e65 diagnostics: Add %{...%} pretty-format support for URLs and use it in -Wpsabi diagnostics
e33a1eae25b8a8744db2fea72e739d64799ca61f --with-{documentation,changes}-root-url tweaks
3af3bec2e4d344bd54a134d8b2263f44d788c3d8 internal-fn: Avoid dropping the lhs of some calls [PR94941]
308bc496884706af4b3077171cbac684c7a6f7c6 add vec_info * parameters where needed
144aee70b80de50f96a97ee64edd2f1c237c4906 match.pd: Canonicalize (x + (x << cst)) into (x * cst2) [PR94800]
3fbf43b9bc060e2904abe64e870868b9a4bfce13 testsuite/92177 - adjust expected patterns for gcc.dg/vect/bb-slp-22.c
fae545fb033970348210c52597a246445efe4160 rewrite hybrid SLP detection
d2148424165849ac9fe413b7a8d7cd198959bebf Merge dg-options and dg-additional-options if len <= 120 chars.
b776bdca9322977cbb8aced2fe24ecd317a6f16b c-attribs.c: Fix warning about use of uninitialized variable nunits
b4ace720e004f736f1ee46b374c12f9826aad630 riscv: Fix up riscv_atomic_assign_expand_fenv [PR94950]
380a681518c3b387476be1064097f24b0847726d tree-optimization/94965 - fix typo in vec_info * passing
4e849a74a8512cb313831a5929501ac2a735b7e1 Prepare removal of SLP_INSTANCE_GROUP_SIZE
72a54e5e8157508c87594d1a6b53de90b76524ce libstdc++ std::fill overload for std::vector<bool>::iterator
eb72dc663e9070b281be83a80f6f838a3a878822 extend DECL_GIMPLE_REG_P to all types
f8a4141bae53f9125d374e5873dcda3f75392f1f Fix various dg directives.
3807f286eff75cb0e4af924c3ee9e02add23e12e Check alignment for no peeling gaps handling
bc484e250990393e887f7239157cc85ce6fadcce move permutation validity check
ad00a297ec4236b327430c171dfbe7587901ffd7 Small housekeeping work in gigi
d8bd9d32e8b3e7c2a1bb6fc920efe6691fb5e8b6 tree-pretty-print: Handle boolean types
d17a896da1e898928d337596d029f0ece0039d55 tree: Add vector_element_bits(_tree) [PR94980 1/3]
14605b6bd8c37fffd8065c5c3fe6b1b9d7b2a294 tree-vect-generic: Tweak build_replicated_const [PR94980 2/3]
4c0283b9ad75b128b79c507d78d678123fe9f471 tree-vect-generic: Fix bitfield widths [PR94980 3/3]
de6320a81695800de0f0f5fc3e4c6487a52cd430 RISC-V: Add shorten_memrefs pass.
adce62f53d8ad00e8110a6a2de7962d7a850de16 RISC-V: Make unique SECCAT_SRODATA names start with .srodata (not .sdata2)
f6e1a4cd83190746b6544917f7526fa480ca5f18 Add missing unit dependence vector in data dependence analysis
ab5934a8fe1dc70030fd73703c0fb6c68e96b086 Remove SLP_INSTANCE_GROUP_SIZE
78db0e093e69f360ac1ef871ca08895a4d2bec06 add vectype parameter to add_stmt_cost hook
584a3c080bbd6e64131fa53771c7424bcf9d21fa tree-optimization/92260 - improve fix
cfaf0edbb123958e84d296354152294f167db9f3 fixup BB vectorization constant generation place
24f68831d25bad739a6fe167a58b5b4c0c3cbf9a pr94833, fix vec_first_match_index for nulls
a4b48fc47c3406b6f41be093c4615879b7006710 cost invariant nodes from vect_slp_analyze_node_operations SLP walk
ca1a9763a1f635d2687ebd5009dd61d4fd0ab5fb RISC-V: Update march parser
f908b69cfd71b85a602424e9fea882108e02cb8a RISC-V: Handle implied extension for -march parser.
92ea8e1bccc6a703407570471f6323bfa554af99 TESTSUITE: Fix tests for 16-bit targets
dfa4fcdba374ed44d4aa1a22b2738f3f5c5b37af Fix alignment for local variable [PR90811]
b2f26af32b5b031fce761aa090de9476a53e6e5a tree-optimization/95219 - improve IV selection for induction
f8fb2ea2b17d38518a9ef9c8774bf4adc726e508 add ctor/dtor to slp_tree
79f0451c67e8ed564b86a38581d5f3d57c5074d8 enfoce SLP_TREE_VECTYPE for invariants
e740f3d73144abbca1ad98a04825c6bd63314a0b Add missing vector truncmn2 expanders [PR92658]
94c0409717bf8bf783963c1d50bb8f4a4732dce7 Add missing expander for vector float_extend and float_truncate.
d31694544d2d805151899ab0a0bc654767035ad6 tree-optimization/95297 - handle scalar shift arg for SLP invariant vectype
c0e27f72358794692e367363940c6383e9ad1e45 tree-optimization/95271 - fix bswap vectorization invariant SLP type
dc0c0196340f7ac58b10d0042d7cea776d6f7864 tree-optimization/95309 - fix invariant SLP node costing
9d0dc47de6ed9609fe7445ea0941a6a822c80f88 Fix non-comforming expander for floatv2div2sf2,floatunsv2div2sf2,fix_truncv2sfv2di,fixuns_truncv2sfv2di.
1d72079ba3a370d6751953312f0de76d1a1c555d tree-optimization/95327 - fix another vectorizable_shift const SLP op
f61f9b28793d94060ce858e5f8a080db91785779 Add debug (slp_tree) and dump infrastructure for this
a5d8d86e8a72736bfd8a2ce8aa427dec896a442e tree-optimization/95335 - fix SLP nodes dropped to invariant
764ef40ba185ef9245a209ba9260d1e50bec6934 tree-optimization/95356 - fix vectorizable_shift vector types
fe7ebef7fe4f9acb79658ed9db0749b07efc3105 Add support for __builtin_bswap128
07d77cc23953335c3539e2a86fc4a052d9845524 testsuite/95363 - fix gcc.dg/vect/bb-slp-pr95271.c for ilp32
09df85393ce5501a28359d159670fd05c4d70abf tree-optimization/95273 - more vectorizable_shift massaging
b0aae85bd689cf581ac85d02a7e84eae0015dbe5 make vect_finish_stmt_generation work w/o stmt_vec_info
e31cd607e999ca6ab47b7e65a7045b1594e4fba4 Code generate externals/invariants during the SLP graph walk
00cd57389767b9a81125f999d33d509cba0ebaaf remove obsolete code from SLP invariant costing
07852a81f58532c63a57631d7c3757fc6bcea17d tree-optimization/95393 - fold MIN/MAX_EXPR generated by phiopt
233ecb5e2c5a769429279afbbf7d275cb3940cde tree-optimization/95403 - guard vect_init_vector_1 against NULL stmt_info
ddf90b72d2a723decc487db6d3131846b9a618de tree-optimization/95356 - more vectorizable_shift massaging
c735929a2503a7d03ac4739bba5b25336bf954c3 tree-optimization/95272 - add SLP_TREE_REPRESENTATIVE
33e23881aae0549572cc23a2520c5094a2ffede9 Simplify tree streaming.
d5cdcd5cf2b2920b44836005baceb59d046b6e5a RISC-V: Optimize si to di zero-extend followed by left shift.
ff7da2b5d621d0aaf4a467344d0621eefd4aa78f Cleanup global decl stream reference streaming, part 1
2b11374cb8d864dff3792e7c84188ba7e8f136e7 testsuite: Disable colorization for ubsan test
4b490c1ec51c276069c29f23406164803587bd06 [Ada] Bump copyright year
eca833b81289438ec5ae3ed4c77ffb49cfb65f34 libstdc++: Make debug containers prefer copy ctor to base ctor (PR 90102)
4013baf99c38f7bca06a51f8301e8fb195ccfa33 RISC-V: Make __divdi3 handle div by zero same as hardware.
f05c84ac139ccd5398542369aad2b5ff3059ced4 simplify visited flag unsetting in SLP scalar cost computation
779ae320bfadc5d867ecaeddf394838d546b57b9 tree-optimization/95495 - use SLP_TREE_REPRESENTATIVE in assertion
887c45fb5b047171e82710baa51108d5c210eb42 tree-optimization/95487 - use a truth type for scatter masks
a3a70bf6690e310fb1d4afa4b3dd1b19ddd0e2f4 Simplify SLP code wrt SLP_TREE_DEF_TYPE
a0dae768c6f78eba6997930065b55184202d87ba Add explicit SLP_TREE_LANES
b15369e2538086c95250ac57c56a4c2590f922f4 add vect_get_slp_vect_def
9758d196f57950ea89baa5cdf6ebd7125b5056e0 tree-optimization/95539 - fix SLP_TREE_REPRESENTATIVE vs. dr_info
ae9293fb8e1895006ce33069eaabdecfe65c46a2 [Ada] Silence spurious warning on instances of formal vectors
8be374e02761c9d63d2753d71e4bd4874a1577b1 forwprop: Ignore scalar mode vectors in simplify_vector_constructor [PR95528]
ac22e651efe0da924925ac33a31e5c8d73e11fef Remove dead code
ec34277611416aacdfdf3b8469b8e6ed43f623e6 Remove dead code
b05d5563f4be13b4a0d0951375a82adf483973c0 Introduce STMT_VINFO_VEC_STMTS
f25161bdcc2b098a4678a42bb2c581ac47625b17 Make {SLP_TREE,STMT_VINFO}_VEC_STMTS a vector of gimple *
36e95a9e539a08275a0a6ef542a7fae5baa5710f tree-optimization/95576 - fix compare-debug issue with SLP vectorization
371cc683371bedb0e53ebcee0c0e89604a1e74b1 avoid stmt-info allocation for debug stmts
d0e0c1300f9f08608873df5571e14a61308dd0c0 RISC-V: Describe correct USEs for gpr_save pattern [PR95252]
dcf41a4e6033213f5e5f80da23080df961d83996 RISC-V: Unify the output asm pattern between gpr_save and gpr_restore pattern.
042f4082979aa22e08c008ed4c5b4bab3915a9c2 vect: Rename can_fully_mask_p to can_use_partial_vectors_p
b3372425ecf3e225d7a2b3c73e061e11498b6f74 vect: Rename fully_masked_p to using_partial_vectors_p
37478789dc446a28ffc642ee121e8c3959e5fe47 vect: Rename things related to rgroup_masks
04f0546e3e468e67dcd8cd20265796887805de3e vect: Factor out and rename some functions/macros
135a8ad3a59972ea64b1244b0e221cdded9a6ec6 fix vectorizable_condition ICE with EXTRACT_LAST_REDUCTION
d30846a02eb9ea43b61311e74fbf05692ffefba2 vect: Fix an ICE in vect_loop_versioning [PR95570]
4544793ef618484b2cc753a4635ab79b361f8df8 testcase for shared DR alignment
82a3008e56c620008b4575a97e459e2769df54db RISC-V: Suppress warning for signed and unsigned integer comparison.
8df82de27b5f16d5089b135d718e9ed15557ae8d vect: Use LOOP_VINFO_DATAREFS and LOOP_VINFO_DDRS consistently
47ad09cb086715182eff01ef3da2fb7d79b0a396 internal/syscall/unix: use getrandom_linux_generic.go on riscv
beaf12b49ae030505194cdcac18b5c8533a43921 RISC-V: Fix ICE on riscv_gpr_save_operation_p [PR95683]
668ef28fbb44c1e51d9c5a35b421903c98d87b03 c++: Clean up previous change [PR41437]
12df77ab6df4b91d4770240bcc4ab443e4bb18b9 OpenACC/Fortran: permit 'routine' inside PURE
502d63b6d6141597bb18fd23c87736a1b384cf8f Lower VEC_COND_EXPR into internal functions.
d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b tree-optimization/95717 - fix SSA update for vectorizer epilogue
8a9e230f41eb406380ab0d9c2b73031133d54259 Use SLP_TREE_VECTYPE consistently
4a31a8add56d49867c187d90b3a89e97634543c2 vect: CSE for bump and offset in strided load/store operations.
632183ddcc8f3aead8b4fc63c4ab59a42ef9ad00 libstdc++: Avoid stack overflow in std::vector (PR 94540)
d11c9841d54ed74978f8d0e0f352631f90504dd5 Add missing check for gassign.
da2b7c7f0a136b4d00520a08d4c443fc2e3a467d remove SLP_TREE_TWO_OPERATORS, add SLP permutation node
9a875db43cd4210843c480c8df26a1d6624d057d forwprop: simplify_vector_constructor follow-up fix [PR95713]
eccc3d432669ba272229d49f015cb986df21eb0a middle-end/95739 - fix vector condition IFN expansion
72cb486456a39524c6f822327ba8654b0221ff4c vectorizer: add _bb_vec_info::region_stmts and reverse_region_stmts
e54353a72a0fd780a2f233a057f3f8121b476192 vect: Use vect_relevant_for_alignment_p consistently
f8f5715606a4a455327874847ccc91f4617bb4de tree-optimization/95761 - fix vector insertion place compute
6d8b2ee568bd17a398781d86aab140b8121aad30 Handle SLP_TREE_LANE_PERMUTATION in scalar costing
33d9794b7277a64543914bfbbfd567505e72da6c RISC-V: Fix compilation failed for frflags builtin in C++ mode
f4670347f10d36816e7da08796f96f087094ba58 RISC-V: Normalize arch string in driver time
cf07eea8429c923b7eb884ffc1b267c80a0a839c tree-optimization/95770 - fix SLP vectorized stmt placement compute
d63fbcf80081d6fc6b746667fcacc8eb6e34f306 Fix memory corruption with vector and variant record
d32708e796504eaeaad7d19990909204d74f9ba3 tree-optimization/95856 fix vect_stmt_dominates_stmt_p at BB region boundary
6924b5e6bd3c89e229c52eafb1353bcbe17ab405 emit SLP vectorized loads earlier
c78907d514d65483c7ddfb4cb1f5c57f23da73d9 tree-optimization/95866 - avoid vectorizing uniform SLP subgraphs
a8d8caca0cbfde0317ca96bfea75a7f047152dad VEC_COND_EXPR: clean up first argument
86ce59b4f05d8f68ec4d9a14a7732acb370412db tree-optimization/95866 - avoid using scalar ops for vectorized shift
d2adb79eac663874593a28387db593fb4bb2995f Always use SLP vector defs to determine insertion place
628b78f9794a2eefcbc578011806bfa8e09b9ef7 tree-optimization/95839 - allow CTOR vectorization without loads
5b959c22bc0158faa359a5899bf46e815dc65290 tree-optimization/95897 - fix fold-left SLP reduction insert place
0801f419440c14f6772b28f763ad7d40f7f7a580 c++: Change the default dialect to C++17.
ef8d1da1b585e0de4b2a0e7721fc13974c00134e IFN: Fix mask_{load,store} optab support macros
e712ef9eee7f9dea4cc0b8df40d9eae9adb15f1e Use gsi_bb instead of iterator->bb.
008842d741e5a88b8f46c692cf09e83d1f51252c do not include <utility> from tree-vectorizer.h
9a4a52e359ba16a2516a735dca838af512b19336 tree-optimization/95916 - treat scalar ops explicitely
1aa696678e45e63f8d59479d593f80f6f0db6b9d testsuite: remove SPE tests.
f58cc0132df4ff6e7f7c2b13324a9fd807af12d7 testsuite: Remove restrictions on VSX tests.
34c8c2139f2339c3151d1c5e8e4a06178d8e757b testsuite: p8vector-int128 require int128 not lp64.
83c25f27c442ce567829491fc1b4703f51b9bea6 RISC-V: Preserve arch version info during normalizing arch string
7b3adfa7bb47e4ebde91634caa5a7e13175558f1 tree-optimization/95839 - teach SLP vectorization about vector inputs
cfdc729d3c64535ae95e068ff33daa27544e95b5 testsuite: Restore lp64 for some gcc.target/powerpc testcases.
a4b531b21339af47c4bdd69384e4a0b5289ffc64 RISC-V: Handle multi-letter extension for multilib-generator
224682ffa19a6817e4d0bde59200169c3413b532 testsuite: Ignore line no. for BB vectorization message
5c9669a0e6cbf477a03024522943197bdb2682d4 vect: Fix an ICE in exact_div [PR95961]
d5d9f7834ab809841c4ccc90bca74808b4bcaf8d tree-optimization/96022 - fix ICE with vectorized shift
1ac9258cca8030745d3c0b8f63186f0adf0ebc27 VEC_COND_EXPR: do not expand comparisons feeding it
105ecbea5f402713130fef4d41bb000e2d23493b tree-optimization/96028 - fix bogus externalizing of SLP node
26b538cd81b9692eaf519fa1743ca8c282048793 nvptx: Fix ICE in nvptx_vector_alignment on gcc.dg/attr-vector_size.c
9e5508c2d006f2d4f8670e6c3fed770ac1c85e64 refactor SLP constant insertion and provde entry insert helper
9bc2c2347d5d782c7362efe180ab002759e296c8 fix scalar BB vectorization costing
59cc32acc8dde3b8719b9b4f90d33e8c3e3f17bb tree-optimization/96037 - fix uninitialized use of slp_op
dccbf1e2a6e544f71b4a5795f0c79015db019fc3 tree-optimization/96075 - fix bogus misalignment calculation
f75211822f8d84bb706421d3692e6c1cdbdfc3a8 fix detection of negative step DR groups
d496134a6b1ef1314c18bd316d8c1900158beae9 IFN/optabs: Support vector load/store with length
30fdaead5b7880c4e9f140618e26ad1c545642d5 compute and check alignment info during analysis
4c0d1322033ce979532425d336530b217f6b5fd3 RISC-V: Disable remove unneeded save-restore call optimization if there are any arguments on stack.
1073b500e5d33af8b75567108a8c04fe2598df2b RISC-V: Implement __builtin_thread_pointer
23fb9e7c1c403a256b158fdfc97f7f32f636d3d0 vect/testsuite: Adjust dumping for fully masking decision
2a39c42a42cdea4a8962b9e140b88e0051894f38 vect: Enhance condition check to use partial vectors
a1e25d0008791118dd58eaddff5f4c3691f8750e remove premature vect_verify_datarefs_alignment
9ddea9306251b7d4e4fd1d67a5941ef7448b2e66 fixup BIT_FIELD_REF detection in SLP discovery
08a94a95d10f311d2a83e6f4c076babd8afd6a3e vect: Use adjusted niters by considering peeling prologue
c19f95fb1b8f15090eb1d1682e86de425fbd3c78 RISC-V: Fix regular expression in target-specific test
c4facd483de2d5b6b4d20e6ad74c85b9f1eba41a tree-optimization/96163 - fix placement issue with SLP and vectors
7efc03fd2cb69fa0f790d32627a3e8131724e7e1 __builtin_shuffle sometimes should produce zip1 rather than TBL (PR82199)
c9c87e6f9c795bb36e4570a07501fc182eaad035 vector creation from two parts of two vectors produces TBL rather than ins (PR 93720)
9fb832ce382d649b7687426e6bc4e5d3715cb78a vect: Support length-based partial vectors approach
138b1d4f58af17986e856e665ffbd561c2c8740e vect: Fix an ICE in vectorizable_simd_clone_call
c850a642e1dfd3a15335d86976015c4a5064b5df testsuite: Add signal checking for signal related testcase in analyzer.
cd91a084877dabcc53aec57ab70ca4fc32f3d985 Generation of adjusted ldp/stp for vector types
2ca1b6d009b194286c3ec91f9c51cc6b0a475458 PR target/96260 - KASAN should work even back-end not porting anything.
ead2be56f0e1d60ffcc519efb33c1ca7b78c23ba ivopts: Handle vector with length IFNs
f3772283350336ad3dc7d36ffc475931ae47ba02 gcc.dg/tree-ssa/vector-4.c: Adjust for mmix.
55c9695cbe91c406805ac0cd342949f32f13b779 Do not expand vector comparison with VEC_COND_EXPR.
0ff959e0a2214fa553ac2d06ed66ede62602fc9a vect: Refactor peel_iters_{pro,epi}logue cost modeling
f1660ceb0d3b0076555058087307f88b80619a6f vect: Fix infinite loop while determining peeling amount
883eec6653b4dd89f7ed0cdad2b0b1010e045e12 more SCEV cache clearing
8240f2f498c38437c213ae1186a5420316413af5 nvptx: Provide vec_set<mode> and vec_extract<vmode><mode> patterns
4c27c6584d0c15926f57ac40f931e238cf0b3110 libstdc++: Make testsuite usable with -fno-exceptions
c931e8d5a96463427040b0d11f9c4352ac22b2b0 RISC-V: Add support for TLS stack protector canary access
8bd062e8ad44e70be04108232e1ef597fc3b3e3e Do not allocate huge array in output_in_order.
c89366b12ff4f36253bae125b794cbe687f7e40b vect: Don't consider branch costs if no peeled iterations
6f00ccbad3d72a39d9e2bc0d500dbd62d1abc60f libstdc++: Fix and improve std::vector<bool> implementation.
9fa4023c7aa0ab126b00fe7e640ed9858b249c77 RISC-V/libgcc: Reduce the size of RV64 millicode by 6 bytes
7d599ad27b9bcf5165f87710f1abc64bbabd06ae c: Fix bogus vector initialisation error [PR96377]
5e97638b0adfb822d3b156c07da27d41091ce137 doc: fix a typo in tm.texi
95f5a3258dd8a9584f2b10304f79441ef2d4c64c veclower: Don't ICE on .VEC_CONVERT calls with no lhs [PR96426]
344f09a756ebd50510cc1eb3db111fd61c527702 [nvptx] Handle V2DI/V2SI mode in nvptx_gen_shuffle
6aec53ee4f75a64cc9c35577e8d785ba2b692270 refactor LIM a bit
229752afe3156a3990dacaedb94c76846cebf132 VEC_COND_EXPR optimizations
ea858d09571f3f6dcce92d8bfaf077f9d44c6ad6 vect: Skip epilogue loops for dbgcnt check [PR96451]
85245bda63ab4cdad0a7cb0f94e06ad4b9a121d2 ipa-fnsummary: Include <vector> the proper way
a1ee6d507b0c26466be519d177f5a08b22f63647 Disable some VEC_COND_EXPR transformations after vector lowering
99e4891ed552aca4ca147671701edd0b31015f66 Using UNSPEC for vector compare to mask register.
82c4b78dbef6f03838e3040688c934360a09513f Replace std::vector<> usage in ipa-fnsummary.c with GCC's vec<>.
c2fb0a1a2e7a0fb15cf3cf876f621902ccd273f0 libstdc++: Make self-move well-defined for containers [PR 85828]
1b0be822208349b2795381deace2352e998c1ad0 analyzer: fix ICE on unhandled tree codes in gassign [PR96640]
1bc4e811aa7249ec972ee7ea5b9bb23e8a0cd69e Adjust testcase.
fc02b568e2cd3f6a28d4b7c1063bbf8842c89aad analyzer: fix ICE on folding vector 0 [PR96705]
2f5951bd95e334d611f4be7bbe1a136c580f9c20 analyzer: fix ICE on vector comparisons [PR96713]
cdb2e365fc0dba2ee052827e5ca65234ca82d605 SLP: support entire BB.
9f2f79df19fbfaa1c4be313c2f2b5ce04646433e gimple-fold: Don't optimize wierdo floating point value reads [PR95450]
24f2764521d8f27760f03f626a4f20f4c82b7c73 libstdc++: Remove tests for self-move debug assertions
55290635d10ea3d18b0a45aa2e6f59405b8c1f54 Adjust testcase.
71b6257e3a90995e1c1d3d2716a0eec5eef243db tree-optimization/96783 - fix vectorization of negative step SLP
2130efe6ac7beba72d289e3dd145daa10aeaed54 tree-optimization/96698 - fix ICE when vectorizing nested cycles
6b3034eaba83935d9f6dfb20d2efbdb34b5b00bf lra: Canonicalize mult to shift in address reloads
cb3874dcf82bc80c2552ef62f57cf08c28fc686a vec: add exact argument for various grow functions.
d0939f42dd84ca03212caf0b6937cf201a16a44f testsuite: Update some vect cases for partial vectors
0106300f6c3f7bae5eb1c46dbd45aa07c94e1b15 varasm: Optimize memory broadcast for constant vector under AVX512 [PR54201]
1aa71af09350b9ff4d2fad88a440b682545682ec Refine expander vec_unpacku_float_hi_v16si/vec_unpacku_float_lo_v16si
f089569851ca9c8a81400dd8a159f86636ed20ec tree-optimization/96854 - testcase for SLP reduction of two-operator
73a2b8dd17dbc02c0c7e6286e90f17833aa50906 c++: Implement P1009: Array size deduction in new-expressions.
b61eaa25b0812a5996024e0ddb3535dde5a89c88 PR middle-end/90597: gcc_assert ICE in layout_type
a292e31dac72c20cda3478b866ccf6e07dfad1a4 vec: use inexact growth where possible.
f0a3bab43fda3084eaf1bdaac58936757f30ea35 d: __vectors unsupported in hardware should be rejected at compile-time.
8bd5530bfa136663f1fa79e9a1d3932b5adf15bd Adjust testcase.
433734126996b6fc4fc99b594421510f928a7bb9 Optimize memory broadcast for constant vector under AVX512.
b246f5272eb7242a9cefe5b4e7220be9d86ea512 Improve constant folding of vector lowering with vector bools
753b4679bc46f6806cf45d9afc3783c6d3b63589 c++: Fix P0960 in member init list and array [PR92812]
09fa6acd8d96013cf97046b273642fdefeef7559 vec: dead code removal in tree-vect-loop.c
46a58c779af3055a4b10b285a1f4be28abe4351c tree-optimization/96920 - another ICE when vectorizing nested cycles
995bb851ffee659cb86aa24bf36ad5bb5d36da7b Adjust testcase.
095d42feed09f880f835ed74d0aa7b1ad7abd03c code generate live lanes in basic-block vectorization
703bc188f4ae9ce957a30011bbe6d41a03a07ceb Adjust testcase.
931832a5ccd92c7289f4933c42cf007e1a6b737f improve SLP vect dumping
e147bb0faad95ed8699c426484ed3dd026fd3366 vec: Revert "dead code removal in tree-vect-loop.c" and add a comment.
0755f573f0874e152a919c61c62bf8d31aa190f0 libbacktrace: avoid ambiguous binary search
fb51be60c8e7b6978f817f44d5df4759f2faf425 tree-optimization/96978 - fix fallout of BB vectorization of live stmts
783dc66f9ccb0019c3dad2701bb9110286758d70 enable live condition vectorization
db918db2c305adf8ba727a5981a684c19de1510e enable live comparison vectorization
58905f90434ba9a64abac56324131d67c53910ae fix useless unsharing of SLP tree
1690a839cff2e0276017a013419d81d675bbf69d analyzer: generalize sm-malloc to new/delete [PR94355]
47ddf4c7b1d4471cb9534f27844ab5e4279c2168 tree-optimization/96043 - BB vectorization costing improvement
848e74bea1e8031925d3efe2d85b555a3cf8db38 [PATCH][PR96791] disable POImode ld/st for memcpy
563326b5e49fcaace2fcab2ddd4071a5f1cfe709 random vectorizer fixes
a9c960a3bd621fc7a721e3c31c706ba736b384ea tree-optimization/97013 - avoid duplicate 'vectorization is not profitable'
054fc495fac5478a119715d10e1dd76442851bb5 improve BB vectorization dump locations
8d3767c30240c901a493d82d9d20f306b2f0152d tree-optimization/97020 - account SLP cost in loop vect again
40e99ed5f4e59c6d0a8e81cd6544c9b4e7ec2fe7 Fix fma test case [PR97018]
c9de716a59c873859df3b3e1fbb993200fce5a73 Allow more BB vectorization
d876184c095d6ac41e64eaf4e2c78864d2d935c1 make swap argument of vect_get_and_check_slp_defs readonly
d1a31689a736cdfb5e7cfa01f1168e338510e63b rtlanal: fix subreg handling in set_noop_p ()
f02b2077c093922faee3b33ad821b717bea80343 remove STMT_VINFO_NUM_SLP_USES
052204fac580b21c967e57e6285d99a9828b8fac vec: don't select partial vectors when unnecessary
f95bd50b4c1879ca96f0d3f0a60fcebe4afc9aef RISC-V: fix a typo in riscv.h
080ddd8a81ea39e92542fa7d7e2d7d27ee741710 tree-optimization/97098 - fix compile-time hog in SLP live
3ea069da14c5f6276ae26d2109e9ae0765c09199 tree-optimization/97095 - fix typo in vectorizable_live_operation
9c9b88fdcff3520b2c4fb520c5d3b422eaa9a72f tree-optimization/97081 - fix wrong-code with vectorized shift
3d3fe967b0961cb59f5df03ae2a55d83dc4bbd34 testsuite: add another test for the rotate vectorization miscompilation
e6f58fb6196ba16ce070e3722451f040a13f963b tree-optimization/97139 - fix BB SLP live lane extraction
52e5b3fd8ef1d1b3ff86e26bd0aa7266bd9767fd tree-optimization/97173 - extend assert in vectorizable_live_operation
4452a7660b224ff310d246bc7f8c612669c8cd98 vect: Fix epilogue loop handling of partial vectors
bc909324bda71543add2229adfa59d8daff5f0db middle-end/96466 - fix VEC_COND isel/expansion issue
5427bd4d57c0376e51fc7b256e76aa46c43aa8cf test: Adjust case p9-vec-length-full-6.c [PR97075]
10843f8303509fcba880c6c05c08e4b4ccd24f36 tree-optimization/97085 - fold some trivial bool vector ?:
4b9d61f79c0c0185a33048ae6cc72269cf7efa31 add move CTOR to auto_vec, use auto_vec for get_loop_exit_edges
c2ebf4f10de9257baffbe29cd0074893a01cfd83 openmp: Add support for non-rect simd and improve collapsed simd support
d16b5975ca985cbe97698479fc38b6a636886978 middle-end/96814 - fix VECTOR_BOOLEAN_TYPE_P CTOR RTL expansion
d00b1b023ecfc3ddc3fe952c0063dab7529d5f7a powerpc, libcpp: Fix gcc build with clang on power8 [PR97163]
a29bd4f59e9eebf52ac41f7d7a6fa83cf2aae09d openmp: Improve #pragma omp simd vectorization
30784833af015a9a74f5315d54f9dc08e1bbdf94 RISC-V: Define __riscv_cmodel_medany for PIC mode.
b1570930df659ff3ea6691f9ba8b84c8a189d85d move permute optimization to optimize-slp
39a27bb01aa223ce89946f0a4de6b60c4c0b03d2 tree-optimization/97241 - fix ICE in reduction vectorization
aa248b8db9a7594fcc84e52a84d56526d4284ca8 middle-end: Refactor refcnt to use SLP_TREE_REF_COUNT for consistency
97b798d80baf945ea28236eef3fa69f36626b579 [SLP][VECT] Add check to fix 96837
9ff2bcd9df8f189dcc94e3bef33f7f282dcaa780 amend SLP reduction testcases
373b99dc40949efa697326f378e5022a02e0328b Add a testcase for PR target/96827
2c5499b57cf4a68ebc8decce90d3eb1e281c31a9 libgo: add 32-bit RISC-V (RV32) support
36e691d3a62145fda1f4a1b3143d215cc113c10a tree-optimization/97255 - missing vector bool pattern of SRAed bool
04b99da898a9817e72fedb4063589648b7961ac5 tree-optimization/97236 - fix bad use of VMAT_CONTIGUOUS
9d5af1db2d1e7ca4f47f16fc885e1d70fa0229fc ipa: Bundle vectors describing argument values
67ce9099bc953f22e6c9e9ee4c64329fdb08286a ipa: Multiple predicates for loop properties, with frequencies
255aa06d40d7b151d1b26cb690e0545f834b3bea c++: Make spell corrections consistent
83f565ed4f37e550e1d40f7b6cf0b5845f29a9c7 openmp: Improve composite simd vectorization
e089e43365f7f2a90979e2316aea25d44823f5a3 ipa-prop: Fix multiple-target speculation resolution
dae673abd37d400408959497e50fe1f3fbef5533 tree-optimization/97307 - improve sinking of loads
532e882f8872b1b4437e3a0fa8c61d2af2d999d4 adjust BB vectorization dump scanning
181702ef8ab76afbf5d2cd4d7bc0cef613397d6e SLP vectorize multiple BBs at once
36500ed18aa89c31b56123aeae43f18fac950674 fix ICE with BB vectorization of PHIs
a0e6e49ddedb05e2e112e5c19a2228efd016e871 random memory leak fixes
5d708c6315e0fc57992cda7b466a5a9877ced4e3 tree-optimization/97347 - fix another SLP constant insertion issue
16760e5bf7028dfa36b39af305d05cdf2c15b3a9 tree-optimization/97334 - improve BB SLP discovery
8c26cfc6af38a3c4d16f510ee8ac3ae11ea2bbbd Fixup gcc.dg/vect/pr65947-3.c when masked loads are available
6d42d1e223deaf866062e11bd51ee99441ad8871 More consistently split SLP groups
ab87b0add6a7c3464ee9067dd99e037e79f81984 IPA: prevent an UBSAN error
91d80cf4bd2827dd9c40fe6a7c719c909d79083d vect: Fix an ICE in vect_recog_mask_conversion_pattern
a7825bb6556da6fa991b7ea1b72e3851026dc2cd fix SLP subgraph detection wrt fully shared lanes
bd28b730cf35dbeeb2b26aa17397163bbbb0ca9e SLP: fix SVE issues
126ed72b9f48f8530b194532cc281fb761690435 optimize permutes in SLP, remove vect_attempt_slp_rearrange_stmts
a673744dee7a80e6525fb0da87d053c8ccab6275 Remove STMT_VINFO_SAME_ALIGN_REFS
78fbe731a8822e819c4ca0e6d6f777c7a2f36bad PR target/96759 - Handle global variable assignment from misaligned structure/PARALLEL return values.
ec5e6467091ee0f8de2f894f0c1669465a8440f1 adjust BB SLP build from scalars heuristics
ea9535e75e9118493879cb76520c85272981ebda More vect_get_and_check_slp_defs refactoring
72eb8335848be77649ac1c5229b8c26352ab8949 RISC-V: Add support for -mcpu option.
28290cb50c7dbf87458befeb3e295b5cb13560b5 tree-optimization/97482 - fix split_constant_offset of nop-conversions
852dce060860d988f4d8007be97b7b38e51f9900 Fix ICE in vectorizable_live_operation
429ad0bb0d3dc77e44f95620341da4938d49168e tree-optimization/97428 - split SLP groups for loop vectorization
f54147fcfd885598d57783f98b0786e9e200a5dc [Ada] Use new Max_Integer_Size attribute in system.ads files
540d5f4f0215e1cdd2d4a2c89c65e46033298be0 Refactor vect_get_and_check_slp_defs some more
4a70aa7a627c0b918ce1da75c0dbe088539e420f RISC-V: Handle implied extension in multilib-generator
6c6e0cafa38cee8309f37b846cb7db813a472a54 Adjust BB vectorization SLP build heuristics
cd6cd6aed195b4ec7d652e8b41d60b60e174304e PR libfortran/97063 - Wrong result for vector (step size is negative) * matrix
95f27849a580ac834d4f51a0642da9671f0a9dee tree-optimization/97466 - remove spurious assert
361c378dda1f17435ecc364ab246978784df2482 tree-optimization/97486 - avoid edge insertion in SLP vectorizing
11b8cca0831ee37cc534ff27cd8d32ac5aace6f7 IPA: fix one more UBSAN error
f000b7c436e62c52798187d8150216569eef17b5 testsuite: Enable and adjust powerpc vec-extract and vsu testcases.
a335f6f4ee5cb4f7dbfef52e17bf854ae42c1216 tree-optimization/97496 - avoid SLP externs in patterns
06729598b0dc10dbe60545f21c2214ad66a5a3db Fix latch PHI arg lookup in vectorizable_reduction for double-reduction
73764bae1d416524fc06e0f01f81c7274ec0937b [Ada] Raise Capacity_Error on formal vector insertion
d94093013877cde3dce5c243099ad54668849400 tree-optimization/97500 - avoid SLP backedges for inductions
7026bb9504eb0f95e114f832cd6dd14302376861 Refactor implementation of *_bcst{_1,_2,_3} patterns.
df7f0a3a21418f8e06bb4710f09587e54225da93 RISC-V: Extend syntax for the multilib-generator
f3cf5174b19a89aeed5aa2ba82a373ded35a4a96 Fix PR97502
b960a9c83a93b58a84a7a370002990810675ac5d middle-end/97521 - fix VECTOR_CST expansion
655f7f0fb7c9aa2fe7f6660b8ae2c06c01a1413d Refactor vect_analyze_slp_instance a bit
3d423c6f6a69d87ad52ba3af75f3debd8a8b8810 c++: Handle RANGE_EXPR index in init_subob_ctx [PR97328]
67b8991b543403dc4a0c0954546c4339d139edeb vect: Remove redundant LOOP_VINFO_FULLY_MASKED_P
7cda498920dbf244e9e06fdb2fc710a118a8c033 Revert "middle-end/97521 - fix VECTOR_CST expansion"
27c14056f4805c9d8cfc655ef2c846be128b02c9 tree-optimization/97539 - reset out-of-loop debug uses before peeling
50f9e1f4d458e36d306b2449c689e45492847f68 middle-end/97554 - avoid overflow in alloc size compute
605c2a393d3a2db86454a70fd7c9467db434060c middle-end/97521 - always use single-bit bools in mask vector types
63b2149fb4b0bd16c44ab9485cfdc37149e97b97 Refactor SLP instance analysis
83220838dd6f7701ca264347c934b12de7703b42 Move SLP nodes to an alloc-pool
e94de06fd6077438539b2d7c18eb8fcb113bd9b6 RISC-V: Refine riscv_parse_arch_string
5af1e827bbb624eb28f80d2c5e0da46185af3708 Avoid uniform lane BB vectorization
4a369d199bf2f34e037030b18d0da923e8a24997 SLP vectorize across PHI nodes
686c1b70c70a8df4f8633c1b8eeb84a1fdaa48b2 Adjust BB vectorization function splitting
4a972479f050bc19ad55f0171523db14295924c2 Fix BB store group splitting group size compute
31643fa3e994749bd2da7b35846f1958f8823b8d [PR97504] riscv needs wraplf for aux_long_long_float too
ac1724ccfdb9056d59fc21500c57c4edc963e653 dump reason for throwing away SLP instance
2acb33103c4cbc6766d8707ad58aa5cc9a804719 Change the way we split stores in BB vectorization
616351b897c834500e685f4ab6ece4d82b506d29 Fix iteration over loads in SLP optimize
b626b00823af9ca9ab619fe13d1e8703a3101dab tree-optimization/97615 - avoid creating externals from patterns
69adcfce1236705584ed83b46ba42d4875948aa3 Fix gcc.dg/vect/bb-slp-5[89].c
6f62d8dd338a43653e1ee195b9b7bf1779e4abeb Ignore ignored operands in vect_get_and_check_slp_defs
f4af2dde57992ae0d60a2077f4f0024327b8e6d5 dump when SLP analysis fails due to shared vectype mismatch
54ef7701a9dec8c923a12d1983f8a051ba88a7b9 value-range: Give up on POLY_INT_CST ranges [PR97457]
122f0db27933e6e34e073c9c4d27a10801652ebd testsuite: Adjust target requirements for sad-vectorize and signbit.
1e1e1edf88a7c40ae4ae0de9e6077179e13ccf6d More BB vectorization tweaks
e4b3d2a4c25c72211aaa8894a62b60900f543689 Consistently pass the vector type for scalar SLP cost compute
6e23549157d671f4f2e61756a0d0924cc59718ab vect: Fix load costs for SLP permutes
2e0216f9c4db8fde09706f57e6a6d80161c0da07 libstdc++: Fix memory issue in ranges::lexicographical_compare testcase
57ec9b687b0c1d83e477b7b7433c11d814489259 Fix some memleaks
5681668765e233735b4c5e6a305e73ae1f80a328 c++: Tolerate empty initial args during normalization [PR97412]
13feb0234b136fbdc1dbfba3a9663fb4e1043f75 libstdc++: Avoid warnings in tests
973574465ca250ed9af5c229a8a3a6b05fde9ca0 Adjust gcc.dg/vect/bb-slp-pr65935.c
c0bfd9672e19caf08e45afeb4277f848488ced2b tree-optimization/97633 - fix SLP scheduling of single-node cycles
63d0da8852553ec42d5256e9c96ee21d26e0c2cd gcc-changelog: Handle situations like '* tree-vect-slp.c (): '
33c0f246f799b7403171e97f31276a8feddd05c9 tree-optimization/97626 - handle SCCs properly in SLP stmt analysis
d10f3e900b0377b4760a090b0f90371bcef01686 Add -fzero-call-used-regs option and zero_call_used_regs function attributes.
d1e5d82af819025df9d9a81e8c591690e299924a libstdc++: Fix some more warnings in test
c1e6691245ca2f1f329549f323f67afe32bcb97a RISC-V: Add configure option: --with-multilib-generator to flexible config multi-lib settings.
4ad70477801548db4d37e8d540a3fd6ebbbcfd48 RISC-V: Check multiletter extension has more than 1 letter
a159081ad4259c42456bd3dc2b637747c373c5a5 tree-optimization/97650 - fix ICE in vect_get_and_check_slp_defs
5b41d673ad96dd2f9a7dec3877d0381320ccadb1 tree-optimization/97558 - avoid SLP analyzing irrelevant stmts
4c198ddff83744f8b7bf24306ed1e6b889c44044 tree-optimization/97558 - compute vectype for SLP nested cycles
e881774d0dda6d5127eb8f0642f6edc16dc0b1e7 Rewrite SLP induction vectorization
f5e18dd9c7dacc9671044fc669bd5c1b26b6bdba pass: Run cleanup passes before SLP [PR96789]
beddd1762ad2bbe84dd776c54489153f83f21e56 [OpenACC] More precise diagnostics for 'gang', 'worker', 'vector' clauses with arguments on 'loop' only allowed in 'kernels' regions
41f7f6178e2d35288273656dc55dae8fcf3edeb5 [Fortran] More precise location information for OpenACC 'gang', 'worker', 'vector' clauses with argument [PR92793]
f53e9d40de7212413b361758d66aafb833173dd9 tree-optimization/97678 - fix SLP induction epilogue vectorization
8414529156e0bca37647c440c71beeca1d04ac86 testsuite/97688 - fix check_vect () with __AVX2__
ac6affba97130bcbffb21bd9f8ca53c7aac89551 tree-optimization/80928 - SLP vectorize nested loop induction
9d1b813d0f7c9a8d80b0aee6eb1418b0afdf0f84 bootstrap/97666 - fix array of bool allocation
abe93733a265f8a8b56dbdd307380f8c83dd3ab5 PR target/96342 Change field "simdlen" into poly_uint64
78f2f08ac8f22a0ad412a2abf5225b5fe3176bcf c++: Refactor clone copying
fab72592d86d11b89a01f0f3c2c9c329d43466c1 [OpenACC] Use proper location to 'inform' of enclosing parent compute construct
8d887367a7a3bc2cf1ca926899567aeeba915e44 bootstrap/97666 - really fix sizeof (bool) issue
092cdbd9198497593fb034971d0f80fc931ab145 Re-instantiate SLP induction IV CSE
3e190757fa332d327bee27495f37beb01155cfab phiopt: Optimize x ? 1024 : 0 to (int) x << 10 [PR97690]
1e9f339d946b8296e3785bec77e03d71b487d689 tree-optimization/97709 - set abnormal flag when vectorizing live lanes
1272573a6b2257a7ed525a81e26862a563fb68a0 add costing to SLP vectorized PHIs
4d76079fdfa3d36ebd95ac8b489519945e8ee88f middle-end: Move load/store-lanes check till late.
e3587a2d8b005d72f882a21864fb132f8a966366 middle-end: Store and use the SLP instance kind when aborting load/store lanes
199988774d74091e467aef695d0d985528360613 middle-end: optimize slp simplify back to back permutes.
403f0dac0cb24184631e175836766a3a1da165a5 Fix SLP vectorization of stores from boolean vectors
9f87fcf3034d0e774c4dee380f9113d1453e0e72 middle-end: guard slp-11b.c testcase on vec_lanes
65e82636bcdb72a878c2e53943e71b15dd9fb22d PR target/96307: Fix KASAN option checking.
56ecdc2f02bfa69021003d7ac267dc65f385902f RISC-V: Mark non-export symbol static and const in riscv-common.c
2210bf6dec4a9868c828af546890805cac353f84 tree-optimization/97733 - fix SLP of reductions with zero relevant
8ebedfcd86aa5e3fc902fb442ce12c9d440c23c8 tree-optimization/97732 - fix init of SLP induction vectorization
7307d8e10727aea8069c0e47e64a7a9b8588a22e tree-optimization/97706 - part one, refactor vect_determine_mask_precision
7144270e2de7ba4954729c75ca389ed3081134ee Move ipa-refs from ggc to heap.
b88fdcc1c3675330031b0cff35ecf14b53616321 refactor SLP analysis
22175d0dc6a89ddd630f19d0f32a2d1ddb046807 tree-optimization/97706 - handle PHIs in pattern recog mask precison
9a34a5cce6b50fc3527e7c7ab356808ed435883c Objective-C/C++ (parsers) : Update @property attribute parsing.
ec735bc7646500570d9d6e45ef335e6d547b1433 tree-optimization/97746 - fix order of mask precision computes
f5761c318a5a973ba2e4e5b09a5213f4e3ad0570 tree-optimization/97753 - fix SLP induction vect
96f315213f337c2d5a9268f2d3e8337bbdb71bfc tree-optimization/97761 - fix SLP live calculation
c5395d88dfa2123ca5155008c8c8339ded98fd32 arc: Improve/add instruction patterns to better use MAC instructions.
2686de5617bfb572343933be2883e8274c9735b5 tree-optimization/97760 - reduction paths with unhandled live stmt
1693746302e4306b43cb66a0afe589137069bd8e tree-optimization/97769 - fix assert in peeling for alignment
e29dd0eb733f4b9ae03e44322c7fbe8b51eff0a4 vect: Allow vconds between different vector sizes
d33bc98f5bc65f2505fcaefb0f9055ec67fe36d2 testsuite: Adjust pr96789.c by disabling loop vect
97976c0757ad3173ac00d1e32e335f3f960b0b9f RISC-V: Enable ifunc if it was supported in the binutils for linux toolchain.
dcf0dde488b81894124a6bb181c98e215d4dfdeb Asan changes for RISC-V.
207de83922bda8707aa33d6a2185e691116377e7 PR target/97682 - Fix to reuse t1 register between call address and epilogue.
d12603b746986554981f5ee220926a36a6cb6baf tree-optimization/97835 - fix step vector construction for SLP induction
d0a206abc6cbf0e992bf82bbb3584686eae05d34 tree-optimization/97838 - fix SLP leaf detection
c84df34aec3bb845b22384c7e85f0449ca00dd99 Delay SLP instance loads gathering
287cc750b0887e86cb309d976b17c7ee95f7ad48 Support variable index vec_set.
903adc062f28b8d7f5ed77ee104b51bf36448a28 testsuite: Extend vector() regexp
e9cea0d6c83929a3f03c73060b422bdc939f6c57 testsuite: Remove XFAIL for variable-length vectors
a880fcc657f0100fb5cfd1a8fd0bb7842eefdfa4 testsuite: XFAIL some SLP reduction tests for VLA SVE
f5647cf49f0ee861eca9d9b5c4b0333ee11e6017 testsuite: XFAIL SLP induction tests for VL vectors
8a1f6529062857523988202bad813304f003e8e1 testsuite: Adjust vect/pr65947-8.c for SVE
b513f5f2cb2a7f604dfa2c424dbccc6a1011b63b testsuite: Adjust vect/bb-slp-subgroups-3.c for VL vectors
324252dc59e7b1874337fccb463dc93cdecfbd82 testsuite: Add a vect_element_align_preferred guard
f6da5ecb058cbdcbf8f8efc2d7dcdf9b7bc3a4fa testsuite: Add a vect_load_lanes guard
fcd513df9aa83f30dbd1c34d13c8a0972702ffa1 PR97693: Specify required vectype in vectorizable_call
6b91b3e9df171970a907638d9b2e0bca1e792975 Add MODE_OPAQUE
6a5bb4705fb75fd3afdde938193c59938cc7bfde RISC-V: Handle implied extension in canonical ordering.
b03be74bad08c382da47e048007a78fa3fb4ef49 RISC-V: Support zicsr and zifencei extension for -march.
4b81528241ca682025d92558ff6aeec91dafdca8 RISC-V: Support version controling for ISA standard extensions
30270bf042049bf6aee6184e0b7688d9ca7b479d tree-optimization/97886 - deal with strange LC PHI nodes
0f545ad9b68445094975455a5657bfc8be2e4912 testsuite: Fix vect/vect-sdiv-pow2-1.c
6d0ffd9a3eaeac5bc71fe00049c9faf37a72b0fa testsuite: Add a vect_partial_vectors_usage_2 guard
6a9cd27ac6721ff378210c2851fb716c73f2a750 testsuite: Add vect_perm3_int guards
9fc9573f9a5e9432e53c7de93985cfbd267f0309 [2/3] [vect] Add widening add, subtract patterns
0b0061f4d83cd8eb181f7114a077237b95a0c144 vect: Add a “very cheap” cost model
ae48b74ca0c0ba33d396a6ebad7a1c0a6dadb1f7 c++: Fix array new with value-initialization [PR97523]
6e820b943bce54002f9343c2e39529d792291388 dump SLP_TREE_REPRESENTATIVE
4405edb496483c5e99adb311cc694b0b063eb358 Deal with (pattern) SLP consumed stmts in hybrid discovery
ad318e3f1d372c4e720979d1eb13bebb8fb852d8 SLP: Have vectorizable_slp_permutation set type on invariants
f8f8909af1b5dab515adae5b93b51f3c731b9929 Make MMA builtins use opaque modes
c84add5c13d292b339e90b154587439e4721a8c5 Re-enable vector pair memcpy/memmove expansion
d4a20f9059070fc42b9effde0d890dcebccc2f84 Update vec-35.c and vect-35-big-array.c
692d3b772755b798cc527a80ca2d02e23bc4e2bf fix hybrid SLP discovery debug stmt issue
ab1d52b5618cdb975b460782cd7b98a017c55615 test: Update some cases for vect_partial_vectors_usage_1
24b553d0f73ffea2551a77c67859ad6fe44110a6 [testsuite] Enable column location checking for 'dg-optimized', 'dg-missed'
fddc7f0080f1f056c4d145451608ebd3e807422a middle-end/97579 - lower VECTOR_BOOLEAN_TYPE_P VEC_COND_EXPRs
45281f120da85e0513cb5daa793112a37157ee70 Free more of CFG
8d87bb8f56db177718bf0f07df462b85a90c1ef3 [Ada] Add support for 128-bit fixed-point types on 64-bit platforms
5c197b83e12b634b65a449d8a7375a18f350708e tree-optimization/98015 - fix VEC_COND_EXPR lowering condition
3a5d8ed231a0329822b7c032ba0834991732d2a0 Fix print_multilib_info when default arguments appear in the option list with '!'
a5ad5d5c478ee7bebf057161bb8715ee7d286875 RISC-V: Always define MULTILIB_DEFAULTS
4bcded23eb87c55a1a3fcd23d5629a0c35aee4ba tree-optimization/98048 - fix vector lowering of ABSU_EXPR
ebbe3f29518854c36574adbd4fa82fd56fa64056 tree-optimization/98064 - fix BB SLP live lane extract wrt LC SSA
76ab0317cfb3201b9b68db9e8a0ced4f4e9f6cd4 RISC-V: Drop some commited accidentally code.
39836f8324d819459cb21198e95b993588c6a2b1 libstdc++: Pretty printers for _Bit_reference and _Bit_iterator
a35d5e93654d4947f116f77ff0ed6ab2672d1df2 guard maybe_set_vectorized_backedge_value calls
05f7a2afe8fac98fb3e70ccd4128e6a2ffd7c817 C++ Module Binding Vector
feb93adf76eda52385a73eb57c5bef7c870a2564 tree-optimization/97630 - fix SLP cycle memory leak
744ca1bf1cc07627f85c2f73a2ced3fb551e1f60 c++:  Fix bootstrap
81d590760c31e11e3a09135f4e182aea232035f2 Add popcount<mode> expander to enable popcount auto vectorization under AVX512BITALG/AVX512POPCNTDQ target.
b20cd0c743b8823d8ac4437bf893ce691fb820e8 RISC-V: Canonicalize --with-arch
704ccefb576dcf30b27a4b9bdacb6e15902f5307 debug: Fix another vector DECL_MODE ICE [PR98100]
df933e307b1950ce12472660dcac1765b8eb431d vec: Simplify use with C++11 range-based 'for'.
dfb21f37fde4f9e11e9b3b6b6ea6dc9d5fbed644 VAX: Rationalize expression and address costs
e552abe2ba27ccec0d7c0d050b4617f2f636dd63 PR target/95294: VAX: Convert backend to MODE_CC representation
1fab57f26ec24ce4e5672a7515c88611eba2483f Re: testsuite: Adjust target requirements for sad-vectorize and signbit
7b4ea2827d2003c8ffc76cd478f8974360cbd78f tree-optimization/98137 - enhance split_constant_offset range handling
cdcbef3c3310a14f2994982b44cb1f8e14c77232 tree-optimization/98117 - fix range set by vectorization on niter IVs
ebdfd1606da6b5aa586b0cd156b69b659235c9c2 tree-optimization/98113 - vectorize a sequence of BIT_INSERT_EXPRs
4aaf33718f09daf1cd2864b3db07faa2e44642ff PR target/98152: Checking python is available before using
e844c04e35ca2fe9ee2f758a720dd37cbe81e7ef tree-optimization/98180 - fix BIT_INSERT_EXPR sequence vectorization
c2c198bfd1e747b761c6b9b13417685bd4378d57 tree-optimization/98191 - fix BIT_INSERT_EXPR sequence vectorization
3a008b1d124bef50bd7ae12106c90c3230eb2d57 testsuite/95900 - fix gcc.dg/vect/bb-slp-pr95866.c target requirement
1746681c3c167adafb7c0a30978dc2ca96144121 tree-optimization/98192 - fix double free in SLP
8d63e3c229f32d441e6ead0cb62923095b54c5f9 RISC-V: Explicitly call python when using multilib generator
154e9b831b6fc7d8493b5b0d56b9c5cdeff968e9 Allow scalar fallback for pattern root stmt
76c09f2af9d8ab9c760d860626f069d12d86f0a9 tree-optimization/98211 - fix bogus vectorization of conversion
f5b902a9af9d1cce6c540c7f71e02e22e45c23ef [VECT] pr97929 fix
a1fb16e5472fded44181dd8938f2ba3cbe9844b6 remove obsolete conversion handling from vectorizable_assignment
79c1b9fb44ce9abd0e2f6642b65684b9721233ee c++: name-lookup cleanups
afc14c8d0a9e7af13698a7eec84226a3cc4b0e67 c++: modularize spelling suggestions
c0979d8f22a97eb231ebf544c512353372bdb25d c++: Name lookup for modules
4f1d8bd5096cc234313b23f64cdac53a94ff75a2 c++: modules & using-decls
fa4a8b6463e0dbc2a072fca835d28ae7a57849d5 tree-optimization/95582 - fix vector pattern with bool conversions
fc7b4248172561a9ee310e2d43d8a485a5c9e108 tree-optimization/98235 - limit SLP discovery
955af69b7376ebd05051c02455d71c90258f5e24 testsuite/98239 - require vect_condition for gcc.dg/vect/bb-slp-69.c
0fc3bf781d15a9fa260395bd72472224f42e3ce1 testsuite/98240 - amend gcc.dg/vect/pr97678.c
4b488a2e695b6868cfb69c65b8e2943ea31c335c testsuite/98242 - amend gcc.dg/vect/bb-slp-subgroups-3.c
755cf781f2eb3a6317af90bf3b12206b0fc54a96 Add missing varasm DECL_P check.
10bbba9145700e2c3b4709c1041c66d8ff85c7f1 middle-end: Refactor and expose some vectorizer helper functions.
3ed472af6bc9f83b7a8ac553b282f659a0bf53f7 middle-end: Support complex Addition
8e56e4d9566ce99707befa88bf4d11c74ec45c10 libstdc++: Fix several _GLIBCXX_DEBUG tests
159b0bd9ce263dfb791eff5133b0ca0207201c84 middle-end: Exclude TOP permute from blend considerations
eece52b53b75767593282d178bae12ceebb33f12 opts: Remove all usages of Report keyword.
cd676dfa57e643a4f7d8445e6ebad0f21cf3fd84 bswap: Handle vector CONSTRUCTORs [PR96239]
cdb1c276560b26a9c3bc837340669962ef1b430a testsuite: Adjust expected instruction count for PPC fold testcases.
68dd664912916c3bce87e95b2ddf12184e0c1b43 [Ada] Remove unused subprograms in validsw
4a7a3110c70da8bad6978a36d9da3836538a0cc3 Update default_estimated_poly_value prototype in targhooks.h
9032d2b2414ed22e53a9980a51b835d3caf83c48 bswap: Fix up a thinko with empty CONSTRUCTORs [PR98378]
1467a5c5ab0dfbae3175b4a326467f939864dadb bootstrap: std:stoul non-portable [PR 98412]
7e63d383b89cd75b7775883d71ed09724b9ee73f c++: Fix build with clang
168be2b3afddd41d4575ed55439231812bc3e7c9 RISC-V: Fix python3 compatibility for multilib-generator
052870c3d1c962a0875c4debc066ccc3d68e7029 arc: Don't use predicated vadd2 instructions in mov patterns.
0411210fddbd3ec27c8dc1183f40f662712a2232 genmodes: Update GET_MODE_MASK when changing NUNITS [PR98214]
9fa5b473b5b8e289b6542adfd5cfaddfb3036048 vect: Fix bogus alignment assumption in alias checks [PR94994]
58a12b0eadac62e691fcf7325ab2bc2c93d46b61 vect: Avoid generating out-of-range shifts [PR98302]
8837f82e4bab1b5405cf034eab9b3e83afc563ad tree-optimization/98291 - allow SLP more vectorization of reductions
0926259f9fc21a7f1e09f45f8aede156ef249585 tree-optimization/98393 - properly init matches when failing SLP
9e79d76a16c56df0f838b9aede69c0a158203f56 tree-optimization/98308 - set vector type for mask of masked load
01be45eccee42d0cc6c900f43e2363186517f7ed vect: Fix missing alias checks for 128-bit SVE [PR98371]
01da03c915f086fb9aa36b809c1a06a9f661533b tree-optimization/98381 - fix live bool vector extract
a7553ad60bebc419d510564b8b9f9e5e03725ff5 store-merging: Handle vector CONSTRUCTORs using bswap [PR96239]
4ddee425b8c427d3cc13c49b26f442313e239572 reassoc: Fix reassociation on 32-bit hosts with > 32767 bbs [PR98514]
26b5062be991cf709c7c628061a40a48e1bca681 tree-optimization/98428 - avoid pre-existing vectors for loop SLP
27aad521570cbc1050ba957c0ee47aed18033dc1 move SLP debug counter
33a63257701c8d94ee375e32ff1837c989d8ded6 tree-optimization/98516 - fix SLP permute opt materialization
e2e2f3f2c9400f4ce0dad941bb6c5aa4b799465b c++: Fix deduction from the type of an NTTP
c9ee9c1e3553247c776f33eb0fe0aadee094a192 add signed_bool_precision attribute for GIMPLE FE use
1b5669752426d225b0088d57d1d2fffba9625032 Adjust testcase for PR 92658
d02a8b63e5aef49ab6973c64a2225236895763a1 bswap: Fix up recent vector CONSTRUCTOR optimization [PR98568]
78595e918ee168f595d16268073a3754c64d67fe gimple-isel: Fall back to using vcond_mask [PR98560]
298e76e6562bb79ed42cb4bc88aca817e6e58417 gimple-isel: Check whether IFN_VCONDEQ is supported [PR98560]
d54029179cbe817eaf9b6899339b0151cff3c00e fix GIMPLE parser for loops
0b7b4710111e0ac42d14ffdd1d71ff9c6751414e RISC-V: Move class riscv_subset_list and riscv_subset_t to riscv-protos.h
e3354b6de7a348386425879847c4f18ef1e82791 RISC-V: Implement new style of architecture extension test macros.
01d92cfd79872e4cffc78bf233bb9b767336beb8 Fix array-quals-1.c for RISC-V
bdcde1504502719504a7a63ab10059e171694dc2 tree-optimization/98544 - more permute optimization fixes
b407f233d7c18534fbfe8f74af7f0232498fb0c4 fix vectorizer memleaks
9febe9e4be7812519258ea3ed4f38bbc1a61624b widening_mul: Pattern recognize also signed multiplication with overflow check [PR95852]
39666d2b8858361b4921fe0ae87bba90a62d9b9a slp: fix is_linear_load_p to prevent multiple answers
bd4298e1927f6c519d5b7829023b1db7e64592e6 slp: handle externals correctly in linear_loads_p
0c18faac3fb407d182dfa82426d1be7cce587926 slp: upgrade complex add to new format and fix memory leaks
300a3ce5c5695eb1a7c0476e9d1b45420a463248 tree-optimization/98221 - fix wrong unpack operation used for big-endian
04bff1bbfc11a974342c0eb0c0d65d902e36e82e tree-optimization/98526 - fix vectorizer reduction cost
84684e0f78c20c51492722a5b95cda778ad77073 tree-optimization/91403 - avoid excessive code-generation
640296c367f97a1b9974bfb60bb02c934d71baf4 make FOR_EACH_IMM_USE_STMT safe for early exits
52a170b1a1818b7521c25e76271638a448b3f630 tree-optimization/98550 - fix BB vect unrolling check
3ddc18251a821fe69d6229abbf83d77284d2340a tree-optimization/92645 - improve SLP with existing vectors
11cbea852b0ae2b0f17a9caeaf6344d689231c2f c++: Fix cp_build_function_call_vec [PR 98626]
e45c41988bfd655b1df7cff8fcf111dc6fb732e3 vect: Account for unused IFN_LOAD_LANES results
2182274f510c180ea92a4f826a0f6cf5f1f55b66 tree-optimization/98674 - improve dependence analysis
aa3d33dccb57621b2ab2029dce79208c0c9392c1 RTEMS: Fix Ada build for riscv
fe70119531395c8105b098bfa915c003c78be038 slp: elide intermediate nodes for complex add and avoid truncate
500600c78408ab4c6450c7eeaea2e3657e305ed2 slp: Support optimizing load distribution
e09173d84dabd186ad2463f47350c1bcabfeab8f slp: support complex multiply and complex multiply conjugate
31fac31800b5671d17c46108013d6fc709370ef3 slp: support complex FMA and complex FMA conjugate
478e571a3eedfab198e48e8d2c8f02e491ba2c28 slp: support complex FMS and complex FMS conjugate
b50df1e749bb06080ef727504dd7c2616f455f46 slp: Add complex operations class to share first match among all matchers
59832db9a711591bcee0746ae33ccf5eb4978121 slp: Add Tests for complex mul, mls and mla"
c4eec1efae0cfdd9a1a50666876b28567fca1734 testsuite: Fix sed script errors in complex tests
2ea6f4a377e51ed4d55cd8277f8c201ad66685f6 tree-optimization/98685 - fix placement of extern converts
cb60334b7162ec5ae560be482cd7a33402470bb4 testsuite/96098 - remove redundant testcase
d03f14c354a348cc1043f637cae1ac6470034f71 testsuite/96147 - remove scanning for ! vect_hw_misalign
e1bd80fb7064869e8d03ddb59e583f4cc9020770 testsuite/96147 - key scanning on vect_hw_misalign
aa4ee5798fefd8eedd51287695120bf5219a9858 testsuite/96147 - scan for vectorized load
b36c9cd09472c8efb8405726b7cc94fa4ae7059f testsuite/96147 - align vector access
446703ccc2ce09e9710964f781a21030bf3c2d54 tree-optimization/96376 - do not check alignment for invariant loads
104304cd246e9e8cd874f6cef7e2a5cd4bb0114d testsuite/97299 - fix test condition of gcc.dg/vect/slp-reduc-3.c
b8c3f5196e1e439ac83f81dd245eb4028b19d531 libgomp: enable linux-futex on riscv64
e393f03b1a73d75901d1bc49c99123bdf534e120 testsuite/97494 - adjust gcc.dg/vect/slp-11b.c
c7e276b869bdeb4a95735c1f037ee1a5f629de3d analyzer: use "malloc" attribute
9ee33d7c33fa757d7011addfa6bdd0ccb6212181 RISC-V: The 'multilib-generator' enhancement.
ea74a3f548eb321429c371e327e778e63d9128a0 vect: Fix VLA SLP invariant optimisation [PR98535]
f46a40112caa7e039d949beda94386ff4e436a35 testsuite/97299 - more gcc.dg/vect/slp-reduc-3.c massaging
68ba1039c7daf0485b167fe199ed7e8031158091 [PR98777] LRA: Use preliminary created pseudo for in LRA elimination subpass
bca467e56fe111fa6d876656c60d5704065e83fe c++: ICE with delayed noexcept and attribute used [PR97966]
ee78c20e74d30284fee36e22a64e86e45e676029 Lower AVX512 vector comparison to AVX version when dest is vector.
4be156d6bef317b8704052f11431457a577ed564 middle-end/98793 - properly handle BLKmode vectors in vector_element_bits
defc40db9e09ecceb2d71727031fe9579bce1b11 middle-end/98807 - more vector_element_bits fixes
eb77a934eec8fe52e4c5612f5264127290bc517d testsuite: Fix up pr98807.c on i686-linux [PR98807]
4b59dbb5d6759e43bfa23161a8d3feb9ae969e1a middle-end/98726 - fix VECTOR_CST element access
c91db798ec65b3e55f2380ca1530ecb71544f1bb tree-optimization/98854 - avoid some PHI BB vectorization
2bcceb6fc59fcdaf51006d4fcfc71c2d26761396 libstdc++: Add std::experimental::simd from the Parallelism TS 2
f76d0d86454baf99ada0748c73a29816854e1b91 RISC-V: Fix -march option parsing when  extension exists.
25f303e9a27a0d799f9979446d9f11ed62b8d648 testsuite: Fix up gomp/simd-{2,3}.c tests [PR98243]
245ccc8e6b1b74a323fd760c5e3ba1529ea77c47 testsuite: Update pr79251 ilp32 store counts.
972918eea873f8b1663151316c4b3aee7ae028e2 rtl-optimization/98863 - prune RD with LIVE in STV
bbe6998b227013899b001d336a0ba4de94d8d239 RISC-V: Fix gcc.target/riscv/attribute-18.c
33a1e511b57465d898429740377466894a0b247d libstdc++: Make deque iterator operator- usable with value-init iterators
bc7c2b34c34f21ea58198ba58a48eb065bdda25d PR target/98743: Fix ICE in convert_move for RISC-V
1592b74350a0311e4c95a0192ea9c943847e7bc0 tree-vect-patterns: Don't create over widening patterns for stmts used in reductions [PR98848]
5d5130ad5c396bd2dcde766c0c994855b815355b fix memory leaks
5e606ed90a1bed878071b6b5a3ef9b97b3d99838 slp: Split out patterns away from using SLP_ONLY into their own flag
4f22942841edabbdda8a15b172a5c143da7bdafe libstdc++: Fix NEON intrinsic types usage
db256f9bef8c376e9d88e8f32ce94a03b6d105ee libstdc++: Support -mlong-double-64 on PPC
81c2c32de9c1058c33fcf77ada31186b4ae1f1fe libstdc++: Fix mask reduction of simd_mask<double> on POWER7
5eb792e7a12ad214e5295e3f664637078936213f doc: mention -mprefer-vector-width in target attrs
7002a33d1ba81e4577d965fb9daaee146b31faa8 tree-optimization/98855 - fix some vectorizer cost issues
8d0737d8f4b10bffe0411507ad2dc21ba7679883 Fix ICE: Don't generate integer mask comparision for 128/256-bits vector when op_true/op_false are NULL or constm1_rtx/const0_rtx [PR98537]
072f20c555907cce38a424da47b6c1baa8330169 PR target/98878 - Incorrect multilib list for riscv*-rtems
63538886d1f7fc7cbf066b4c2d6d7fd4da537259 tree-optimization/98855 - redo BB vectorization costing
d4536e431316b4568e236afd7a6017e5efd1b0a1 lto/96591 - walk VECTOR_CST elements in walk_tree
40c92180df970143249f3cd5056f8fb48a4d9333 middle-end/98974 - fixup after STMT_VINFO_VEC_STMTS rework
283653f45595f53db486cbc2f1f10091cb45ea3b tree-optimization/99017 - be more forgiving in BB vect costing
d997565c41a8a5783bf076437208f38d8ea39ced tree-optimization/99024 - fix leak in loop vect analysis
9769564e7456453e2273071d0faa5aab2554ff78 compiler: open byte slice and string embeds using the absolute path
a4953810bac524e19126a2745c75fed58db962c2 RISC-V: Shorten memrefs improvement, partial fix 97417.
18fabc35f47f0abf4ec14d147098ec4e0734d2a3 RISC-V: Avoid zero/sign extend for volatile loads.  Fix for 97417.
1531f39268c8973cf9478585fba5c5bbdb6e9c4c openmp: Fix up vectorization simd call badness computation [PR99100]
d8889c99aab4b599aa7ceb7079e69a9766171336 c++: Macros need to be GTY-reachable [PR 99023]
44841e1788c7c64f7d422768a80036a2a90c677f dump SLP subgraph before costing
74af13c174714dd3b9f1ded4b39955f003c16361 config.sub, config.guess : Import upstream 2021-01-25.
5296bd57d0605d1fec900d85e3ab3875197e609a slp: fix sharing of SLP only patterns.
6e646abbe02f2c79cc3ba1f3de705ee62ff9dcd1 fold-const: Fix up ((1 << x) & y) != 0 folding for vectors [PR99225]
96c5a8589e0dd22819bae34cac3381ad381d3989 [comitted] Testsuite: Disable PR99149 test on big-endian
6c35e79b47ab582e18d851f6c5df776bac766eaf slp: fix accidental resource re-use of slp_tree (PR99220)
f207eed69e2421695e240aaf47bf881c09cbdd8a c++: Macro location fixes [PR 98718]
5e7c0927cbd115d488d527c86dfc671b22c378db Make the PR99220 fix more robust
1193d05465acd39b6e3c7095274d8351a1e2cd44 tree-optimization/99253 - fix reduction path check
28af4b9a7c5ee9f6c6fc111210639eb2f64bddcd slp: Don't traverse tree on (nil) nodes.
6bd409cfc83683a9be5c6b3b8f9a3ec8959f9356 c++: abbreviated function template return type rewriting [PR98990]
b8d85f569a6dd44cb9561c95e5f628bd6cd531a5 Optimize pcrel access of globals
b5040344b9ca609e19ee59ba56cd4af9697a1692 dwarf2out: Fix -gsplit-dwarf on riscv or other non-.uleb128 targets [PR99090]
ba09d11a9d0ae2382bab715b102a7746d20dea6d c-family: Avoid ICE on va_arg [PR99324]
5a559ace9b83cb9d7d4ba6f455ddae014f016dfb c++: Unify REQUIRES_EXPR evaluation / diagnostic routines
8d57bdadd2d9c2e5c95515ca7a583d7b407b55c4 Correct a workaround for vectorized stores.
c778a237c1c605c2c5606c212c1ace756739442b c++: Redesign pending entity handling [PR 99170]
9553c8a1b9dd2ca2f0f30d8b23fc6844c7e4a223 c++: Post-pending redesign cleanup [PR 99170]
a3ad6489d38982434faef3bc5f33e3c28c5f7c74 openmp: Avoid ICEs due to orphaned labels in OpenMP regions [PR99322]
7723f569345ae82ba440552251a84e65c2a9dcb5 cris: don't define MAX_FIXED_MODE_SIZE
0455cd76b687621f28488393c81d0854200a220a RTEMS: Fix -Werror builds
da7343a6f48c6813a29640fec744b0a236b6540f Fix miscompilation of Ada runtime on 64-bit SPARC
99d5299376d203fe5172574c2d6b0b088e532383 [Vect] Fix mask check on Scatter loads/stores
3fbac260fc7860a97fd00a54ca955266d737925f [testsuite] Fix target selector for pr99102.c
47cca0288d06bd851e5801d13bbee7d9374b685d libstdc++: Fix headers that can't be used as header units [PR 99413]
9d4ad8570c3bab2e145aa7b39ce8c66bafbf1945 testsuite/97494 - amend gcc.dg/vect/slp-21.c
f6c1d026c3a9109de58d1148e3f54b5273ebb86a testsuite/97494 - XFAIL gcc.dg/vect/vect-complex-5.c on !vect_hw_misalign
aa0d8a3e28cd3365a2910884ce3e7cb67b07f866 testsuite/97494 - XFAIL gcc.dg/vect/pr97428.c on !vect_hw_misalign
3b938c64f775eafd977f79c4f3038082ae7e0127 testsuite/98245 - adjust dump scanning of gcc.dg/vect/bb-slp-46.c
5f27a9f90d4eadadf937f1a5d0bfccf39261f330 c++: Fix unhiding friend with imports [PR 99248]
bbdf59fdbc2ce41ccfac807b15cf3fac7b465a56 match.pd: Don't optimize vector X + (X << C) -> X * (1 + (1 << C)) if there is no mult support [PR99544]
995a740cb01a0671a2082cb1ae13d0c356d4b568 libstdc++: Remove symbols for new std::call_once implementation [PR 99341]
bd364aaee338fbc6e3a49043614331ff471e7f4d Enable gather on zen3 hardware.
d9f0ade001533c9544bf2153b6baa8844ec0bee4 PR target/99314: Fix integer signedness issue for cpymem pattern expansion.
ab03c0d5753549f1a78eeb706510b55fb97c8651 Fix idiv latencies for znver3
c3a2bc6daaa2d278cb5f323e2df4b8c2af4198ac slp: remove unneeded permute calculation (PR99656)
83855386c41b78c92f4445e4d0e6397372136c90 Add size check to vector-matrix matmul.
fc24ea2374259d401a46ce3526688b7e79d4cc13 dwarf2out: Fix debug info for 2 byte floats [PR99388]
540dace2ed3949571f2ce6cb007354e69bda0cb2 PR target/99702: Check RTL type before get value
a9604fcbb29e457a4824a496905057dcc2e5d78a RISC-V: Support -mlittle-endian and -mbig-endian
cd1e2f632532d04c67a17820cb25826f8b0febac RISC-V: Add riscv{32,64}be with big endian as default
f1af1326d269b1d8efb696a50c9e88d0ab6ec45e RISC-V: Update soft-fp config for big-endian
28bddf0e322a5fdc33d3dcc3b9928d559ad7f124 RISC-V: Fix trampoline generation on big endian
4eb3a801a5ed947a50f941b63e30a0359fccf138 RISC-V: Update shift-shift-5.c testcase for big endian
7ac4dfec3912ef0be85542a00628c3ba01ddea2a RISC-V: Fix matches against subreg with a bytenum of 0 in riscv.md
fffefe3d9d1715f83c82331f2265e040f42d09fe RISC-V: Fix riscv_subword() for big endian
b61461ac7f9bdd0e98145be79423d19b933afaa0 fwprop: Fix single_use_p calculation
bd71889b9017751e1a06970d20b28b9fe9479bdc c++: Note duplicates in symbol table [PR 99283]
4be312862dec5c8e49c76249dd5aed220c72039e fix ssse3_pshufbv8qi3 post-reload const pool load
a29124d28253cdf603ba1977db2f09c9f233fea5 tree-optimization/99746 - avoid confusing hybrid code
8bafce1be11a301c2421483736c634b8bf330e69 'libgomp.oacc-fortran/derivedtypes-arrays-1.f90' OpenACC 'serial' construct diagnostic for nvptx offloading
068d02e896d3df17b59b013a82ca0bf9faf058f3 vect: Init inside_cost in vect_model_reduction_cost
aac12084fc07319d5c8232c51dafa4e297bd5415 tree-optimization/96974 - avoid ICE by replacing assert with standard failure
433b6b12dfa5ef109a5d8d40e7b3695dcb749e58 d: Define IN_TARGET_CODE in all machine-specific D language files.
d04c246cae674da081e1c9d8ba631560fee2fa91 libstdc++: _GLIBCXX_DEBUG Fix allocator-extended move constructor
25e515d2199d555848dfba01fd5364df94096496 fold-const: Fix ICE in extract_muldiv_1 [PR99777]
8cf2812cfceaf464dff99651b2d911d6e12b52b7 tree-optimization/99807 - avoid bogus assert with permute SLP node
9c68e2abe294a48385224cd7617eca0720144b5c slp: reject non-multiple of 2 laned SLP trees (PR99825)
1b5f74e8be4dd7abe5624ff60adceff19ca71bda Handle CONST_POLY_INTs in CONST_VECTORs [PR97141, PR98726]
b75c4e1384c021ca94fc8e8db8e517e802b820f3 tree-optimization/99856 - fix overwideing pattern creation
512429a885e87bef51057a001681b7d8d106e807 tree-optimization/99863 - clear vector CTOR TREE_SIDE_EFFECTS
23be03a0f243a084a0fe03d0b96a3d045e1a2b65 c++: dependent attribute on parameter [PR97900]
a40015780f8cc49476741b6914bd5ee97bd10f1d bswap: Fix up bswap_view_convert after the recent change [PR99882]
5bba3415ec251820ba0c9533aef1bef919dfbfdd silence expected psabi warning in ipa-sra-19 on ppc-vxworks
66de517b1c1dd22df7914f8e9a083cd5a73adbe2 c++: placeholder type constraint in structured binding [PR99899]
ffc2331d7994d7fabb1f6ebed931024a9bbe69f2 testsuite: Fix up g++.dg/ext/vector40.C test
58cd9fc8a61de09ba181c5ed5ac7fb91ec506414 tree-optimization/99924 - visit permute nodes again when partitioning
e5c170e080399fb3d24a38bbfcd66bd4675abe53 tree-optimization/99880 - avoid vectorizing irrelevant PHI backedge defs
d11bcbe166c03f722c0e0d41d6e87ac445758fba tree-optimization/99947 - avoid v.safe_push (v[0])
0d6ad10c170e3670f0b5e3709e0fa6e76b7065b3 testsuite/99955 - fix may_alias declaration of vector
5c5b31975e62b4c52d76dc5efd9dc717a361c710 vect: Don't split store groups if we have IFN_STORE_LANES [PR99873]
2f3d9104610cb2058cf091707a20c1c6eff8d470 vect: Restore variable-length SLP permutes [PR97513]
12029c04d01c7ba0f775cdc208edf29490ee5db6 testsuite: Fix many UNRESOLVEDs for gcc.dg/vect
a45fe62102c952072e977db6d42a8524c4dd36c1 testsuite: Fix Advanced SIMD failures for SVE
860c5caf8cbb87055c02b1e77d04f658d2c75880 testsuite: Fix gcc.dg/vect/pr99102.c
05708d6eef87a3dd0c68b1aed7f8d9c3824062b8 c++: constrained CTAD for nested class template [PR97679]
7e45c45d9ccf9d0af2ce29fc5016506ba30676c0 testsuite: Tweak mem-shift-canonical.c
a708de07a1075b4707e640466b987fd724e823b7 testsuite: Fix gcc.dg/vect/pr65947-7.c
00138f9b2b96b61f49605fa261012a330b2668b1 testsuite: Add some vect_variable_length XFAILs
b9af08feac045565a7d3adfcd74e9478e4b33bd2 testsuite: Expect more Livermore loops to be vectorised with SVE
3e350d8539a4e28ddc30d0f08a4040f10b699135 gimple-ssa-warn-alloca: Always initialize limit [PR99989]
3785d2b207f1958f31a79fbbb5705b261551950d d: Add TARGET_D_REGISTER_CPU_TARGET_INFO
1fce5932a3af575cd02c1d2b786dd1b39b922ebe Better const_vector printing
a87d3f964df31d4fbceb822c6d293e85c117d992 Check for matching CONST_VECTOR encodings [PR99929]
a3317f7b3c02907a122f89879e5b6e90c386e64d c: Don't drop vector attributes that affect type identity [PR98852]
1696fc1ea01d5c9dce96b5d3122921aab9308f59 c++: Tweak merging of vector attributes that affect type identity [PR98852]
b44ab138b7d4aaa5a9ee7956121ffc94777f6a42 vectorizer: Remove dead scalar .COND_* calls from vectorized loops [PR99767]
eb8c931e0dbf1d7d9bc1279cab68a963e8f3c299 testsuite: Move gimplefe-4[0|1] tests.
8535755af70f819d820553b2e73e72a16a984599 SVE: Fix wrong sve predicate split (PR100048)
700e542971251b11623cce877075567815f72965 tree-optimization/99971 - improve BB vect dependence analysis
b972e036f40c12b106f9070c3e8adea0eb8a45fa Move gimplify_buildN API local to only remaining user
7d6bb80931b429631f63e0fd27bee95f32eb57a9 tree-optimization/99776 - relax condition on vector ctor element extract
83d26d0e1b3625ab6c2d83610a13976b52f63e0a veclower: Fix up vec_shl matching of VEC_PERM_EXPR [PR100239]
f7ee6a1e8ac62950dd32874bf75e748a2895d595 tree-optimization/100292 - avoid invalid GIMPLE from vector lowering
af4ccaa7515b8e72449448c509916575831e6292 tree-optimization/100253 - fix bogus aligned vectorized loads/stores
6efd040c301b06fae51657c8370ad940c5c3d513 RISC-V: Add patterns for builtin overflow.
17f2908fcf058e145cff275966e34f8c7f57c2c5 RISC-V: For '-march' and '-mabi' options, add 'Negative' property mentions itself.
18d713fbd345c5c54ab6091ac5f114df4551d1bb Update alignment_for_piecewise_move
47915ef8477569b2fbd8001996aa4e542284bb24 libstdc++: Use std::addressof to avoid ADL for operator& [PR 60497]
8d0d46f4a284946eccc504c58d1d9343f0967916 [Ada] Update copyright notice
da9e6e63d1ae22e530ec7baf59f6ed028bf05776 introduce try store by multiple pieces
e702c60e65cf9c13587d571cdd158bca74f4c2e2 libcc1: use std::vector when building function types
ee75ca6b72e4235aa48d6fb30c5cd274f2ff6b67 libcc1: fix a memory leak
ec80b416554d3f41b5fd23cc86287af9b9a7d2d2 [Ada] Implement tiered support for floating-point output operations
67207bd6e6c9b0bfc63bd6fd0a4e1056610c00fd [Ada] Fix s-os_lib.adb so vectorizing compilation works
e1fcf14f33e4f371aae8ae497ca58a760d53ca6d RISC-V: Generate helpers for cbranch4.
952da35cc67000445ca18d3ee8213d7c71a4b3a4 [Ada] Remove hardcoded pragma Warnings from the formal vectors library
1e27ffde96b3967a3abfb4218a20e8ce75b04003 testsuite: Add vect_floatint_cvt to gcc.dg/vect/pr56541.c
e2bc5b6c04df820017c497a2578bd3c4c7b6c89b Do not apply scalar storage order to pointer fields
14b0f37a644d7b59e1737fb275ec4fff044972a8 Clean up and virtualize the on-entry cache interface.
79a27f32df8eab0add722f75332f78fe20d94da3 arc: Improve vector support for ARCv2.
cce4471bb45f72820eb6c15b4a75e67f704b209e testsuite/100452 - fix g++.dg/vect/slp-pr99971.cc
7a4e52e44a8c9e6c59060adc691de5144d3c6940 libstdc++: Remove redundant -std=gnu++17 option from PMR tests
7c85abec763095045ba3f78c6656117dd8f1fd01 libstdc++: Remove redundant -std=gnu++17 option from containers tests
096f8215d2172ca4177cb26035e748d8f182fc8f vect: Add costing_for_scalar parameter to init_cost hook
900b1c27b963c8244c7547943d4a8d03dfacc6f4 Remove BRIG front-end.
010d4a5047166037b316ed22331f3d99742f1f1d c++: ICE casting class to vector [PR100517]
19040050aa2c8ee890fc58dda48639fc91bf0af0 expand: Don't reuse DEBUG_EXPRs with vector type if they have different modes [PR100508]
227a2ecf663d69972b851f51f1934d18927b62cd lto-wrapper: Use vec<cl_decoded_option> data type.
94de7e225c1fda079052c3f0725c926437d56c94 Optimize __builtin_shuffle when it's used to zero the upper bits of the dest. [PR target/94680]
149061188c7c6ddf27663c8c00b7574fc8d0fd23 c++: Check attributes on friend declarations [PR99032]
45063c0506a00f2673049d46f12a6061dca4692f Fix ICE [PR target/100549]
e0a5daf81f2c79a0275eccd7c1a25349990a7a4d middle-end/100582 - fix array_at_struct_end_p for vector indexing
4054472b3fa15e11ccd48190f5e3ecfc89d65af9 c/100547 - reject overly large vector_size attributes
c0129e2d489cc0ab419c58c4f8451898c2b5e3ae Use startswith in targets.
03eb779141a29f96600cd46904b88a33c4b49a66 Add 'dg-note', 'dg-lto-note'
8d51039cb7c807ed84ff7df5416a1e3ba07a5e63 middle-end/100672 - fix bogus right shift folding
1e6648076498a4644aabbfe3ec74b3b2a5b67772 RISC-V: Properly parse the letter 'p' in '-march'.
9c5bd1e9811babe255ddbbdcda1d00ea5997b826 vect: Replace hardcoded inner loop cost factor
29a2f51806c5b30e17a8d0e9ba7915a3c53c34ff openacc: Add support for gang local storage allocation in shared memory [PR90115]
11b8286a83289f5b54e813f14ff56d730c3f3185 [OpenACC privatization] Largely extend diagnostics and corresponding testsuite coverage [PR90115]
3b0a7d624e64eeb81e4d5e8c62c46d86ef521857 RISC-V: Pass -mno-relax to assembler
1fd76b24306ed4df4cf9e797d900699ed59ce7f7 Optimize x < 0 ? ~y : y to (x >> 31) ^ y in match.pd
45f4e2b01b82c72b3a11ff4ad184d7edcf0e63d4 Convert remaining passes to get_range_query.
4a9f2306cb39a3cf265eeb6f8f3a8bbaf230c4c8 forwprop: Enhance vec perm fed by CTOR and CTOR/CST [PR99398]
f7a07f5a5d8065e7f11133dd1f4ad3510ab2195b tree-optimization/100778 - avoid cross-BB vectorization of trapping op
ef8176e0fac935c095cc39f4ecdfd43cdb8cb3f3 c++/88601 - [C/C++] __builtin_shufflevector support
ac0bc21bd634a334ba8f323c39a11f01dfdc2aae c++: value-init vs zero-init in expand_aggr_init_1 [PR65816]
088264ea445efcee5f8f06150b5f9f508f21960b icf: Fix memory leak of a vector.
c3ab6266bc52c6d42bd1de015397b272515cf40c testsuite: Add -Wno-psabi -w to g++.dg/ext/builtin-shufflevector-1.C
7ed1cd9665d8ca0fa07b2483e604c25e704584af vect: Use main loop's thresholds and VF to narrow upper_bound of epilogue
3c70b3ca1ef58f302bf8c16d9e7c7bb8626408bf RISC-V: Enable riscv attributes by default for all riscv targets.
e1521b170b44be5cd5d36a98b6b760457b68f566 fold-const: Fix up fold_read_from_vector [PR100887]
4db34072d5336d13b66f7185ec6454aa7d36f3c7 predcom: Enabled by loop vect at O2 [PR100794]
ffe3a37f54ab866d85bdde48c2a32be5e09d8515 middle-end/100951 - make sure to generate VECTOR_CST in lowering
e64d62c7008e6a4b0227fd25e071db8f0b3f1820 [nvptx] Update comment in 'libgomp.oacc-c-c++-common/parallel-dims.c'
4bd2cdb74e26f68a4e9d51e74ace60326c9950d1 Make SLP root stmt a vector
7a56d3d3e99cc77ad8a6a674870c814da6225675 tree-optimization/100923 - fix alias-ref construction wrt availability
87f9ac937d6cfd81cbbe0a43518ba10781888d7c Virtualize fur_source and turn it into a proper API.
12913c7125f15d4385c28860126b33834b6dd267 Simplify vect_is_simple_use
ce670e4faafb296d1f1a7828d20f8c8ba4686797 tree-optimization/97832 - handle associatable chains in SLP discovery
374f93da97fb0378453d503f3cfea4d7a923a89c tree-optimization/100981 - fix SLP patterns involving reductions
cce1697e6fe0134616ebc8f7040d99e66c12241a tree-optimization/101003 - use pattern defs when linearizing
cbf6dcaac040b7a572b8287453101489637c626b testsuite: Change gcc.dg/vect/pr56541.c target.
e9d322ced1433da8e7c69243cfa941ea462d6290 Use stablesort for sorting association chain
336c41dbcb21740f8964021e157bc69ca547059b middle-end/101009 - fix distance vector recording
4bdcdd8fa8d7659e5a19a930cf2f0332127f8a46 simplify-rtx: Fix up simplify_logical_relational_operation for vector IOR [PR101008]
fbd8a8041292f2ec2c22be43c8d3e74b37b2bc88 tree-optimization/101026 - fix SLP re-association
b9ec5ebb605936684e95b8dcc12e43ba7d8f2cb4 tree-optimization/101028 - fix endless SLP reassoc discovery
2c4115ba9c031fbb6c3fe5605031303579421788 Fix effective target for check-builtin-vec_rlnm-runnable.c test
d64584d2fbe79b34e7176681a9d9f85851628ce8 testsuite: fix AIX testsuite failures
3f207ab314c071c6060c7c9a429fcf29fd87b594 use range based for loops to iterate over vec<>
008153c8435ca3bf587e11654c31f05c0f99b43a expr: Fix up VEC_PACK_TRUNC_EXPR expansion [PR101046]
913b13fcb1dceea0e57a04cb77b11097b132cbf6 Fix for vcmpequt builtin
4e56b1347687a33efa47d13d357ae3b7ab759c99 tree-optimization/101083 - fix ICE with SLP reassoc
e9681f5725f54a58098678cdea19d1e90d9a36e3 auto_vec copy/move improvements
265af872a1f8d7ffda2c4056d1d80a3ec4fc8650 return auto_vec from cgraph_node::collect_callers
a165040e11e340f6b397104f23717ef398408e67 return auto_vec from get_loop_hot_path
4541b5ec16178a1954066c54cd9220b7c8f74309 make get_domminated_by_region return a auto_vec
53c55d3204a69c4cce4cc5a982c42cec91178346 return auto_vec from more dominance functions
967b46530234b4e6ad3983057705aea6c20a03c4 Add a target calls hook: TARGET_PUSH_ARGUMENT
17a4bee01c3b29c5ccdd39f34384521e5d44135b tree-optimization/101112 - fix pattern stmt def lookup in SLP reassoc
90f78d5d86598f8cadacfb20d8d98c122a466599 tree-optimization/101121 - avoid infinite SLP build
e08a125b208e717f99caa991052537305ca75b6a Add vect_recog_popcount_pattern to handle mismatch between the vectorized popcount IFN and scalar popcount builtin.
26f05f5a823030ebb52b107a8c303d07f77fe317 tree-optimization/101154 - fix out-of bound access in SLP
a5b773d3f86dd4333696cab0fe3a6953d3db74a3 tree-optimization/101159 - fix missing NULL check in popcount pattern
7a22d8a764418265680a6bb9a9aec31e984eb015 tree-optimization/101158 - adjust SLP call matching sequence
7822285515cd4dab86f722a9f4969b6952904a37 RISC-V: Add tune info for T-HEAD C906.
3adb9ac6626c15ba21e4eaf27fec95688a3ca8c2 testsuite: Add testcase for recently fixed PR [PR101159]
ca4d381662c37733b2a1d49d6c8f5fcfc1348f3d Adjust on_entry cache to indicate if the value was set properly.
b7574ca6edb5ac7fab741f46d4f50ac4294c8180 Do not enable pcrel-opt by default
50374fdacbd121bc4a61b073e559208ff61bee06 tree-optimization/101105 - fix runtime alias test optimization
7dcf139a2b8e1c53096ee2593cfdd706d5d358a8 refactor SLP permute propagation
82ab14927651e0eaf0f6d6964396048bb5471f23 Fix SLP permute propagation error
0237aa8c706f09bb2568224afcdac40b5e47c3e1 libstdc++: Improve copysign(simd) codegen
05516402f8eb8ec282a13fa1e38d9f9c5b3dd3e5 Fixup reduction info on addsub SLP pattern
55a1546b73b60d2601f35671ba9e8f12a52a7b77 tree-optimization/101202 - fix ICE with failed backedge SLP nodes
99585d88a090b4c5b7791f7ab62f70eb37b748fa jit: fix test-vector-* failures
28560c6d4043d8f6ac570f35fb84e952e9c719fe Fold blendv builtins into gimple.
2ad71efb5de9e929ffd2b8ce0a37c3c34021c0f1 tree-optimization/101207 - fix BB reduc permute elide with life stmts
f80c4eaca0805bc9e68ed944519519c3dd1c12e1 tree-optimization/101229 - fix vectorizer SLP hybrid detection with PHIs
d5e69948beb61fb320d9ca703faff84d6f608545 fortran: Add support for per-location warning groups.
c01760bc548ba79bc9ac15168b27fe7aabcb19ae tree-optimization/101242 - fix reverse graph entry detection
2dfc0f2203e875621f4aeb2e2496aaeb9a2dc05b Refactor SLP permute opt propagation
6df6055d5c666e669890ff8572df2353e341a534 Add forward propagation to SLP "any" permutes
39da8a7ba9a3a643e6318a5534d5d7c85a3bedfa tree-optimization/101264 - rework SLP "any" permute forward prop
a075350ee7bffa6c90d9d233de78515f498b5149 tree-optimization/101267 - fix SLP vect with masked operations
7d8211603a3d04384812b481b0ae01205a287a72 tree-optimization/101178 - handle VEC_PERM in SLP permute propagation
a3aaba68405751bae3f630669515b7ecdf77efa6 tree-optimization/100778 - fix placement of trapping vectorized ops
a86b3453fc6e29cf0e19916b01c393652d838d56 Change the type of predicates to bool.
52c3fdf3e4780f75297515d3c2a3dae9b36586ba Don't use vec_duplicate on vector in CTOR expansion
ccb4e0774b3e5859ea1d7f1864b02fa5826c4a79 testsuite/101299 - add missing vect_double requires to bb-slp-74.c
38872c6c0db1b10b17d3913b277c499913208d0b middle-end/101291 - set loop copy of versioned loop
88ada5c051c49a1f03602df747a9e6dae675c68e Do not set both LOOP_C_INFINITE and LOOP_C_FINITE on vectorized loop
7d810646d421f6975300c0d06f4e9af27a48f26d Add FMADDSUB and FMSUBADD SLP vectorization patterns and optabs
98bfd845e93937d92ca844d7fa7e853ad51c6193 Add avx512 tests for MADDSUB and FMSUBADD SLP vectorization patterns.
005f31a0370cf35e332db9415a0ff538320bcddc tree-optimization/34195 - testcase for fixed vectorization
2e9ef3929b0305235b968c431c8d7fec92885101 vect: Remove always-true condition
82625a42e652d52fc6bbe6070f8d0589d5e0c8ad mips: check MSA support for vector modes [PR100760,PR100761,PR100762]
175c2f98ea85004f23acc4b40f0e4264420116fc [Ada] Declare time_t uniformly based on a system parameter
c03cae4e066066278c8435c409829a9bf851e49f Display the number of components BB vectorized
47113773456ade7324c5467511d97f36cced57b4 produce simple DOT graphs from SLP trees
063eba7ca73030139a3bf822ed127cf09b2fc226 Deal with prefixed loads/stores in tests, PR testsuite/100166
f546e2b6cc5c610ae18aac274d0d6493f2da3801 Revert "Display the number of components BB vectorized"
18a463bb666cc8f3421589e7641ec617acb84741 docs: Add 'S' to Machine Constraints for RISC-V
0ae469e8c0ccb93a26bb1e60db6418d6bcced15e ifcvt: Improve tests for predicated operations
3658ee4c73955ebf281842d2e637ca556fa8bbfd vect: Simplify epilogue reduction code
b68eb70bd6df8c4b846bddb4f0aeae9054b932bc vect: Create array_slice of live-out stmts
81ad6bfc078ca36a42446e2f2295102ffaac9ee1 vect: Remove new_phis from vect_create_epilog_for_reduction
32b8edd5297c9193b81122fdd55316fcbf0959dc vect: Ensure reduc_inputs always have vectype
d592920c89973acd8d9f5b1f6b0526036ce63ccb vect: Add a vect_phi_initial_value helper function
826c452e571884fcabbc73863eef5120e683d034 vect: Pass reduc_info to get_initial_defs_for_reduction
bd5a69191f023b9bc2a1f83c5f7d5e591c333b9a vect: Pass reduc_info to get_initial_def_for_reduction
221bdb333b0917c927aec4d367a72e3667087d7a vect: Generalise neutral_op_for_slp_reduction
7670b6633e51afbbc4b3c8a5775accf7f2d887af vect: Simplify get_initial_def_for_reduction
1583b8bff0be7e41aa721dde79f90ca0763bd4e2 vect: Reuse reduction accumulators between loops
8695bf78dad1a42636775843ca832a2f4dba4da3 gcc: Add vec_select -> subreg RTL simplification
1dd3f21095858fbfd3e28a149578d5fb67e75f95 Support reduction def re-use for epilogue with different vector size
a967a3efd39280fe3f5774e45490e991f8e99059 tree-optimization/101445 - fix negative stride SLP vect with gaps
ab0a6b213abf6843b59cdea6399030e828109551 Vect: Add support for dot-product where the sign for the multiplicant changes.
1e0ab1c4ba6159ad7ce71c6cddd5e04d2a636742 middle-end: Add tests middle end generic tests for sign differing dotproduct.
4940166a15193d6583b320f2957af8720745b76c Vect: correct rebase issue
92acae5047e4b8c5be035f067099942a93e55d0c Streamline vect_gen_while
b25edf6e6feeadc6a5aa337b8c725786227162dd testsuite: Fix testisms in scalar tests PR101457
f0500db3692276f60e0562c17c87a0cb03e34398 Detect buffer overflow by aggregate and vector stores [PR97027].
d6aa28bb93c6fc9042ee87ff7addac60647dbddb tree-optimization/101462 - fix signedness of reused reduction vector
df0d7486ec9bca8a77ca106d9fbb60f819dd9cec tree-optimization/101467 - fix make_temp_ssa_name usage
650c70a9fe7198394d3bbe4c0b1a7a73dc0bdd4a Remove more gimple_expr_type uses
3bf6e1f89dbd2c67c419d3d4e94085208611262f testsuite: fix IL32 issues with usdot tests.
3ce20b6be543824a07c3367253188d754b58667e Remove last gimple_expr_type uses
8df3ee8f7d85d0708f3c3ca96b55c9230c2ae9f0 tree-optimization/101505 - properly determine stmt precision for PHIs
a1d27560770818c514ad1ad6683f89e1e1bcd0ec vect: Recog mul_highpart pattern [PR100696]
e695f0101a8cacbc29353c5a000731e50b2627e6 RISC-V: Detect python and pick best one for calling multilib-generator
7fcb33455c9dc9359d98cd6bffe7f32f282ed713 PR 100167: Fix vector long long multiply/divide tests on power10.
00dcc88a0ed7bd148ea86d900b6c93574a2e1f26 Adjust by-value function vec arguments to by-reference.
957952ce64e067c56e58df5ee36bbb004eecffa1 unroll: Run VN on unrolled-and-jammed loops
e0335bb7d1fc7dd05e91bcdd1f65b2bcf8ec1a09 Revert "RISC-V: Detect python and pick best one for calling multilib-generator"
a6291d88d5b6c17d41950e21d7d452f7f0f73020 Remove pass_cpb which is related to enable avx512 embedded broadcast from constant pool.
8819419ba1d397c0444d89079ec16657a09914fb Fix PR 10153: tail recusion for vector types.
c8ce54c6e67295b70052d1b9f9a2f7ce9e2f8f0d tree-optimization/39821 - fix cost classification for widening arith
16158c96496b537194111526d25e19f268d613b6 libstdc++: Remove unnecessary uses of <utility>
872da9a6f664a06d73c987aa0cb2e5b830158a10 Add the member integer_to_sse to processor_cost as a cost simulation for movd/pinsrd. It will be used to calculate the cost of vec_construct.
89b3c97eed75c1e7c492bc727e0016003c5809cc vect: Fix wrong check in vect_recog_mulhs_pattern [PR101596]
6bb6e2044ced33d08175361b8e39a9c5d4a868a6 tree-optimization/101615 - SLP permute opt of existing vectors
3c91efec15af4f922a9af495e178bbb66d2e9d1f tree-optimization/101615 - SLP permute opt with CTOR roots
841548f0f7d375c5b7022e19d588061cda3acfa6 Adjust docu of TARGET_VECTORIZE_VEC_PERM_CONST
2e96b5f14e4025691b57d2301d71aa6092ed44bc Backwards jump threader rewrite with ranger.
0829ab79d37be6c59072af0c4f54043f7e9d23ea [OpenACC] Extract 'pass_oacc_loop_designation' out of 'pass_oacc_device_lower'
e41ba804ba5f5ca433e09238d561b1b4c8b10985 Use range-based for loops for traversing loops
e5e164effa30fd2b5c5bc3e6883d63889e96d8da Add QI vector mode support to by-pieces for memset
724adffe65e1268e8b3f2ab538660020f7572114 Support cond_add/sub/mul/div for vector float/double.
d0b952edd3f5753332ea234ef261711a81e87229 Add cond_add/sub/mul for vector integer modes.
e9f64fff64d83f5fcaa9ff17f1688490f75bdcb7 libstdc++: Reduce header dependencies in <regex>
2fc2e3917f9c8fd94f5d101477971d16c483ef88 Support cond_{fma,fms,fnma,fnms} for vector float/double under AVX512.
87a0b607e40f8122c7fc45d496ef48799fe11550 tree-optimization/101756 - avoid vectorizing boolean MAX reductions
2724d1bba6b36451404811fba3244f8897717ef3 Rewrite more vector loads to scalar loads
240b01b0215f9e46ecf04267c8a3faeb19d4fe3c libstdc++: Add [[nodiscard]] to iterators and related utilities
0d04fe49239d91787850036599164788f1c87785 libstdc++: Add [[nodiscard]] to sequence containers
31855ba6b16cd138d7484076a08cd40d609654b8 Add emulated gather capability to the vectorizer
9fcb8ec60302f5f110f94a885b618993c28d18d3 [testsuite] Fix trapping access in test PR101750
315a1c3756cbc751c4af0ce0da2157a88d7c3b09 vect: Tweak dump messages for vector mode choice
5a1017dc305c49c59129d45536630d02dbc01c45 vect: Tweak comparisons with existing epilogue loops
9a8c3fc2b2cc6d73b2e3006625fca2b588ebc1b0 Support cond_{smax,smin,umax,umin} for vector integer modes under AVX512.
f7aa81892eb54bc040ee6f7fd6134d800a5ee89c Support cond_{smax,smin} for vector float/double modes under AVX512.
c16f21c7cf97ce48967e42d3b5d22ea169a9c2c8 Support cond_{xor,ior,and} for vector integer mode under AVX512.
4e3129b0caceec008a940aa5eada253cd0f0b3ec Fix oversight in handling of reverse SSO in SRA pass
f0fc1e66238e2e9fe0cbc6e5b77fd163bf887b2c Adjust gcc.dg/vect/bb-slp-pr101756.c
a3d3e8c362c2d850543eb2e2631128e1efc368f0 Adjust by-value function vec arguments to by-reference.
f31da42e047e8018ca6ad9809273bc7efb6ffcaf tree-optimization/101801 - remove vect_worthwhile_without_simd_p
f5a2d78072fc161e8ca3117126030041f1503c3f libstdc++: Reduce use of debug containers in <regex>
813ccbe9d272cd67a8f075beea280de95f807492 Support cond_ashr/lshr/ashl for vector integer modes under AVX512.
19d1a529fa9f78e7ec7be38d423c90e00cec8f8c tree-optimization/101801 - rework generic vector vectorization more
08aa0e3d4f781fd6a6e293bb06d280365a0bdc1d tree-optimization/101809 - support emulated gather for double[int]
f19c70afa4aa2416c581484a6eb51c0ac46acd08 tree-optimization/101861 - fix gather use for non-gather refs
01f8a8b48e50cbaa68b878d9f8a330b8c0736bed openmp: Diagnose syntax mismatches between declare target and end declare target
fdd40498d1981fde0720a0886d6f59ea5fb7ab40 RISC-V: Allow multi-lib build with different code model
faf2b6bc527dff31725dde5538ffff1c92688047 Optimize __builtin_shuffle_vector.
2e0d7f16da0897fb2eb83f5c1ffe67f0ad747e92 vect: Add extraction cost for slp reduc
174f9257a75dec93221eca26c236e0a6346c9dfd libstdc++: Optimize std::seed_seq construction
e7e17be3be3d43640a9a4a33d59315dec69fdda4 Fall back to masked_gather_load/masked_scatter_store
c883d1dcdea8820015ee7ffdc68c03cf3b8180bf libstdc++: Fix vector<bool> printer tests to work in debug mode
085c2f8f0e13d7c1515ce86755a52a31faf0cf47 libstdc++: Fix CTAD for debug sequence containers
976401aa4781fa5850e1f34142bc13d1cfe0b2bd Fold more constants during veclower pass.
37744f8260857005c8409c9e2e633a05c768a7dd Refactor BB splitting of DRs for SLP group analysis
7cad8a8f9f7bfa8e98f6a0615541f589fd1d3fc1 configure: drop version checks for in-tree gas [PR91602]
b320edc0c29c838b0090c3c9be14187d132f73f2 bswap: Recognize (int) __builtin_bswap64 (arg) idioms or __builtin_bswap?? (arg) & mask [PR86723]
12dc8ab983db039a570e3798b468498e2230c7d9 Fix scalar costing issue introduced by PR84512 fix.
819b7c3a339e3bdaf85cd55954c5536bd98aae09 Disable slp in loop vectorizer when cost model is very-cheap.
f8977166135de09fe36a3b57cc11daa67587604e Tweak -Os costs for scalar-to-vector pass.
8571ff0ae0922bee292161c7fd61dd127d26a4ed Adjust inner loop cost scaling
9216ee6d1195d48388f825cf1b072e570129cbbe tree-optimization/100089 - avoid leaving scalar if-converted code around
3673dcf6d6baeb67bb70ff03d4cb3f92beed0075 Analyze niter for until-wrap condition [PR101145]
29c77454e5ab33ce06a741eacdfbd5348fbccc95 tree-optimization/102046 - fix SLP build from scalars with patterns
ead408529d7a69873a7c14dd12fa043cd5862253 libstdc++: Fix conditions for optimizing uninitialized algos [PR102064]
94a047359f84c7ea5ade378028852b19529a7495 Fix float128-call.c test for power8 IEEE 128 and power10.
ac6d5c9112bb78e47398e040c553ad216edf3ebb Reduce vector comparison of uniform vectors to a scalar comparison
10c834f976c349970ee4b8eb3b4fce140972f256 Update comments in float128-call.c test.
89f33f44addbf9853bc3e6677db1fa941713cb6c tree-optimization/102128 - rework if-converted BB vect heuristic
67927342290c61d7e054430f1d7a7281f1f97fae tree-optimization/102142 - fix typo in loop BB reduc cost adjustment
eca730231d5493647bb1e508fb1f853ffee0e95a testsuite: Fix gcc.dg/vect/pr101145* tests [PR101145]
153766ec8351d55cfe8bd6d69bdfc0c2cef71e56 tree-optimization/102139 - fix SLP DR base alignment
bea07159d1d4c9a61c8f7097e9f88c2b206b1b2f vectorizer: Fix up vectorization using WIDEN_MINUS_EXPR [PR102124]
165446a1e81f5bb9597289e783af9ee67e1fe5ba Call reduce_vector_comparison_to_scalar_comparison earlier
e902136b310ee17d4b49eb42d9d5e487d5dcf4a1 c++, abi: Set DECL_FIELD_CXX_ZERO_WIDTH_BIT_FIELD on C++ zero width bitfields [PR102024]
6b69bf5729852d0510abbe8e04078ddecef0cf17 Fix target/102173 ICE after error recovery
a3fb781d4b341c0d50ef1b92cd3e8734e673ef18 tree-optimization/102176 - locally compute participating SLP stmts
843068149ec8fcaaaec12751f5b70221a1153857 tree-optimization/102226 - fix epilogue vector re-use
60eec23b5eda0f350e572586eee738eab0804a74 Optimize vec_extract for 256/512-bit vector when index exceeds the lower 128 bits.
fad540552ffa23dae2874aaf93916175d2577b8e Strengthen compatibility warning for GCC builtins
26864014bba4ccd33cddbf7d9cd81fe9685e7f7c Fix internal error on broken import of vector intrinsics
b9c35857d00c66158fcdf7de8adae4f06023052e Fix inaccurate bounds in debug info for vector array types
b6d8fa66e1bf08756cb4134735b5034e171f49d1 tree-optimization/102318 - reduction epilogue re-use
feebc22ba934f154aad6d8cad6cce0adf1d4610e Maintain (mis-)alignment info in the first element of a group
7fc4d6000a0d6c847c4c07373fbd4a17e54c678f Optimize for V{8,16,32}HFmode vec_set/extract/init.
4703182a06b831a9f47a5f8198e86042cadd938d Revert no longer needed fix for PR95539
e666a0a22a5c11b5bb894a75b73b6b7f3e364e4d Fix ICE in pass_rpad.
f92901a508305f291fcf2acae0825379477724de tree-optimization/65206 - dependence analysis on mixed pointer/array
24f99147b9264f8f7d9cfb2fa6bd431edfa252d2 Avoid premature alignment setting in vect_duplicate_ssa_name_ptr_info
47ee6e6fb99889325835eab87c995db23647c77b Use the proper vectype
56c24f18cce0da6405c5071b838844447fa81ac8 C++: add type checking for static local vector variable in template
55b989de7679a486ad674fb154408de26ac96467 tree-optimization/102421 - copy alignment info when splitting groups
4c0c43623efe2900dd0feb3abf8b611023362c43 Overhaul jump thread state in forward threader.
c0cc62b32d95caca25a8854e0d2b6f11f5674d30 tree-optimization/102448 - clear copied alignment info from vect
4a960d548b7d7d942f316c5295f6d849b74214f5 Avoid invalid loop transformations in jump threading registry.
51ca05031959d3accffe873e87d4bc4fbd22e9e9 Make profitability calculation of RA conflict presentations independent of host compiler type sizes. [PR102147]
9cfb95f9b92326e86e99b50350ebf04fa9cd2477 Relax condition of (vec_concat:M(vec_select op0 idx0)(vec_select op0 idx1)) to allow different modes between op0 and M, but have same inner mode.
6fabd9e25d1438b506c0c3979330cfd3034af317 Fix gcc.dg/vect/bb-slp-pr65935.c FAIL with AVX after recent change
99c106e695bd8f1de580c4ff0b1d3fe59c9a4f1e reassoc: Do not bias loop-carried PHIs early
b701f46ea6d651aff8dbd267c29213253045e2b6 libstdc++: Skip tests that fail with _GLIBCXX_CONCEPT_CHECKS
68c081bb437d7383481bb75e1f79975f63dc7661 RISC-V: Pattern name fix mul*3_highpart -> smul*3_highpart.
c6dbe7a56dfb511101ddea98844a7be0027d30a6 Fix some testcases after my computed goto patch
4c7731081647c22cbd249dc0faa20c3df9ed6411 Fix peeling for alignment with negative step
c2dc29c4a54b8d80c4fbd753d65b75f4313ffec3 Fix thinko in previous alignment peeling change
09f032c22053f178c802d83a1dea49a0d47c7cc4 Refine alingment peeling fix
d0abfa815a54f895d782a62d99160f5a349f68c7 Fix bb-slp-pr97709.c after computed goto change
c67339d12653c33f85f8141789d7a7cf38831cbd libstdc++: Fix _ForwardIteratorConcept for __gnu_debug::vector<bool>
681707ec28d56494fa61a80c62500724d55f8586 libstdc++: Do not allocate a zero-size vector<bool> [PR 100153]
fb4d55ef61ca3191ec946d4d41e0e715f4cc4197 libstdc++: Simplify __normal_iterator converting constructor
acf3a21cbc26b39b73c0006300f35ff017ddd6cb libstdc++: Reduce header dependencies for C++20 std::erase [PR92546]
ad4a3c047f67d628b607bb6cf4791005affd1d83 middle-end/102587 - avoid auto-init for VLA vectors
22d34a2a50651d01669b6fbcdb9677c18d2197c5 libstdc++: Implement P1518R2 for container deduction guides
604459a09585314841cdce4698893c656481691b More .DEFERRED_INIT expansion rework
561078480ffb5adb68577276c6b23e4ee7b39272 libstdc++: Avoid debug checks in uniform container erasure functions
2b8453c401b699ed93c085d0413ab4b5030bcdb8 Enable auto-vectorization at O2 with very-cheap cost model.
82e3a826871effc7093852a9181f641c693ae94f libstdc++: Restore debug checks in uniform container erasure functions
00f34291175981393b2a9802ada879e72335dcd0 Come up with OPTION_SET_P macro.
b4e81f6dd48732ace73eebf1d2f46ca1d2533b79 Adjust more testcases for O2 vectorization enabling.
882d806c1a8f9d2d2ade1133de88d63e5d4fe40c tree-optimization: [PR102622]: wrong code due to signed one bit integer and "a?-1:0"
6d97315a4e1acb992580e84065c66d09d1342a77 Adjust testcase for O2 vectorization enabling.
84088dc4bb6a546c896a068dc201463493babf43 libstdc++: Fix std::match_results::end() for failed matches [PR102667]
d61ce6ab04ee98f1f64b54436bca96054cc62329 Adjust testcase for O2 vectorization enabling
fab2f61dc1b195fec9161be15635b87d312e4626 vectorizer: Fix up -fsimd-cost-model= handling
9f12a45ef147e563f099c24c293830727e8204cc tree-optimization/102572 - fix gathers with invariant mask
d1dcaa31453fa080a27938b064e53f02272d4aa1 tree-optimization/102696 - fix SLP discovery for failed BIT_FIELD_REF
3c0194d7ff21d61c02f3c6b111c83ef24a69e1f0 tree-optimization/102659 - avoid undefined overflow after if-conversion
f874a13ca3870a56036a90758b0d41c8c217f4f7 libstdc++: Fix regression in memory use when constructing paths
bd440a8c1c50b20b6eac028bca1fc682159787ba Adjust testcase for O2 vectorization[Wuninitialized]
9b2ad21ab3ebc21a3408108327fa1a7cbedaf217 tree-optimization/102659 - really avoid undef overflow in if-conversion
ebdf180e15d0ae18bfcb2bd822d7f096743cd4fb Fix predcom-3.c on arc-elf after vectorizer changes
8ececf9b8c5a2bf2f231db0c3bcf2be927990e7c Fix mips testsuite fallout from vectorizer changes
730f52e05a1fb5c8cd92e352e9b191a6332be5c2 Allow early sets of SSE hard registers from standard_sse_constant_p.
a5b1b2a186d94b31a522395e9d02c9cec1b928cb tree-optimization/102798 - avoid copying PTA info to old SSA names
eb032893675afea4b01cc6ad06a3e0dcfe9b51cd tree-optimization/102788 - avoid spurious bool pattern fails
247c407c83f0015f4b92d5f71e45b63192f6757e Try placing RTL folded constants in the constant pool.
b0ea7a8409aa4afd0b0fd874b232766a758c0bc6 Remove redundant alignment scheme recomputation
c9ff4581841f079e00d37fa7743021c62c935315 Reduce the number of aligned_access_p calls
1257aad1073e1fb8989acdf7ca832fba82d10534 Apply TLC to vect_supportable_dr_alignment
caab0139761b04226fab14d87c4a4f981d942bbf Remove check_aligned parameter from vect_supportable_dr_alignment
d19d90289d1343e4fb0550eb1151db6da8a0d1ce Add misalignment output parameter to get_load_store_type
d996799a507f9f4c379b55b004233be92fa63380 tree-optimization/102827 - avoid stmts in preheader
476ca5ade8522d566ffffeab0bece6a64aefeecd Compute negative offset in get_load_store_type
793d2549b173a0a2da6dd20ffc27acb9fd2de73e Refactor load/store costing
93bd0213885739a1073f8c98911f8a00c0eb5597 Refactor vect_supportable_dr_alignment
3c8d8c0be95e99dc0cba7f6fad2429243582119f Adjust testcase for O2 vectorization.
d8edfadfc7a9795b65177a50ce44fd348858e844 Disallow loop rotation and loop header crossing in jump threaders.
c7abdf46fb7ac9a0c37f120feff3fcc3a752584f openmp: Fix up struct gomp_work_share handling [PR102838]
d438dd2523a35e073eed04d146f1e73e2514d93d testsuite/102861 - adjust gcc.dg/vect/bb-slp-16.c change
f5ef4da3ccdfbedb44cb21205527cfdbbec95cbd Remove restriction of SLP vectorizing internal function calls
7878981f1d44b4c9bb6c4a3137b37f06c725b73d tree-optimization/102847 - properly cost VMAT_INVARIANT loads
8516963942b0a8f06fa8f5ebd7c37f9edea151ac tree-optimization/102847 - adjust VMAT_INVARIANT load costing
2606dfea12dbe9692c9d576155e63bf3acebd1bf Adjust testcase for 128/256 bit HF vector load/store
149e217033f01410a9783c5cb2d020cf8334ae4c RISC-V: Minimal support of bitmanip extension
283b1707f2373794c9ff724f01429586359f0b71 RISC-V: Implement instruction patterns for ZBA extension.
04a9b554ba1a71baae6f985905d92fe693acb437 RISC-V: Cost model for zba extension.
e596a283e54bdb0b4a0cebc128f9d9ac268e3916 RISC-V: Implement instruction patterns for ZBB extension.
3329d892eb603fbe4e7c393f19d35739fe400a22 RISC-V: Cost model for zbb extension.
26d2818bb73a09622f87df53d6280d18b229bcbc RISC-V: Use li and rori to load constants.
4e1e0d79ecbe8727cb69d4cd97b20c71caaefafc RISC-V: Implement instruction patterns for ZBS extension.
77b84fb0a8eac736f456e42b6a7801a76e4644eb RISC-V: Cost model for ZBS extension.
0b028fb4989c2bdfaf474b4493c5926fb40da3c3 tree-optimization/102905 - restore re-align load for alignment peeling
f3dbd3f36d55178d0a9e4431043cbc950524969a vect: Don't update inits for simd_lane_access DRs [PR102789]
ccbd6c37c4f6e12a3fbb22314a09db897a0aa8b9 Turn vect_create_addr_base_for_vector_ref offset into a byte offset
94f28340513753ba94ab483e93ce1d096842a5ad Move negative stride bias out of dr_misalignment
6adfdff68b1fef146b97c39d4b9d8db59d498837 Unify offset and byte_offset for vect_create_addr_base_for_vector_ref
4f1fe0dc25391a1d73c1034a85b3b6bf04c5e26e testsuite: Fix up gcc.dg/pr102897.c testcase [PR102897]
b528e226d19335796c355d202c8e8686506680cd Refactor try_vectorize_loop_1
d1e2e4f9ce4df50564f1244dcea9befc3066faa8 ipa-cp: Fix updating of profile counts and self-gen value evaluation
ab1008255e37b5b51a433ed69e04c06300543799 ipa-cp: Select saner profile count to base heuristics on
e399cde6f9c89cafbbf6c3274c0af3c369d4f872 RISC-V: Handle zi* extension correctly for arch-canonicalize script
2dc835cd0b5183a0e30b2b052362ad05f5c082b0 RISC-V: Fix wrong predicator for zero_extendsidi2_internal pattern
eed248bb8cc3091e8a9b2f73138c691396752438 tree-optimization/102949 - fix base object alignment
84bcefd5555af6d95e08cd980965098961289215 Enable vectorization for _Float16 floor/ceil/trunc/nearbyint/rint operations.
518bc4ef87eaf9dde8fbc83120a24ac0888c56e0 testsuite: Don't expect a complex FMA
8a260d652c421e212818efc3c0f487cf9cdbcc2c testsuite: fix failing complex add testcases PR103000
68b48f3f4c49132cc6bfb16e65f8b6fd939689c7 middle-end: Teach CSE to be able to do vector extracts.
2e560abff4294639a0fcf666994c30fb2f00a324 Adjust testcase for O2 vect.
f81970b5f386630b98a33373c23dcc9234c6a980 Add TSVC tests.
6cc8aa65fdeaefe9774d5e0d4e72c91f52313be1 middle-end: Fix PR103007, add missing check on complex fms detection.
c33a5cc9e7f1475108892abb147f9382ecbaec12 RISC-V: Fix build errors with shNadd/shNadd.uw patterns in zba cost model
164bbf701ff10ff44e272525e8f462ed3ff1cf43 tree-optimization/103029 - ensure vect loop versioning constraint on PHIs
a31056e9196daf0a5b0e92d171b5227cc994103b RISC-V: Fix register class subset checks for CLASS_MAX_NREGS
bc9c8e5f8af08c513a4a4c329c50ba6559ff6d5c Extend vternlog define_insn_and_split to memory_operand to enable more optimziation.
95318d469f4d293446b4fd38d527fd5d64ce0b70 Fix RTL frontend handling of const_vectors
518f865f4babf3ab9160b37fa971e9078434f723 simplify-rtx: Fix vec_select index check
f75e56f46d45cfb2fc9bc80ffc627ccfb41ffca6 Update dg-require-effective-target for pr101145 cases
bb27f5e9ec3c7ab0f5c859d90c59dd4573b53d97 Convert arrays in ssa pointer_equiv_analyzer to auto_vec's.
6239dd05127f1dc05f13f504805d36e8ebe1c2c5 vect: Convert cost hooks to classes
5914a7b5c637c9007283226f200dcab8b745abc8 testsuite: Add more guards to complex tests
4e5929e4575922015ff4634af4dea59c59a44f10 gcc/expmed.c: Ensure vector modes are tieable before extraction
33f1d038708a793a498076c8647165613ec90661 First refactor of vect_analyze_loop
bcf4065c909bd1010208117633ca9ff84cd7b38e Split vector loop analysis into main and epilogue analysis
a79fe53d6ce6074d083e925b6b19773e45817405 Amend split vector loop analysis into main and epilogue analysis
b3a38d18351788004121e469a8b25504e4a98763 testsuite: Use posix_memalign on AIX for tsvc
6b8152b96c114f038d2ef3fc753593c414b8cdb6 powerpc: Fix vsx_splat_v4si in 32 bit mode
ae1de0bf72fca92f94a7e29f51ce4448b877db4a Update documentation for -ftree-loop-vectorize and -ftree-slp-vectorize which are enabled by default at -02.
51152076338bc60b8bda8f061be2db97ea5b78de tree-optimization/103102 - fix error in vectorizer refactoring
61a7f947cc063f92ccdaa6319f1f3894bcc8557e [vect] Consider outside costs earlier for epilogue loops
8fd2477ddc358660611f79d8e50f31ed0f3aa105 genmodes: Define NUM_MODE_* macros
abe562bb01479ea2c8952ad98714f3225527aa7e [PR/target 102957] Allow Z*-ext extension with only 2 char.
249b4eeef1fe30237acb4d8e1832243b39d61e7e Extend is_cond_scalar_reduction to handle bit_and/bit_xor/bit_ior.
5cfa174e08e4964703387aa7de5ece448cc660b8 vect: remove unused variable in complex numbers detection code.
92617a8e2af06c74e7df514d3560f246daf411e9 middle-end: Fix signbit tests when ran on ISA with support for masks.
0cf6065ce4997774de66db4de83d461013e0f0e1 testsuite: change vect_long to vect_long_long in complex tests.
4725f62789f25b17967695203d7ee821221e2dd6 vect: Move vector costs to loop_vec_info
772d76acb5aead98eb3c47a78363d867287d5e77 vect: Remove vec_outside/inside_cost fields
5720a9d5beacb558c1ddccbbfef9f9e4f91b14cf vect: Hookize better_loop_vinfo_p
6ddc6a57a74c3a388eb1626e59005f54c6e66c57 vect: Keep scalar costs around longer
0612883d9dc6eebecdbe937893b86597acae237c vect: Pass scalar_costs to finish_cost
c905e7247119878a7e360f58ed75f8a629fa5d1b lto-wrapper: fix memory corruption.
eaec20fde587e0695b100dcba5ff56944c3ae8c0 Grow sbr_vector in ranger's on-entry cache as needed.
8ed62c929c7c44627f41627e085e15d77b2e6ed4 middle-end: Add an RPO pass after successful vectorization
b0c83d59f44bf677c8d74acae228acf32719acb3 path solver: Adjustments for use outside of the backward threader.
e82c382971664d6fd138cc36020db4b1a91885c6 Allow loop header copying when first iteration condition is known.
402d28998fa35d9ffc47aa084f66f9381491eeca RISC-V: Fix wrong zifencei handling in riscv_subset_list::to_string
a11afa7af8ae496a403be9f6dac9e72a27d59466 Apply TLC to control dependence compute
a5fed4063f428a14f5b91533d5954b9bf4e3e7db middle-end/103181 - fix operation_could_trap_p for vector division
3e5a19053310ad090b930fbecebceb28bd1b91a4 Resolve entry loop condition for the edge remaining in the loop.
8865133614f09caadf48c0b7d05f0331959b3bc1 tree-optimization/103188 - avoid running ranger on not-up-to-date SSA
ef0e100f5870bbb792f378858864f915696dd232 libstdc++: Remove public std::vector<bool>::data() member
4a407d358e2896a9ab42364c0b70dfb6f9761d61 libstdc++: Fix debug containers for C++98 mode
1ae8edf5f73ca5c3bf132cc52825dc1f709499dd libstdc++: Implement constexpr std::vector for C++20
6849c71c065e599282c98f3678f22ac52d97a755 testsuite: Filter out TSVC test on Power [PR103051]
a246d7230b8f8b059b21a073e8a91c213dee9cf4 modref_access_node cleanup
e9a53a4f764c37b50aff68811c5d37fcd6f38adb libstdc++: [_GLIBCXX_DEBUG] Remove _Safe_container<>::_M_safe()
2551cd4f9bc1afee444a56e03c1cee6899593da9 [tree-vectorizer.c] Merge pass_vectorize::execute with vectorize_loops and replace occurences of cfun with function param.
220bd61874cf114667b44f9ded76ed0639eb278b tree-optimization/103237 - avoid vectorizing unhandled double reductions
9836e907c4f20ab7638a5125e63634afafc772e7 signbit-2: make test check for scalar or vector versions
59434931fb658f0a180ce3f3305cb3987ed2b56d libstdc++: Use hidden friends for vector<bool>::reference swap overloads
5888512f24121032a438e3aaf10dc93550dc2819 fortran: Reverse actual vs dummy argument mapping
395848255cfa88f6f0f33a9b14c79e584a05d6fc c-family: don't cache large vecs
206b22d021d94adbaa79e1d443c87415254b15de Remove MAY_HAVE_DEBUG_MARKER_STMTS and MAY_HAVE_DEBUG_BIND_STMTS.
1a0bce98dcf84dd0a7b3ac67b51ac68758cc7ad0 middle-end: Fix FMA detection when inspecting gimple which have no LHS.
4f0a2f5a3ddb1024b885c066a18caae4d733bb6c middle-end: check that both sides of complex expression is a mul.
dd85c42c36a5d4e00b41ed40bca98598a2fb57c5 c++/103326 - fix ICE in tsubst with VECTOR_CST
487d604b6fa0f0a981eadc216d9e481d08ed7e7b middle-end: Handle FMA_CONJ correctly after SLP layout update.
cfe8dbd9c08a5bce497646467c9d30942ec3efe0 libgccjit: Add some reflection functions [PR96889]
6cd440670078af89d82cbb67e01a5ecec8eec238 tree-optimization/103361 - fix unroll-and-jam direction vector handling
0888d6bbe97e10de0e624f4ab46acc276e5ee1d7 middle-end: Convert bitclear <imm> + cmp<cc> #0 into cm<cc2> <imm2>
c2e681059bcd7f76f13029988f133858dc82c205 jit: Initialize function::m_blocks in ctor
9e026da720091704ca0456d405f16a3bc5f3a799 Reduce scope of a few 'class loop *loop' variables
94912212d3d1be0b1c490e9b5f45165ef5f30d8a match.pd: Fix up the recent bitmask_inv_cst_vector_p simplification [PR103417]
33adfd0d42e54c809b0c53212abe66e8c874b2f8 libstdc++: Fix trivial relocation for constexpr std::vector
2acbc4eba33574a5e655c01d1be8b17fad0be535 Avoid some -Wunreachable-code-ctrl
e2521cd2d26661cfcfceaabf9bd281ef316fd3fc middle-end/103485 - fix conversion kind for vectors
30213ae9a2eb53f6bc0913919457ceae2572b019 vect: Make reduction code handle calls
e32b9eb32d7cd2d39bf9c70497890ac61b9ee14c vect: Add support for fmax and fmin reductions
0fb2ab504067ad0d2179622861dd71140b736afe vect: Pass mode to gather/scatter tests
9b577047eec65936a5299cac13dd7b73cdfc4ae4 vect: Fix vect_is_reduction
8bb81b3c4945dbae8d490e7a4054ddeb5a3b506c vect: Fix SVE mask_gather_load/store_store tests
8de7958fbd126528c5a5a95a068c0692f6a643cc vect: Use code_helper when building SLP nodes
6f798618c070e2ca505e39c3fcc0c3ca478ac81b vect: Use generalised accessors to build SLP nodes
10833849b55401a52f2334eb032a70beb688e9fc vect: Support gather loads with SLP
32ede1083fad4b68873bec3e5a775e2092d6566e if-conv: Apply VN to hoisted conversions
8af3f53d325fe4a6b1f3da64dc02d10978b9a116 vect: Support masked gather loads with SLP
a83a07557085f6da83c63e86c1cd2e719a39b8b2 Fix c-c++-common/goacc/routine-4.c and c-c++-common/goacc/routine-4-extern.c testcases
0194d92c35ca8b3aa850b805d9becb4491cf6bec tree-optimization/103489 - fix ICE when bool pattern recog fails
7057b8f8c2fbb7a2112705c2962d92b8ccef7c30 vect: Fix ncopies calculation for emulated gather/scatter [PR103494]
91c26004037db689954318d3d1c801eea18d45f4 libstdc++: Skip tag dispatching for _S_relocate in C++17
29df53fe349073a9210df70ae45662cb3f4a0556 middle-end: move bitmask match.pd pattern and update tests
1e625a44f6f3001cea31e0f7c563943ecba92b68 vect: Tighten check for SLP memory groups [PR103517]
74d14778e73dfda365b0ac71478efafd9ad91c2a libstdc++: Define std::__is_constant_evaluated() for internal use
70ece2d4ca403dfc6a837d876642378a8d4d3dce tree-optimization/103527 - always use thruth type forgather mask
06f2e7d49fc6341ea0128ccd83fd13705dd2c523 sve: combine nested if predicates
add31efdc7b0aa869cb9d83f40e274e864072b25 RISC-V: Add option defines for Scalar Cryptography
0962bff477a3d5134cb1ac23852da694529725e0 RISC-V: Add implied defines of Zk, Zkn and Zks
45116f342057b7facecd3d05c2091ce3a77eda59 RISC-V: jal cannot refer to a default visibility symbol for shared object.
c2c843849a3392654d1c2191bd9931c0fff1f8ce cse: Make sure duplicate elements are not entered into the equivalence set [PR103404]
ee01694151edc7e8aef84dc3c484469e2ae443a0 tree-optimization/103544 - SLP reduction chain as SLP reduction issue
e7fac1e1a5858abc9737518ddbdac780fd2ad8b8 libstdc++: [_GLIBCXX_DEBUG] Enhance std::erase_if for vector/deque
50e8b0c9bca6cdc57804f860ec5311b641753fbb [PR103302] skip multi-word pre-move clobber during lra
2c7fb16b5283cf90c4a7f7470e91e1010ee80fcc libstdc++: Fix ambiguous comparisons for iterators in C++20
a5f65cf7ad640ae398eba7a45c712322ce841809 pr103523: Check for PLUS/MINUS support
2f217f7218b621fd7d7fb7ac59b2ddf2e027ed4a Avoid updating hot bb threshold in call speculation code
c6756b3bc1d2af1c8e86f0ad1711e9b9134520ba Add new constant data structure.
8ccd8b12ded1782f4273fd1f381b7d554df61a12 Add LXVKQ support.
d730aa8a9ff26a36c3b480402c1507f3d2e48db9 Generate XXSPLTIW on power10.
8d443ac032ecf0d8275bb0f6838ed7c9aee4e7a5 Generate XXSPLTIDP for vectors on power10.
575ad7700f3d29d9310a778818c0c7a360f4eb1a Generate XXSPLTIDP for scalars on power10.
8f9fea41a767f6ad8cf3d521031048a2491f98b1 Add combine splitter to transform vashr/vlshr/vashl_optab to ashr/lshr/ashl_optab for const vector duplicate operand.
d5c965374cd688b0a8ad0334c85c971c1e9c3f44 middle-end: REE should always check all vector usages, even if it finds a defining def. [PR103350]
807ad4bc854caea407aaa09993e4a3220290b0f0 libstdc++: Overload std::__to_address for __gnu_cxx::__normal_iterator.
411ac94611f164fac7ec1cd5953549c0a56cf43a slp: check that the operation we're combing is a boolean operation [PR103741]
e781cb93d7d908f1f4f1611d0034eccbd1478e91 vect: Fix multi-vector SLP gather loads [PR103744]
19dcecd963295b02b96c8cac57933657dbe3234a Optimize bit_and op1 float_vector_all_ones_operands to op1.
7d5d5032c7200714388db63c7a5676b6ab3e040e Fix static array size in gcc.dg/vect/vect-simd-20.c
500d3f0a302900fba12f41c2c1eedcf0bea4ffa7 RISC-V: fixed testcase riscv/pr103302.c
d9da496a82c0ba33098d622efba34f4750c4ccb9 testsuite: XFAIL some Wstringop-overflow tests ...
b043d4f93ee8f5237c05aa8ca02df9d934556f74 testsuite: fix vect.exp ASAN errors
05da96886efa3ccdcc0e4e337ecd01b2827db213 Force_reg operand 1.
1a15451da14410bf2bd6ec8f5baba1014638c67a tree-optimization/103864 - SLP reduction of reductions with conversions
88e861655b3e59bc982ba22cd6e2e7348efae866 tree-optimization/103800 - sanity check more PHI vectorization
1021b72bf6542f3c08e5404b65063216ee1b06f7 tree-optimization/103816 - detect offset overflow in SLP group analysis
c8bdb3452054506f90283ea198a42a811679653d RISC-V: Allow extension name contain digit
e7da31ba2030b85ff0d15a0c4aac3318cb66b64a RISC-V: Minimal support of vector extensions
1f759dbdcddd5eae795da48f46edae274a431cbc Optimize V16HF vector insert to element 0 for AVX2.
a64478660ee95930773d356760e39e05fe0147fe [Ada] Read directory in Ada.Directories.Start_Search rather than Get_Next_Entry
be59671c5624fe8bf21ddb0192e97ebdfa4db381 middle-end/101530 - fix shufflevector lowering
d3ff7420e941931d32ce2e332e7968fe67ba20af [vect] Re-analyze all modes for epilogues
de0faa56a10406b50fba159957e3a3fd2f95c64b tree-optimization/103948 - detect vector vec_cmp in expand_vector_condition
4bb79e27c02c5cd57d5781bef20e70982d898c40 Extend predicate of operands[1] from register_operand to vector_operand for andnot insn.
bc0b26b9a5836dc99fe69029b6948b8a2a58a36f [Ada] Update copyright notice and bump Gnatvsn.Current_Year
2c4dccb605d485293291878397b42927dc050481 testsuite: Fix up c-c++-common/builtin-shufflevector-3.c testcase [PR101530]
016bd7523131b645bca5b5530c81ab5149922743 [vect] PR103971, PR103977: Fix epilogue mode selection for autodetect only
f45a2232bc8d6b88f52859cac502611395f3caf5 c/104002 - shufflevector variable indexing
b0e5163960eceab701a1a25dfa049e394fe5b3de vect: Add bias parameter for partial vectorization
de196e5dd8ea4d0ed01a8c265afdd3676e27545b libstdc++: Add attribute to features deprecated in C++17 [PR91260]
6d51a9c6447bace21f860e70aed13c6cd90971bd vect: Check partial vector param for supports_partial_vectors [PR104015]
5d7de2bf3b7c5ed1c929098243832b59648bcc67 testsuite: Remove executable mode from source files.
79ae13067f6afabcbae4784ada07dcbb7f00953e vect: Fix uninitialised variable PR104026
5c69acb32329d49e58c26fa41ae74229a52b9106 Rename .c files to .cc files.
e53b6e564aab615703ff2f9e8406a3953f0a3785 Change references of .c files to .cc files
00dc7877ee02634d4837d024e36b55bef6b9d49c tree-optimization/104064 - UBSAN issue in vect dataref analysis
7ca1582ca60dc84cc3fc46b9cda620e2a0bed1bb [vect] Add main vectorized loop unrolling
591b6e00d1bfe12932ca31530d5859f95db8a35a riscv: fix -Wformat-diag errors.
b1f3640912a050d1c405d01f909074659db92c7b nvptx: fix -Wformat-diag warnings
dad495e30135904b0d0305eab8c0ce5f838440d4 RISC-V: Fix use-after-free error in `parse_multiletter_ext'
fc6cd798c07a94d6b0bcc16b175e6e5d6e594c7e testsuite: Adjust possibly fragile slp-perm-9.c [PR104015]
8160b410517e1e3493d92358579d380872acb3e8 Fix tsvc test build on DragonFly.
54e33cf120dab24ce44d7d6028e6247c9489092f testsuite/102833 - fix gcc.dg/vect/bb-slp-17.c dump scanning
2aea19bdb12308aac1519ffc5ecc9d1ec24f9cc5 nvptx: update fix for -Wformat-diag
fdf31ae25f66cd486e655d7ebda36826025b9d0e Update on riscv -Wformat-diag string.
2f47a095a08bd32f0d2bcb8838615a11096fd2da testsuite: Rename a few C++ to .C or .cc.
5b6788ae5a365aecd6776f563e44022acb93a57a tree-optimization/104112 - add check for vect epilogue reduc reuse
ffc7f200adbdf47f14b3594d9b21855c19cf797a match.pd, optabs: Avoid vectorization of {FLOOR,CEIL,ROUND}_{DIV,MOD}_EXPR [PR102860]
f4ca0a53be18dfc7162fd5dcc1e73c4203805e14 vect: Fix epilogue mode skipping
ad4188f8385f86cc04806fb0e26c7da1f5f655b8 tree-optimization/104114 - avoid diagnosing V1mode lowering
8bc700f4c3fbe405413db02281ef2918bfa831fc Enhance vec_pack_trunc for integral mode mask.
7b78dee64def7e251a1d0678613c8aaabe7b176c testsuite: Add -Wno-psabi to pr47639.C testcase
68f03ac49cb4f585dbce78dc9e4c4a9ec950e83c dwarf2out: Fix -gsplit-dwarf on riscv [PR103874]
1ad72811242eb84dde1bb2e97d0804d6eabeac8a tree-optimization/104152 - add missing check for SLP constant build
f953c8bc5bf314a57a6ba347ee6f5f5e3f1dad53 tree-optimization/104156 - fix unswitching compare-debug issue
199cd0e0f8744ca1e61a95987b2d020a592a46d9 tree-optimization/100089 - BB vectorization of if-converted loop bodies
087e545747ca9ee977e84326877b0ce1bc4c383a Strengthen a few OpenACC test cases
886e9779581102caf97cd05dea80d9be87c24784 PR middle-end/104140: bootstrap ICE on riscv.
f9063d12633c62a089115df032a19295854d8b06 Mark XXSPLTIW/XXSPLTIDP as prefixed -- PR 104136
45b999f642a531c083c982dda79fa6ad65730a7c analyzer: fix ICE on vector casts [PR104159]
add6bb52e34f6036ace9f67ad8ad5b990adbc34a RISC-V: Update testcases info with new implement info
98416dbb0a62579d4a7a4a76bab51b5b52fec2cd RISC-V: Change default ISA version into 20191213
ca2bbb88f999f4d3cc40e89bc1aba712505dd598 RISC-V: Do not emit zcisr and zifencei if i-ext is 2.0
c106529eb219976426eeb9b3e47ad7f496e89b0e RISC-V: Fix testcase after bump isa spec version
2e211a02290f3b3533b56c593fc7b95edb8593b0 tree-optimization/104214 - amend PR100740 fix for pointer compares
abea1c9a252ef7712ab800360e1e0e2697ee14f2 c++: Fix up handling of vector CONSTRUCTORs with vectors in it in constexpr.cc [PR104226]
9bf217920457f2e2d46b601f24721780a20a031b c++: vector compound literal [PR104206]
833e651a76cbab26d18307fe761b609c0fa61439 RISC-V: Document `auipc' and `bitmanip' `type' attributes
9ec306582fd60e5b76f07eb81c9ed2415d9a3590 tree-optimization/104267 - fix external def vector type for call args
a1544878966020d1f7a640b35d1f7a5f0e055624 match.pd: Fix up 1 / X for unsigned X optimization [PR104280]
d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8 [libgomp, testsuite] Fix insufficient resources in test-cases
e9bf6d6b0e1d67df6dcee042fbe37ab72c3a38d7 veclower: Fix up -fcompare-debug issue in expand_vector_comparison [PR104307]
e0451f93d9faa13495132f4e246e9bef30b51417 [nvptx] Add some support for .local atomics
57f971f99209cc950d7e706b7b52f4c9ef1d10b0 [nvptx] Update bar.sync for ptx isa 6.0
8ff0669f6d1d6126b7c010da02fa6532abb5e1ca [nvptx] Update default ptx isa to 6.3
55d83cdf23b5f284b4e0bd0a6d1af3d947b2e7c3 vect: Simplify and extend the complex numbers validation routines.
d41ba5a0533ea93786f7dbff9b6f57938abe67fe testsuite: Remove TSVC XFAILs for SVE
876e70d4681332a600492173af0c7259e5a438c6 tree-optimization/103641 - improve vect_synth_mult_by_constant
38948b77dbc16f4c6cf6cff8661bab699b306f03 Empty the base_types vector before (re)populating it
06e32a5ebf20c11dd31bc2677bede569fef84316 RISC-V: Always pass -misa-spec to assembler [PR104219]
affdeda16ef7fbd34f850443fe63bb407714297e RISC-V: Fix detection of zifencei support for binutils
12aae3b93aeae50f5ced1bbef57fe207ecd12930 AArch32: correct dot-product RTL patterns.
9d2c0fad59745bf67aa6471e8c9e96c351f0de59 analyzer: fixes to memcpy [PR103872]
3faeba72cf93bdbf0b42d6b1b65fd4f0794f9d2a RISC-V: Add target machine headers as a dependency for riscv-sr.o
5e92fddad7719f2f2cdf55f73222c4978af38f35 doc: RISC-V: Document the `-misa-spec=' option
6de582dd62dfcb18f51e3dd01cf8519a74752530 RISC-V/testsuite: Run target testing over all the usual optimization levels
871afdc512be0510cbd4fa0928e5a1bd0681766e middle-end/104450 - ISEL and non-call EH
59b31f0e2d187ebdb3d399661e22b28e4ebd8099 ICE: QImode(not SImode) operand should be passed to gen_vec_initv16qiqi in ashlv16qi3.
da2bf62d9e2a25f2d6a99176144c250b51fbdee7 tree-optimization/104445 - check for vector extraction support
4a8083285c3edf50088a095870b217ab0881dff0 middle-end/104467 - fix vector extract simplification
72f8d228aff80ede554b1735533af7eb0bd4a912 middle-end/104496 - fix vectorized_internal_fn_supported_p
84993d94e13ad2ab3aee151bb5a5e767cf75d51e c++: Fix up constant expression __builtin_convertvector folding [PR104472]
ae117af43944101ca47b99b743c85a3c528b4b4f [gimplefe] Add vector_mask attribute to get access to vector bools
9355a8c35883b5125851bb9b4169a1a1cd8e343f match.pd: Fix up (X & Y) CMP 0 -> X CMP2 ~Y simplifications [PR104499]
7e204bd2f189850cb940677c99d8d93eb7dd40cd Add vect_recog_cond_expr_convert_pattern.
3f10e0d50b5e3b3f64bc9a1a29177518d5f4468d middle-end/104497 - gimplification of vector indexing
f320197c8b495324dc6997a99d53e7f45ecf5840 tree-optimization/104511 - avoid FP to DFP conversion for VEC_PACK_TRUNC
6a0d6e7ca9b9e338e82572db79c26168684a7441 openmp: Make finalize_task_copyfn order reproduceable [PR104517]
63a9328cb8c601377fe73e214b708c4ae0441847 vect: Fix early free
754dce903ca28c4c2f2bc8614a8de5e631655f2e Restrict the two sources of vect_recog_cond_expr_convert_pattern to be of the same type when convert is extension.
12a88e6e208fa45a449775bfb9353c777a6081aa libstdc++: Deprecate non-standard std::vector<bool>::insert(pos) [PR104559]
4984f882f41be1472df6ce7c439c98c4bc4e6f08 Mark Power10 fusion option undocumented and remove sub-options.
61fc5e098e76c9809f35f449a70c9c8d74773d9d tree-optimization/104582 - Simplify vectorizer cost API and fixes
f24dfc76177b3994434c8beb287cde1a9976b5ce tree-optimization/104582 - make SLP node available in vector cost hook
2ef0e75d0bbc80bc06a0a39135e3564f907e39c8 Implement constant-folding simplifications of reductions.
d669237f7d56d83b3c7bc12a957db22b3c410b43 Dump def that we use for a splat
54f745023276e5025e34b2cc22530c78423a93cb Get rid of 'gcc/omp-oacc-neuter-broadcast.cc:oacc_build_component_ref'
6e80c4f1ad9046b0a7c105660cc7b3dcae0fdb8f tree-optimization/101636 - CTOR vectorization ICE
aee1adf2cdc1cf4e116e5c05b6e7c92b0fbb264b analyzer: handle __attribute__((const)) [PR104434]
8645370af18979123d9e94e3ed215d23dd740721 RISC-V: Document the degree of position independence that medany affords
f62115c9b770a66c5378f78a2d5866243d560573 match.pd: Further complex simplification fixes [PR104675]
75ce477306a205635b8dd0f37801c05396fd443e testsuite/104728 - constrain gcc.dg/vect/pr81196-2.c
1a0e3bba4b735fa8e4463d52950d0ce9c30c16c7 warn-access: Fix up check_pointer_uses [PR104715]
d7b4c8feee11ea04b83f9996654c96b130588570 testsuite: Fix up pr104637 testcase [PR104637]
ced22c51baaa3fe84d14d5baef60c4440a35b4be vect: add vect_float to pr102819 tests
8fede2876a751d53a28442dcca32466daa929daa rtl-optimization/104686 - speedup IRA allocno conflict test
38c1731193fe12d951f3010880406505507d90c1 testsuite: Add -Wno-psabi to pr104505.c
5706a5db88a0eeaf82071debe1364f4533896a65 libstdc++: Use non-debug vector in constexpr test [PR104748]
07395f19dff610f03d1b1d30c8bd640f610c45dc Test '-fopt-info-omp-all' in 'libgomp.oacc-*/kernels-private-vars-*'
e28eb86c18ed765dceb3c56471a848e9f0e120ff Test 'libgomp.oacc-*/kernels-private-vars-*' with '--param=openacc-kernels=decompose' [PR104784]
8ea4a34bd0b0a46277b5e077c89cbd86dfb09c48 PR 104732: Simplify/fix DI mode logic expansion/splitting on -m32.
5db1d7f143c77543ae7a6c4649af3e611061e0d9 tree-optimization/104782 - adjust PR101636 fix
027e30414492d50feb2854aff38227b14300dc4b Fix up duplicated duplicated words in comments
5f07095d22f58572c06997aa6d4f3bc456e1925d vect: disable bitmask tests on sparc
058d19b42ad4c4c22635f70db6913a80884aedec tree-optimization/84201 - add --param vect-induction-float
1c7b110e1e44da0c93d0d011f5109c5d09bf4399 vect: fix out-of-bound access in supports_vec_convert_optab_p [PR 104851]
4470e813b0b46d2e579b9e3d69a41a7192709c50 testsuite/104759 - adjust gcc.dg/vect/vect-multitypes-12.c
7a5e036b61aa088e6b8564bc9383d37dfbb4801e [OpenACC privatization] Analyze 'lookup_decl'-translated DECL [PR90115, PR102330, PR104774]
ee34ffa429a399f292ad1421333721a92b998772 tree-optimization/102943 - use tree form for sbr_sparse_bitmap
e671e48e352ee278d816d4633146208807a0e403 ipa-cp: Avoid adjusting references through self-recursion (PR 104813)
69619acd8d9b5856f5af6e5323d9c7c4ec9ad08f target/104762 - vectorization costs of CONSTRUCTORs
3cb27b85a7b977958d53e1a29596ba211d21dde2 Fix DImode to TImode sign extend issue
98afdc3e2bfccf0a1337013b54f2c5634ef40ee5 riscv: Allow -Wno-psabi to turn off ABI warnings [PR91229]
eb4f83d1f100cae0cb66c6e6b4d67f5e53d3da51 RISC-V: Handle combine extension in canonical ordering.
2a5fabeb2faffa671e9b0984ce3a6f76153d23d4 RISC-V: Add version info for zk, zkn and zks
ac73c944eac88f37db2767aa4acc7ff6f4983f21 libstdc++: Reduce header dependencies from PSTL headers [PR92546]
a9131a329a92074decb91a69e70480a431918e4a testsuite: Add missing <vector> header to test
5177634148aab7a7b193eaa9b8c73ce00a38c481 RISC-V: Implement misc macro for vector extensions.
85b4d881327e31ae7d2bd4072dcbe425db30f8fe Fix memory leaks
0b0fc52b0412cc1608f4f0edb8a0ab2495619c4e middle-end/105049 - fix uniform_vector_p and vector CTOR gimplification
fe705dce2e1e3e4e5e0c69d7f9adaf7f2777cdc8 tree-optimization/105053 - fix reduction chain epilogue generation
1806829e08f14e4cacacec43d7845cc2dad2ddc8 c++: Fix up __builtin_{bit_cast,convertvector} parsing
b6cccf88cb65043c20a020e4decf249a78180175 testsuite: fixup pr97521.c and pr96713.c on i686-*
871266756c7aa6a68e36b89d8d56e3fa593cca5b Disable gathers for znver3 for vectors with 2 or 4 elements
065e25f6331c130bc3cd2ce78036f2328adb3d71 [libgomp, testsuite, nvptx] Fix dg-output test in vector-length-128-7.c
f6b786d749812542dae90db1701a3cfdccfa1e4b d: Compile simd_ctfe.d only on avx_runtime or vect_sizes_16B_8B targets
eaaf77dd85c333b116111bb1ae6c080154a4e411 middle-end/105140 - fix bogus recursion in fold_convertible_p
3eda57b4ae50b5fe57c174556f1daf3bd9a46b09 tree-optimization/105132 - add missing checking in vectorizable_operation
6d4bbee4f59c7102f8ed9b6774f0b2d9f6ff4365 Support pandn for V1TI mode (i.e. *andnotv1ti3).
d037d9ad323ec9eef3e50c6e2cbc1e31191daa5d vect: Fix mask handling for SLP gathers [PR103761]
d9421784980276b42ecdce85b6dde28e965c88c6 c++: vector compound literal [PR105187]
176df4ccb58689aae29511b99d60a448558ede94 IBM zSystems/testsuite: PR105147: Skip pr105140.c
897b080e6d91095ed5f97115bde8daed8961a508 testsuite: skip PR103350 tests on big-endian
fdd81afcf18d1a926d81d63cc4525fc9442aa9a5 testsuite: enable fast-math-complex-* testcases.
68163cc2de1d3125ed9dbb8eac3294d1f9118641 testsuite: delete slp scan from loop vect test.
7e7a96f774ed892e5cef53fcb68297cd0d513820 c++: use after free during name lookup w/ modules [PR99479]
b789c44c6463452900f7b1e6d2a0af6567534bfc tree-optimization/105175 - avoid -Wvector-operation-performance
78c718490bc2843d4dadcef8a0ae14aed1d15a32 middle-end: Prevent the use of the cond inversion detection code when both conditions are external. [PR105197]
7d25f9b6f1e3c72149868fd66d5a3aac429ecb83 RISC-V: Sync arch-canonicalize and riscv-common.cc
0df39b08037f78dfc53c3c4e6c09b3babe6ee0f8 libstdc++: Move Filesystem TS path definitions out of class body
4132f6ba9583e128a00d55961ae8c8e7245b2223 RISC-V: Support -misa-spec for arch-canonicalize and multilib-generator. [PR104853]
62d5bb0f35fb6ec373eaac942755585a633528a0 tree-optimization/105226 - avoid splitting abnormal edges
ac8340ee4d1e65f3fd41c547b16895875f4aefa7 tree-optimization/104912 - ensure cost model is checked first
4e892de6774f86540d36385701aa7b0a2bba5155 tree-optimization/105250 - adjust fold_convertible_p PR105140 fix
d2f8208e9add01fe10ee56307cc79631b9995f74 libstdc++: Fix missing and incorrect feature test macros [PR105269]
b209a349268d245f7a318861112df47bea15b89d analyzer: fix ICE comparing VECTOR_CSTs [PR105252]
3fc22eedb033cbff1bf5a70c6a032d3c5ce2d867 libstdc++: Default to mutex-based atomics on RISC-V
353434b65ef7972172597d232ae17022d9a57244 tree-optimization/104010 - fix SLP scalar costing with patterns
36f1de95a61132f63c0c07ef154abd9f435721ac tree-optimization/105312 - fix ISEL VCOND expansion
4d4eaa77a7d27bf7b220c3be79615410c873fcf1 tree-optimization/104912 - ensure cost model is checked first
c049f638da4f7b32b11e4d895184e0960bae5291 fortran: Fix conv of UNION constructors [PR105310]
7964ab6c364c410c34efe7ca2eba797d36525349 fortran: Use pointer arithmetic to index arrays [PR102043]
1ba397e9f93d3abc93a6ecbabc3d873489a6fb7f c++: __builtin_shufflevector with value-dep expr [PR105353]
7d31c678d68d7b6820a958584619ca763b0eb9c5 ifcvt: Improve noce_try_store_flag_mask [PR105314]
f27848a5dc4d3b16cd4112bddcb59e0916eba623 tree-optimization/105219 - bogus max iters for vectorized epilogue
38f8e13027095b24ef6c432d62101fc43ccd0cde testsuite: vect: update unaligned message
e229f9b8f5d060056883ddb379b191c451e20139 tree-optimization/105394 - vector lowering of compares
30b5b785abfff334bb50d7fd2051e991324f051f tree-optimization/105437 - BB vect with extern defs of throwing stmts
b931d0cfd33fec6ffc259b1be5c832144b4e7bea Fix internal error with vectorization on SPARC
a4183ab7cfb8fee318165a3a5c169dcbd18cae4d libstdc++: ppc: conditionalize vsx-only simd intrinsics
fdf50499a40399a48ac5e5d521ef93ed302be157 tree-optimization/103116 - SLP permutes and peeling for gaps
02e8dea4944f9995ed3623dc15c2ad73e0376f27 RISC-V: Fix wrong expansion for arch-canonicalize
f1e47f34abafa9f943dd5dbe4375b0d849a1a0ac RISC-V: Don't unconditionally add m,a,f,d in arch-canonicalize
7b88f9b8881b7653b5a834da1b2b8fda463e61c0 pointer-query: Fix ICE with non-pointer param [PR105635]
e919fae01b89fa6d7fc742d140bb15dc2600becb RISC-V: Inhibit FP <--> int register moves via tune param
af039edf70b26a0033a9f66338da2faebc6c5027 RISC-V: Implement C[LT]Z_DEFINED_VALUE_AT_ZERO
65d121507de7c2bf711b383befd2ba7af8115de1 RISC-V: bitmanip: improve constant-loading for (1ULL << 31) in DImode
bac09a893145056217b1e9a0054466a770815c43 Fix ICE in extract_insn, at recog.cc:2791
0ddeeb11e45b9b7e9ebc18292a42769304bf3e44 c++: Fix up ICE on __builtin_shufflevector constexpr evaluation [PR105871]
566e599c8194f789b077eb94a5e45ced2de5b31e c++: Use fold_non_dependent_expr rather than maybe_constant_value in __builtin_shufflevector handling [PR106001]
b3200ac82fd5aed39293a54e0e83258bb6caa600 vect: Move suggested_unroll_factor applying [PR105940]
eb4336f546b2a770717af608c79b4d46f45ef7c2 Fortran: fix checking of arguments to UNPACK when MASK is a variable [PR105813]
32dfb075ad31413af9086ce546b5f5317a916d34 d: Fix error: aggregate value used where floating point was expected
22736f3d0d4fb8ce4afb3230023f8accdb03a623 [BACKPORT] Disable generating load/store vector pairs for block copies.
13d23c313374e15186f33fa6d57a0c9fd5d8b486 middle-end: don't lower past veclower [PR106063]
4c1c38ba9535435b04ee22cda33042b7d48ca183 RISC-V: Remove duplicate backslashes from `stack_protect_set_<mode>'
25b11619a83f424073aca93422c832b1ac4756fb Do not enable -mblock-ops-vector-pair.
06254d97b8fa3a5d1c8b6b4e091d851700801385 PR106342 - IBM zSystems: Provide vsel for all vector modes
9f532fec01d6651cc3cc136073f044a7953d8560 vect: Don't allow vect_emulated_vector_p type in vectorizable_call [PR106322]
9f78e7eb8e064556adf466444197aae8e52a1eb3 Don't gimple fold ymm-version vblendvpd/vblendvps/vpblendvb w/o TARGET_AVX2
f9593025a290c68c0916dc6fa569eb38eda00535 Fix up dump_printf_loc format attribute and adjust uses [PR106782]
41b4faa130a32b37debb1f92e3fa93b2fe8571fc tree-optimization/106841 - gather and hybrid SLP
2773a90c0f4f323e8ace0593893bc8fcbd2266cf Fortran: error recovery while simplifying intrinsic UNPACK [PR107054]
d282dd56275485a88e1fe9c4ae1939b62d23b20b tree-optimization/107160 - avoid reusing multiple accumulators
d127348d7711e148e5ddd205a8c3409b37fae64c tree-optimization/107212 - SLP reduction of reduction paths
fe7d74313736b8e1c30812bc49419f419bdf1c53 tree-optimization/107254 - check and support live lanes from permutes
e3c997824f17dd6a4f7eb8d668b9ed2ef84408fc Fortran: error recovery with references of bad array constructors [PR105633]
9b116c51a451995f1bae8fdac0748fcf3f06aafe OpenACC: Don't gang-privatize artificial variables [PR90115]
31f25cf4ef9a0a0ccc0b0f9158773c5a71e74cc5 c, c++: Fix up excess precision handling of scalar_to_vector conversion [PR107358]
0138ebcd482c71f55d74eb9fa533fbb54a4391d6 Always use TYPE_MODE instead of DECL_MODE for vector field
17d46f069ceb55faa0db80a47c31710c7e6bcb11 d: Fix #error You must define PREFERRED_DEBUGGING_TYPE if DWARF is not supported
16debfadbd759f9933b4a62029661f01188ad928 tree-optimization/107956 - ICE with NULL call LHS
a9fafa2f533e25c57528c0294e19a154197848dd tree-optimization/107647 - avoid FMA from SLP with -ffp-contract=off
9e242f8a2d5987ddaa74696e5ad809303ddc8dd0 tree-optimization/107766 - ICE with recent -ffp-contract=off fix
232305bd0c8dd37b17b815864e730aa630714606 tree-optimization/107686 - fix bitfield ref through vec_unpack optimization
50ef4fc8c848929ee79af97ac445a45baab7d575 tree-optimization/108164 - undefined overflow with IV vectorization
5039d97c78938be547d9205389276899a5fcd839 Update znver4 costs
489c81db7d4f75894e9d34aa90fe7224cfafb53a Zen4 tuning part 2
7790d4b2e5c6ed0d4957e3b7948e24023447fbfd Disable gather/scatter for zen4
29ac1dcd36901a094f7d698bbe244489a58e2715 tree-ssa-dom: can_infer_simple_equiv fixes [PR108068]
4c8e17a6a578b9eb15cd210651b6ea273022db39 generic-match-head: Don't assume GENERIC folding is done only early [PR108237]
7bd8b65bd5d51a33f31ec39dfb435b84e36260e9 ree: Fix -fcompare-debug issues in combine_reaching_defs [PR108573]
00136f439e2849af2bfd9934d79a8297ab09a1d9 vect-patterns: Fix up vect_widened_op_tree [PR108692]
732d744e82332e7cc269694197c0df2a3635730f c, c++: Allow ignoring -Winit-self through pragmas [PR105593]
8e171d840584a564993201101cd1f2e920e7aecb libstdc++: Simplify three helper functions into one
cf59d86bee45c1851c58a31f5ad9e74d99240177 RTEMS: Tune multilib selection
67608f7a2cf3eff99654ab3f44d5183049e3b36c Fix PR 105532: match.pd patterns calling tree_nonzero_bits with vector types
2166a87cefde15ec7798914095d9a61566e7fccd Enable 512 bit vector for zen4
97d599e09b0fd389a7cbac8867e56977ec97900f tree-optimization/106904 - bogus -Wstringopt-overflow with vectors
c722c6b061a5e909267eae53ffe5910fbe0a7d5e tree-optimization/107451 - SLP load vectorization issue
21e7145aaf582c263e69a3ee05dfa9d42bdbd1aa tree-optimization/108724 - vectorized code getting piecewise expanded
02ff8c8ebcb7f9b0885946d17ff12523e7522b71 tree-optimization/108816 - vect versioning check split confusion
f4e4108dd005084fc1c88bba14fda6b200e70daa tree-optimization/108950 - widen-sum reduction ICE
cd425a35ec2b157b520cee68a67c6296712f441b testsuite/108985 - missing vect_simd_clones target requirement on test
7b9e837e769474fa5e91958dd2a479837b1176cb cfgexpand: Handle WIDEN_{PLUS,MINUS}_EXPR and VEC_WIDEN_{PLUS,MINUS}_{HI,LO}_EXPR in expand_debug_expr [PR108967]
b2747a4213635352f8315114c5925f178fed0544 tree-inline: Fix up multiversioning with vector arguments [PR105554]
6f2bb57f909014618aaf770bfaaf49e28e410311 Fix PR target/109140
33a69d0b0b772610463d1d586f3f0c9820fc969e vect: Fix voluntarily-masked negative conditionals [PR108430]
65216cd44b8c89640ad987b6227ea1d748456a41 vect: Fix single def-use cycle for ifn reductions [PR108608]
61bdd3c38039e1e309d5cf78c16c4052f6e09bea lra: Replace subregs in bare uses & clobbers [PR108681]
e11513c7688f583d1f4d0961d79d8aa775add03d vect: Make partial trapping ops use predication [PR96373]
6c5d6ed689d24418a3bc0647ab34a7ab017d7030 Fix typo in -param=vect-induction-float= attributes
c2ab46f377313da5336748eb4fdc20020c047445 tree-optimization/109219 - avoid looking at STMT_SLP_TYPE
9cc16b95d5d63b18cbc0aa780ffb6b460c791351 tree-optimization/109469 - SLP with returns-twice region start
053668dbf11bb61c63fa7db5b3bccd0fdac9e726 tree-optimization/109473 - ICE with reduction epilog adjustment op
08605396d164c57eb3c80051001b86b96da0405c tree-optimization/109502 - vector conversion between mask and non-mask
0a4cf0e92cbd5f18de3195fa2deb058f2f88e77e tree-vect-generic: Fix up expand_vector_condition [PR109176]
2e4210698c644e44f9e0645dc7bc49710fd60ce8 libstdc++: Avoid bogus warning in std::vector::insert [PR107852]
c7de861c609573b1f219fcdf6c683612c987621f tree-optimization/109573 - avoid ICEing on unexpected live def
fcf27816635186acce77dd9b6d756d5c93fd92ef tree-optimization/108791 - checking ICE with sloppy ADDR_EXPR
d639236ea87ff8a6a2d56c0408e6eb92674418e6 PR tree-optimization/109392
