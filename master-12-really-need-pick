7259481f0ece6283a6e2943448e8d28ffffc40f9 tree-optimization/104322 - remove dead code in vectorizable_reduction
6ccc4356e7c5b4ca69d2029898a6439bb735cbc5 Prefer global range info setters that take a range.
c090743b2ae0095f792371c7cbeb3cf6e2978f5d Fix is_gimple_condexpr vs is_gimple_condexpr_for_cond
41e3db05d697405256b6002d8432955a93d249f1 tree-optimization/104240 - SLP discovery with swapped comparisons
3ae5cbff1ad958ddefc12010bf7e32a47741d331 Fold more vector constants early
eca04dc8555f5fae462fbd16386da9aaf38a0711 tree-optimization/104658 - avoid mixing mask & non-mask vector defs
938a02a589dc22cef65bba2b131fc9e4874baddb tree-optimization/104595 - vectorization of COND_EXPR with bool load
000f4480005035d0811e009a7cb25b42721f0a6e testsuite/105486 - adjust testcase to avoid misaligned accesses
ee9128189623ce43343ce326caa8d5eec2eccfec c++: wrong error with MVP and pushdecl [PR64679]
e4e053a63b153039a7905901806a4f4a3154988b vec: fix iterate comment
9ddd44b58649d1d1e932c1e95dc00d654733c1fc RISC-V: Provide `fmin'/`fmax' RTL patterns
9e1e962eac8d2a28fcd648a0f5c8eb0022abd8e4 opts: do not allow Separate+Joined ending with =
8585185cc4de3a9268af6afc42a0e86b7ba72b12 testsuite: Update Wconversion testcase check type.
ce19ac123abde3d9c52d52e13a00bbbe60e08722 [Ada] Remove front-end SJLJ processing
995060aa5eb85a9a6d06c5cf9e87650522ccee3f testsuite: PPC vector double requires VSX
3e948d645bc9086eee28407fcc67d05b3450bb78 c++: tighten TMPL_ARGS_LEVEL macro
8ab4b484153031c407b7d8c760b6a2605da1199a Strip of a vector load which is only used partially.
ba2068893c37deaa418d9b2126414f6824e66655 Make gimple_build main workers more flexible
602a3161f425ee3fe325413eeab9792e8e07a2ff Clear killing defs when resetting the path in path_oracle.
dc32901a0221a43e121591b9819b4e33bcc2fd0a testsuite: opt: Fix const7.C for RISC-V.
010af1040bcf4870c8f1aac88a7b1538f622858b testsuite: btf: Fix btf-datasec-1.c for RISC-V
ca32b29ec3e92dcf8dda5c2501d0baf9dd1cb09d Use more ARRAY_SIZE.
6f5b06032eb9e3085611b2e14ca040af465930c1 Finish gimple_build API enhancement
8b49556e4ee617e0920a9335685c7961971c3d0a [Ada] Fast implementation of floating-point mathematical functions
8ccdc7ce33f5e7ca509e5b9f835ed4719db21ffd libstdc++: Ensure pmr aliases work without <memory_resource>
570fbf448d126f1e4b3ef55327c3ea3ab0d3a806 testsuite: Skip vectorize tests for PRU
075fb873c264a030f56793cb162c9fdecbdd1773 RISC-V: Fix canonical extension order (K and J)
68e0063397ba820e71adc220b2da0581dce29ffa Force the selection operand of a GIMPLE COND_EXPR to be a register
19dd439389be2c5eb6b986d164760e061ba01938 Remove is_gimple_condexpr
ef85d150b59637b6eb116947c1d29e97d562e7db RISC-V: Enable TARGET_SUPPORTS_WIDE_INT
4665cfbc4c70e24b4c885338577d4b7bc1752473 tree-vect-slp-patterns.cc: add 'final' and 'override' to vect_pattern::build impls
23c738bcba78a9df2259dd0626669c9a0aa04d1e RISC-V: Add mininal support for Zicbo[mzp]
3df3ca9014f94fe4af07444fea19b4ab29ba8e73 RISC-V: Cache Management Operation instructions
d44e471cf041d5a304f2b2bbc7d104fa17f0e9da RISC-V: Cache Management Operation instructions testcases
793f847ba7dbe7638f1c27178868edbefd3a8108 PR tree-optimization/105668: Provide vcond_mask_v1tiv1ti pattern.
ae8decf1d2b8329af59592b4fa78ee8dfab3ba5e Add new parameter to vec_perm_const hook for specifying operand mode.
5af22024f62f1f596a35d3c138d41d47d5697ca0 Fix profile count maintenance in vectorizer peeling.
7915f6551343e0868784c2a7945fdac42ed498d3 RISC-V/testsuite: constraint some of tests to hard_float
d8474337a0b2bf1b3c84863957cef1da92811ffe Revamp irange_allocator to handle vranges.
45c8523dd3e50daa5f0bba040099fdfd2ad1aaaa Convert ranger and clients to vrange.
a743a72714fc4a9d7036d28d0cacdf2a3621f629 DSE: Use the constant store source if possible
08afab6f8642f58f702010ec196dce3b00955627 tree-optimization/101668 - relax SLP of existing vectors
878043af338c3b49f7848f3b73938cfa75a97393 [Ada] Fix iteration on formal vectors
63eab5d5775da6c656f3527ad974b7dc25f5ad5e Update document for VECTOR_MODES_WITH_PREFIX
5e005393d4ff0a428c5f55b9ba7f65d6078a7cf5 Disparages SSE_REGS alternatives sligntly with ?v instead of *v in *mov{si,di}_internal.
269edf4e5e6ab489730038f7e3495550623179fe Update {skylake,icelake,alderlake}_cost to add a bit preference to vector store.
702a11ade2e87515a7dda1d1c028217bfe28e609 RISC-V: Use a tab rather than space with FSFLAGS
fddb7f65129a12dabb5ddc3c8082fe576f4af451 Disable generating load/store vector pairs for block copies.
033e5ee3c4a2c841ff24e3bf3fc5324ea9cc373c testsuite: Add -mtune=generic to dg-options for two testcases.
f8baf4004ef965ce7a9edf6d2f5eb99adb15803a Add a general mapping from internal fns to target insns
72b185189f914a412ae39776cd284dfaeaf2213b RISC-V: Reset the length to the default of 4 for FP comparisons
4bf0dcb0492c40be7e0603b13a8b5949609388dd RISC-V: add consecutive_bits_operand predicate
0247ad3e0f4a574273b42344fbaa9346599948f9 RISC-V: Split slli+sh[123]add.uw opportunities to avoid zext.w
acb1e6f43dc2bbedd1248ea61c7ab537a11fe59b Fold truncations of left shifts in match.pd
9d2fe6d427b37755410bb4eb4ecce8382f2ebfc5 Revert recent internal-fn changes [PR105975]
1089d083117f28f3518f5ec3c7a153236cb92334 Simplify (B * v + C) * D -> BD* v + CD when B,C,D are all INTEGER_CST.
b18e5d7e5f9df69759f0fbc2bed91d5e51313e79 RISC-V/testsuite: Fix pr105666.c under rv32
d6b423882a05d7b4f40ae1e9d942c9c4c13761b7 RISC-V: Supress warning for comparison of integer expressions of different signedness
970b03c0037549a571ecea9afa41de78eb859b3a RISC-V: Fix a bug that is the CMO builtins are missing parameter
9f55aee9dca759da84afd4563ff72d3ca8ab8a1c Add operators / and * for profile_{count,probability}.
86882d9feb6a534325d7162216696266898e36d0 vect: Respect slp decision when applying suggested uf [PR105940]
98b6e62cf5e7d477b5797084da59561f6d018668 RISC-V: Add -mtune=thead-c906 to the invoke docs
038b077689bb5310386b04d40a2cea234f01e6aa data-ref: Improve non-loop disambiguation [PR106019]
509cdb441614eab2a0fe90a970a927538b832bcd testsuite: Compile slsr-39.c without vectorisation
91418c42089cd1cbe71edcd6b2f5b26559819372 d: Add `@register' attribute to compiler and library.
8c99e307b20c502e55c425897fb3884ba8f05882 Convert DOM to use Ranger rather than EVRP
725793af78064fa605ea6d9376aaf99ecb71467b Add 'final' and 'override' to opt_pass vfunc impls
b93ae1a01bbad59ee77b7c84f4743a730138ba87 d: Add SIMD intrinsics module and compiler built-ins.
0f6eef398045deb2a62d18b526831719c7c20c8a testsuite/102690: Only check warning for lp64 in Warray-bounds-16.C
2e9b2ab3b5bf6e4a0bdabfeb7358206b18253e3c [Ada] Update the documentation of functional containers
d2a898666609452ef79a14feae1cadc3538e4b45 Put virtual operands into loop-closed SSA
483bd9a02831d9cb615179e5758946f41622d6c9 Use default lower bound for vector types in debug info
10b502fb78351a4073b6682c026a92c82d3da6c5 Keep virtual SSA up-to-date in vectorizer
3769ad4ccea9589b3f7edaef901cb542aa10f49a Revert update-ssa assert in vectorizer
76c3041b856cb0495d8f71110cd76f6fe64a0038 vect: Use sdot for a fallback implementation of usdot
7f4028ae9bbbd35bff34738d5e2f9b6810242ba7 Maintain LC SSA when doing SVE vectorization
1a6e0d8252a71c61d4dc616044fb25b5ac2cfffb tree-optimization/106196 - properly update virtual SSA for vector stores
1d2aa262482fc9b23201200ca82aa3b8659b072e Provide a relation verification mechanism.
d89fa97ff318b1f892e2629c5a249313872a01b1 lto-plugin: use locking only for selected targets
cf3a120084e94614a4917f71940325cd4b537f24 tree-optimization/106226 - move vectorizer virtual SSA update
79f18ac6b7ab7744fcf8937ea4bc0c40f3efc629 tree-optimization/106228 - fix vect_setup_realignment virtual SSA handling
415d2c38edadf97950eb14b8d7e6b1491c98cdd5 tree-optimization/106228 - fixup last change
e7a7fed818d238d45b18dfd927cde93b4711052d vect: Restore optab_vector argument [PR106250]
9b06b9d23799ecad5db710e80f214fac0ae175f3 Remove create_lcssa_for_virtual_phi and uses
00eab0c654e09c8a0f1b1a3b1c7bff8764e64991 Add internal functions for iround etc. [PR106253]
351659f8dc80f1faaefae9fec2eab30c24ff282d [Ada] Revert recent change in debug info for vector array types
7df79970bfec96e186cd50ac951f7017c2109a13 RISC-V/doc: Correct the name of `-mriscv-attribute'
fa16bb8ac0aba681bc9242f9a9717824c4867f91 RISC-V/doc: Correct the formatting of `-mstack-protector-guard-reg='
e9ee752bbe2cc5632b803b01dc7c98ff214aede9 RISC-V/doc: Add index references for `mrelax' and `mriscv-attribute'
f9d4c3b45c5ed5f45c8089c990dbd4e181929c3d Lower complex type move to enable vectorization for complex type load&store.
78d5e125c008d87cb2e1c08a9ff2a02d4214ffcf Move pass_cse_sincos after vectorizer.
5f59d0f2d9fa921c04d75c39592e603cfa2b1324 Improve SLP codegen, avoiding unnecessary TREE_ADDRESSABLE
6877993c4da49315151e9d912408480070144dd3 Add alias disambiguation for vectorizer load/store IFNs
375668e0508fbe173af1ed519d8ae2b79f388d94 tree-optimization/106379 - add missing ~(a ^ b) folding for _Bool
605b64251c78f29da32ed807413971339f27d13b Extend 16/32-bit vector bit_op patterns with (m,0,i) alternative.
3c4af0f0549a07799d76e9e48d3d3bd85197b92a tree-optimization/106387 - properly create SSA name for realigned load
0bc1566dec0cab9410723c96d2ef3280fdab8e8e testsuite: Add -Wno-psabi to pr94920 tests [PR94920]
cc078cf85295ec5d0a63a16afbd045efac0d455e opts: Add an assertion to help static analyzers [PR106332]
98cf74a2ad893d26de81911e571b634a282a61aa RISC-V: Add RTX costs for `if_then_else' expressions
94f5a8f0d4910be2d861f7a9699e93efd609d042 RISC-V: Split unordered FP comparisons into individual RTL insns
b234f5240cafe63c124a8457015aa0447d6db525 Avoid vect_get_vector_types_for_stmt
b64e937ccde286278743e8fdffea494faa46c214 openmp-simd-clone: Match shift types
ffe4f55aa1bb18cc2793a4335450f34c33c9d01c [RSIC-V] Fix 32bit riscv with zbs extension enabled
cc01a27db5411a4fe354a97b7c86703c5bc81243 middle-end: Allow backend to expand/split double word compare to 0/-1.
190776773516955df480bfa75731c34c5aaf2306 c++: Add support for __real__/__imag__ modifications in constant expressions [PR88174]
e230261073950e554319f56716d2b17c09a28658 soft-fp: Update soft-fp from glibc
27d68a60783b52504a08503d3fe12054de104241 RISC-V: Support _Float16 type.
bd159a7660bf1cac2b884ffbf6667bb64189017f RISC-V: Support zfh and zfhmin extension
c352361b5eec003d5f26feaf1ef58a0c55f659ad RISC-V/testsuite: Restrict remaining `fmin'/`fmax' tests to hard float
3496ca4e6566fc3c5f1093a0290bb88c34d368f8 RISC-V: Add runtime invariant support
03119249b9cfedb48e910b8df6a832b206cced2b gcov-dump: properly use INCLUDE_VECTOR
7f5ec900e53f6c7f7c06c641b4fb303ebdc83785 RISC-V: Standardize formatting of SFB ALU conditional move
e66cf626c72d5872fc3181e81535afbff7263287 Improve uninit analysis
21e7d87a901d45f0cb5e5510d22bfbdb0d0ac6a1 middle-end: Fix issue of poly_uint16 (1, 1) in self test
72886fcc6269531bbf3d9a09b3d64644963bff0d libstdc++: Implement std::pair/tuple/misc enhancements from P2321R2
cb2daf5acce003300ee948a89860c0d13ebcae79 Fix PR 106600: __builtin_bswap32 is not hooked up for ZBB for 32bit
e5e6983c3da53729e58a32af1d531ea74b3dbf5d Fix PR 106601: __builtin_bswap16 code gen could be improved with ZBB enabled
dec5faa2b2f0d311daa6defd4b4f3c1965748ddf Fix PR 106690: enable effective_target_bswap for RISCV targets with ZBB enabled by default
43e741478e3db0f319246475a585af51291b0101 [RISCV] Move iterators from riscv.md to iterators.md
3f9061d95d5835ef0d3c46de1076d62d27513e6b [RISCV] Move iterators from bitmanip.md to iterators.md
7770e0ad8f4bcd2c7852fa88eb7d5235f68a811d [RISCV] Move iterators from sync.md to iterators.md
380b8fd96e10c45ce8470b906037cf487ac3f91f [RISCV] Add the list of operand modifiers to riscv.md too
473d7aad848fe6ec151e7445e06c6e06ee4bd576 [RISCV] Add %~ to print w if TARGET_64BIT and use it
b7d4b734f2d81eccb67903e4fa8f94249238d39c [RISCV] Use constraints/predicates instead of checking const_int directly for shNadd patterns
95989ab39bbedd34e6f508de3109cb5c17db433e [RISCV] Use a constraint for bset<mode>_mask and bset<mode>_1_mask
2c721ea9473ad7615bb47b66509097bd254bb839 [RISCV] Fix PR 106586: riscv32 vs ZBS
2a5549f1cc8a6ac58a7b19613e788ec5c41ac89c [RISCV] Add constraints for not_single_bit_mask_operand/single_bit_mask_operand
df5204ddd4b8e3a2d02bb3ad5bcdb9d636b02537 [RISCV] Fix PR 106632 and PR 106588 a few constraints in bitmanip.md
b842690086b588349637125c114d5fdcbb79531f RISC-V: Add RVV instructions classification
31380d4b7925912b9c34afe8cdb8dffe6cd50b94 RISC-V: Add RVV registers
7b9b6969a99725a171ee0ad4006cc39b0f7abf77 RISC-V: Suppress -Wclass-memaccess warning
25c2a50cc343eb7c2500b69a6556551d5221393f vect: Tighten get_related_vectype_for_scalar_type
5edc67b773372bf013f98a357912381d99de65f5 Split code out of vectorizable_slp_permutation
5551501e84dd51b569801c0e52b24f9e30124166 Split code out of vect_transform_slp_perm_load
2bac880a19633b96608548b412739379df1c10dc Make graphds_scc pass the node order back to callers
8c6952abc8ceff1a25b78506315959240cb73d41 Rearrange unbounded_hashmap_traits
61c4c989034548f481d1f10198447be27fb9a55f Extend SLP permutation optimisations
f134a25ee8c29646f35f7e466109f6a7f5b9e824 omp-simd-clone: Allow fixed-lane vectors
15433c214df295f2281a90fcf283355b21beca0e vec: Add array_slice constructors from non-const and gc vectors
a99b53f7e1860b96b67f069eb7965fcbac6594f6 middle-end: Fix unexpected warnings for RISC-V port.
68c61c2daa1f3e4c4c9fbe166f001b7531ffaa4f vect: Fix stray argument in call to dump_printf_loc
4d5660907c2b4c301fcbdc3dc713879fa31afec0 libstdc++: [_GLIBCXX_DEBUG] Add backtrace generation on demand
e9f827d79102001d5f0593f0f9e01ab72b2aec9a RISC-V: Fix riscv_vector_chunks configuration according to TARGET_MIN_VLEN
45f1287268200ffd551faca83d5e819b279ade9f RISC-V: Fix comment in riscv.h
e8089aff3602447cd66ea723802d43cec4e7ec02 RISC-V: Add RVV constraints.
8fe75147a948ceab6fb9afbe0ee698517ce1dda0 RISC-V: Add csrr vlenb instruction.
e8c83ab9d5142a305bbd75c7ff0e41eae38433df RISC-V: Add vector registers in TARGET_CONDITIONAL_REGISTER_USAGE
ca8f4e8af148694ae2fd444a0cdcf713910d23fd middle-end: Add MULT_EXPR recognition for cond scalar reduction
d2694766dcfff0278fa93d581340a10b150c0f44 vect: Try to remove single-vector permutes from SLP graph
7e0db0cdf01e9c885a29cb37415f5bc00d90c029 STABS: remove -gstabs and -gxcoff functionality
5ca9980fc86242505ffdaaf62bca1fd5db26550b Add TARGET_COMPUTE_MULTILIB hook to override multi-lib result.
d72ca12b846a9f5c01674b280b1817876c77888f RISC-V: Implement TARGET_COMPUTE_MULTILIB
eab511df13ca6abb24c3c2abb0f420a89c91e310 vect: Ensure SLP nodes don't end up in multiple BB partitions [PR106787]
67b6d1be0623de1a8aa32fe249bfa0129c55b11a vect: Use better fallback costs in layout subpass
77e8e405a770bc40b304cfa55081575cf88f2b31 RISC-V: Support Zmmul extension
ae97ba1efcd66d73d3631addf4c09f55e12d34f5 RISC-V: Fix division instructions for `m` with `zmmul` extension.
0bd514107de7b0f643aa72554b3bdb5aeb5aa0f5 openmp: Be consistent on parsing offsets between normal sink vector and omp_cur_iteration - 1
e55674b86a10e695cea2f45c0472402b97cc2dfb tree-ssa-forwprop.cc: Adjust res_type when operands have differing vector lengths.
0a4a2667dc115ca73b552fcabf8570620dfbe55f tree-optimization/106754 - fix compute_control_dep_chain defect
c13223b790bbc5e4a3f5605e057eac59b61b2c85 Extend vectorizer to handle nonlinear induction for neg, mul/lshift/rshift with a constant.
338a5b0d7da84ef1f6c01dd96abf2c6bc830f403 vect: Fix scalar stmt typo in vect_optimize_slp_pass [PR106886]
6aafd6b797d823fa4e888c36e08f9577137809c6 RISC-V: Suppress build warnings
93b09bf3246f413b8e469ebfd8ce43947c0073a6 Check another epilog variable peeling case in vectorizable_nonlinear_induction.
e3c4a86e6b98b334b1a20f2529e6c59f6e19f73d RISC-V: Don't try to vectorize tree-ssa/gen-vect-34.c
d0c73b6c85677e6755b60fa02d79a5c5e1a8eacd Support 64-bit vectorization for single-precision floating rounding operation.
a8bb495a5627bba44407dedbe38653bb0432d811 replace "the the" typos
4a773bf2f08656a39ac75cf6b4871c8cec8b5007 vect: Fix missed gather load opportunity
1005c89431cc78a68762643e1bc7249c3959927e vect: Fix SLP layout handling of masked loads [PR106794]
eddbb81f1254f025d6f1b6b8e7554aa9a3830302 Don't check can_vec_perm_const_p for nonlinear iv_init when it's constant.
cbaa0ed34e1429dd9861350532534a85a07d220d Fix typo in floorv2sf2, should be register_operand for op1, not vector_operand.
4bdf739f835520ccbc433dc9eac461895741f317 tree-optimization/99407 - DSE with data-ref analysis
b4feb49cf308b344fba6a72137df58de382fcb9d RISC-V: Support poly move manipulation and selftests.
b2fe02b476afc1cddb3abcf26ec4b1e072a9401b RISC-V: Add RVV machine modes.
7d4df630c6cfb1909288a2796ec2f8b9ec4e8486 RISC-V: make USE_LOAD_ADDRESS_MACRO easier to understand
323c38c915f34883439e9e53b9eac5fe07cb8378 Fix typo in chapter level for RISC-V attributes
1b74b5cb4e9d7191f298245063a8f9c3a1bbeff4 [RFA] Minor improvement to coremark, avoid unconditional jump to return
03f3365742a9341992f0c8fc751e2d143e49f95d RISC-V: Add ABI-defined RVV types.
f758d447d7f4699253c9f8ee345ba9b8357cdb22 Check nonlinear iv in vect_can_advance_ivs_p.
32f86f2b54dc97cb6a40edef421b6a30c3bd1c04 RISC-V: Add '-m[no]-csr-check' option in gcc.
75c0899493cd84e64bd30210e848d0d1e9979494 RISC-V: Support -fexcess-precision=16
4dcd340ebaae8213eeae89894b5ecdf61b0eb100 Document -fexcess-precision=16 in tm.texi
48960b6897e6e7749def5370119aa4888ccf54b1 vect: while_ult for integer masks
18f176d0b25591e2880bc5ef453ce0834f9e0e2a libstdc++: Mark headers that must be hosted as such [PR103626]
7cc9022f8d5c5cc02cc4f8af2f27184a81536fcf libstdc++: Disable hosted-only tests [PR103626]
b77bcdf445685f28dae9e42b69e006801d653001 RISC-V: remove deprecate pic code model macro
7d935cdd1a6772699ec0ab4f93711928ca4d30a1 RISC-V: Introduce RVV header to enable builtin types
49192c41de94b2746cd33366134b6aeaefa6ca2a c++: lvalue_kind tweak
146e4591403239d662f36cab2d8b78a47cd01bd2 libgcc: Decrease size of _Unwind_FrameState and even more size of cleared area in uw_frame_state_for
684d238b8cd7e8222d9e66457815f2a63178730b RISC-V: Add newline to the end of file [NFC]
99e9796ca1e9afcf820214353756a9a140d89be3 RISC-V: Adjust testcase for rvv/base/user-1.c
d0bbecb1c418b680505faa998fe420f0fd4bbfc1 RISC-V: Add riscv_vector.h wrapper in testsuite to prevent pull in stdint.h from C library
1627d05240da3b1a985b1b2006b7a9f562fe9d43 RISC-V: Add missing vsetvl instruction type.
d2efb10a19b3948e48a2d9273b294db4e1d65296 RISC-V: move struct vector_type_info from *.h to *.cc and change "user_name" into "name".
25413fdb2ac24933214123e24ba165026452a6f2 vect: Teach vectorizer how to handle bitfield accesses
fcb94f551f29587f04dac0e9b99c98094479835d RISC-V: Move function place to make it looks better. [NFC]
ef0d7978914b89021d66df3baf03ccc103cf7467 RISC-V: Refine register_builtin_types function. [NFC]
0af2b2f241cbac81a6af503cc4d575a9a0aaf7c0 RISC-V: Apply clang-format for riscv-vector-builtins.* [NFC]
fbf423309e103b54f7c9d39b2f7870b9bedfe9d2 RISC-V: Remove TUPLE size macro define. [NFC]
7f9a7465c863e482708d2a00f5f7ff91ae3a7e0b vect: Don't pattern match BITFIELD_REF's of non-integrals [PR107226]
9f0d4adabe2035886a1aa8d2ca990a90de000613 ifcvt: Fix bitpos calculation in bitfield lowering [PR107229]
4b7966191a69238c6d6fd5537b3e77c3a4027eb2 machmode: Introduce GET_MODE_NEXT_MODE with previous GET_MODE_WIDER_MODE meaning, add new GET_MODE_WIDER_MODE
e5139d18dfb8130876ea59178e8471fb1b34bb80 tree-optimization/107247 - reduce SLP reduction accumulator
98e341130f87984af07c884fea773c0bb3cc8821 c++: Implement excess precision support for C++ [PR107097, PR323]
0ea578e98bebca08bcc8201c7709087f7ef15e1f RISC-V: Reorganize mangle_builtin_type.[NFC]
59af5e0bdadb1e47cb7f727bc608b2814e48fe27 RISC-V: Fix format[NFC]
46a8e017d048ec3271bbb898942e3b166c4e8ff3 Vectorization of first-order recurrences
612de72b0d2904b5a5a2b487ce4cb907c768a947 GCN: Restore build with GCC 4.8
aae016f99b121b55fc1bcdfc2403fd22f04fa2df ifcvt: Do not lower bitfields if we can't analyze dr's [PR107275]
92ef7822bfd4ea3393e0a1dd40b4abef9fce027f tree-optimization/107302 - fix vec_perm placement for recurrence vect
e0403e95689af7d562c7d04f706e9e25115747ff ipa-cp: Better representation of aggregate values we clone for
656b2338c8f248d9205b6e9d5e4d9cc43228dd5e ipa-cp: Better representation of aggregate values in call contexts
1442e2031e0bc2d0a5bf88ef3c92c5410e044bab Canonicalize vec_perm index to make the first index come from the first vector.
ba281da28d34f9a78a07f6ee56ad2c754447966e libstdc++-v3: Implement {,b}float16_t nextafter and some fixes [PR106652]
5d6e834ecf212e7fc6f585b154af224d2e38c749 vect: Simplify first for shifted value generation [PR107240]
5362b5cc8dba9de70904613fff1d5391a9c087ce Avoid PHI - PHI recurrence in vectorization
e10ca9544632dbff4759b4b92886cd96d0b9bdfe vect: Fix vectype when widening container type in bitfield pattern [PR107326]
cbd505700e09cfea8bdaa93ad6bd0514372e9034 RISC-V: Add RVV intrinsic basic framework.
f56d48b2471c388401174029324e1f4c4b84fcdb RISC-V: Add RVV vsetvl/vsetvlmax intrinsics and tests.
fa553ff26d96f6fecaa8f1b00649cfdc6cda5f5a match.pd: Fix up gcc.dg/pr54346.c on i686-linux [PR54346]
bdac4b47cbdac52c7082c02f54ed07197161cb4d RISC-V: Add type attribute for atomic instructions.
2cc41601d9a948e8d612a21c3b9a44ce0b977747 c++: Don't shortcut TREE_CONSTANT vector type CONSTRUCTORs in cxx_eval_constant_expression [PR107295]
65908ac84b840ded3331e000d303d0a5b4b426c8 RISC-V: Fix REG_CLASS_CONTENTS.
3eea8c6f4ba9356726879aa4e21b99ad1ad5662e RISC-V: Remove unused TI/TF vector modes.
f84e4fb44aa26b71fbc64e0532fd24d96e5caa3f RISC-V: Replace CONSTEXPR with constexpr
6bfea64164c3f1989d34656ab96d03a7cda2143e RISC-V: Support (set (mem) (const_poly_int))
97d1ed67fc6a5773c8c00875bfa3616a457cf5f9 RISC-V: Support --target-help for -mcpu/-mtune
5a20a4705c960ac323d1fe25f766e1204e0c98bd riscv: fix cross compiler
958014f369c8817184af110f8eb2c433a712fd0a vect: Fix wrong shift_n after widening on BE [PR107338]
19295e8607da2f743368fe6f5708146616aafa91 tree-optimization/100756 - niter analysis and folding
0cd11d301013af50a3fae0694c909952e94e20d5 RISC-V: Add h extension support
0ef04aa86a4c7a7535ef1fac02c2457282bc9172 RISC-V: Adjust table indentation in commnet for riscv-modes.def
86654b2cc167b540f4f144549b80748ce0054729 RISC-V: Recognized Svinval and Svnapot extensions
f556cd8bd7929be8b73c66d55f98feac8c9ef1ee RISC-V: Support load/store in mov<mode> pattern for RVV modes.
7e924ba3474b96a6c0b87c38cc4fca7af8d3910c RISC-V: ADJUST_NUNITS according to -march.
4329d111f48cba9ea560fc0a36f4cb5a290decb2 RISC-V: Fix epilogue generation for barrier.
e09335728d3f9bc177eac2f7dff79715e0aa67c9 RISC-V: Minimal support of z*inx extension.
ac96e9068ce7dcaca992fde7f1551ffe8837b723 RISC-V: Target support for z*inx extension.
6b252dc96b52f5ab6f399c3f6b0c0b6614a36913 RISC-V: Limit regs use for z*inx extension.
27065374f172f05110b68fe1f452eed414c837bd RISC-V: Add zhinx/zhinxmin testcases.
a33d623d2d3a78f5ef6f9e854946303e063eef63 c++: Fix ICE on g++.dg/modules/adl-3_c.C [PR107379]
225f9c8805fb1ba68a877383095f38a9563526ee testsuite: Adjust vect-bitfield-read-* with vect_shift and vect_long_long [PR107240]
0607307768b66a90e27c5bc91a247acc938f070e Fix target selector syntax in 'gcc.dg/vect/bb-slp-cond-1.c'
826df6d0cc706bf83cdb228b43f9b4890e8b2fbd Adjust gcc.dg/vect/pr100756.c for V8SI and V16SI
084128583212bd64308f50c2ab5f4c03be40e48c tree-optimization/107435 - ICE with recurrence vectorization
95decac3ce8c8c7c5302cd6fac005a10463de165 vect: Reject non-byte offsets for gather/scatters [PR107346]
4fe34cdcc80ac225b80670eabc38ac5e31ce8a5a c: tree: target: C2x (...) function prototypes and va_start relaxation
6913cad2a38bc406b137b06d579b650f6fe9a2e6 Enable V4BFmode and V2BFmode.
1b07d374765dd811cbb8b3e05764aef3b1754ff2 RISC-V: Change constexpr back to CONSTEXPR
a3b58f28b8cbf524ae2417e1cb1813864a1d8a5d RISC-V: Libitm add RISC-V support.
2b0e81d5cc2f7e1d773f6c502bd65b097f392675 c++: per-scope, per-signature lambda discriminators
a1a6b912b5f905e768da4d0f434591b4d523be49 RISC-V: Add Zawrs ISA extension support
20d5dca80b82df9b1295359edb44eb08c45c4334 testsuite: Fix gen-vect-34.c with vect_masked_load [PR106806]
32a06ce38a38bf37db468f0e6c83520fcc221534 c++: Quash -Wdangling-reference for member operator* [PR107488]
3c28d6a3a018e9acb7af1422d6263661f69d5f94 d: Add support for vector comparison operators
8408120fecc56385b316dafec1bdfe3aac61fc05 vect: Fold LEN_{LOAD,STORE} if it's for the whole vector [PR107412]
f471cb71c86c1e7a3dead324142bdf880f00a3da libstdc++: Implement ranges::cartesian_product_view from P2374R4
c63539ffe4c0e327337a1a51f638d9c8c958cb26 sphinx: copy files from texi2rst-generated repository
e7c8f5005bf87e4bd95b25fb31430eef7e58097e RISC-V: costs: handle BSWAP
3ed1b4ce7c9bdf8c777d12da0f5fe4cae8ba7c8e sphinx: add missing trailing newline
2f6cb9c51a933de19cd88f4c9180ac9cf5093522 RISC-V: Fix selection of pipeline model for sifive-7-series
5576518a5667ad826937125a19b7c59c34d8733c RISC-V: Add RVV registers register spilling
f90cb39235c4971c4399c782d4d7566242b5886b RISC-V: costs: support shift-and-add in strength-reduction
43435c7eb0ff60f02838674efd99df93852a92cc RISC-V: optimize '(a >= 0) ? b : 0' to srai + andn, if compiling for Zbb
8beff04a325ba3c3707d8a6dd954ec881193d655 middle-end: Support not decomposing specific divisions during vectorization.
b4fca4fc70dc76cf18406fd2b046c834d976aa90 RISC-V: Add basic support for the Ventana-VT1 core
991cfe5b30cb06611aa03d8c67860552785faba8 RISC-V: Add instruction fusion (for ventana-vt1)
eab3d2d17dd8fedc856cf175a3f2174770ecb64d riscv: bitmanip: add orc.b as an unspec
bcd5f98cbe3d924f17f616fa1a71157b7e981584 Revert "RISC-V: Add instruction fusion (for ventana-vt1)"
aa37a91cab19855ae6b0c6660eff8511b7a81436 Revert "RISC-V: Add basic support for the Ventana-VT1 core"
dc95e1e9702f2f6367bbc108c8d01169be1b66d2 Optimize VEC_PERM_EXPR with same permutation index and operation
c717a92dd89321eeb74aaa3daeb32354ac588d20 RISC-V: Zihintpause: add __builtin_riscv_pause
136029059686fed2d99c755baf35f98553fc0232 c++: Implement CWG 2654 - Un-deprecation of compound volatile assignments
f58e6d42fc555ee471594ac57bccaa8a3fb833aa doc: invoke: pru/riscv: Fix option list formatting
32462550f2803aafb726b5ae20d4d95ce36dcd9c RISC-V: Split "(a & (1UL << bitno)) ? 0 : -1" to bext + addi
ac74b3f82b339569b34dc9d1330c2faf74a1c82a RISC-V: Split "(a & (1UL << bitno)) ? 0 : 1" to bext + xori
629897ed80512a8618e08673c03d8482cbc42eef libstdc++: Improve performance of chrono::utc_clock::now()
a62d957342e3e9ee9bda812f737279f1166e03ba RISC-V: Optimize RVV epilogue logic.
928bc5b863f126189753e45ef45a40265ae028c5 Fix typo in gimple_fold_partial_load_store_mem_ref
705bae2351a870dc3ff59db47fa0de6baaf829c8 Enable shrink wrapping for the RISC-V target.
1957bedf29a1b2cc231972aba680fe80199d5498 RISC-V: bitmanip: add splitter to use bexti for "(a & (1 << BIT_NO)) ? 0 : -1"
0045d254c010bf5eac55903780c67f725192cfb3 RISC-V: Optimize masking with two clear bits not a SMALL_OPERAND
ee892832ea19b21a3420ef042e582204fac852a2 Fix PR 107734: valgrind errors with sbitmap in match.pd
23d9f62c50d935462ecda5516746037a474c25cd RISC-V: allow bseti on SImode without sign-extension
acbb5ef06ee97849ecd5412ab56c1dff0f0d2fcf RISC-V: Optimize branches testing a bit-range or a shifted immediate
30c2d8df173a6f3ca145cda9f9e261616fca8467 RISC-V: split to allow formation of sh[123]add before 32bit divw
787ac95917a666b3d186e2d5afec07ee5b75c6df RISC-V: Optimize slli(.uw)? + addw + zext.w into sh[123]add + zext.w
bc6beecb4d64fcd82988f840fdad45a69d73c7bb RISC-V: Use bseti/bclri/binvi to extend reach of ori/andi/xori
60d2bcc55bcc0991c0e58e97edf4a69e847e82c6 RISC-V: Handle "(a & twobits) == singlebit" in branches using Zbs
3142265dedd84c2f3dbf824f2d1b0c182e3c8b3c RISC-V: No extensions for SImode min/max against safe constant
4c7d336b673df2f3bf23bc5e7a69c445a2320c04 RISC-V: Fix ICE in branch<ANYI:mode>_shiftedarith_equals_zero
09b7993ab6d93716f77c03ff9a9165fa4b579f0d tree-optimization/107672 - avoid vector mode type_for_mode call
feeb0d68f1c7085199c3734e6517a3a4b58309ef ipa-cp: Do not consider useless aggregate constants
936d40b9ba9cdf8571bc5c366f3d3237cabc30c2 testsuite: Fix missing EFFECTIVE_TARGETS variable errors
ca73d4c80ea06087d9dd22594e5670bb15e21066 Fix recent rvv/base/spill testcase failures
71f3036b8a83da7fb559923bc80687ea1dabe14a sve2: Fix expansion of division [PR107830]
f7a41b5cfd7406da1f2e5a0f1f813521d3dc2bb2 RISC-V: fix stack access before allocation.
2200b7054638bbf157192a4dca23886dd420becb tree-optimization/107896 - allow v2si to dimode unpacks
868fc62791b6b0f10484cc6fa15f81911418e605 RISC-V: Avoid redundant sign-extension for SImode SGE, SGEU, SLE, SLEU
940d5b56990fdf171f49517ae102673817b9c869 riscv: improve cost model for loading 64bit constant in rv32
ffabce849033e57ebaf60029822b81e981681c21 Couple of testsuite adjustments
063ba138eaa15ceecf23a24906e0e19be98d509d tree-optimization/106995 - if-conversion and vanishing loops
81cf0354d5f81f2c7600a3bc7ae4600757286995 libstdc++: Remove unnecessary tag dispatching in std::vector
7c01d029fca669263b9c2dcb8837c42f7ae3a77f Make Warray-bounds alias to Warray-bounds= [PR107787]
fa144175c9ccaa10d7021d00f97aaa9eac59afec RISC-V: Add duplicate vector support.
3b16afeb3f6aacf64b9f9c50b7cb9805a9dfff63 RISC-V: Add attributes for VSETVL PASS
c126e144d407bdc36c4204ab1b76b584b6514786 RISC-V: Remove tail && mask policy operand for vmclr, vmset, vmld, vmst
cebd31757800158704d4a301076027df52418773 [testsuite] [riscv] uninit-pred-9_b bogus warning
93574914e462e87e42dddd66b0dfbb9627662f33 [testsuite] [riscv] skip ssa-sink-18.c
4ba94abf147fe7778a7541849ce27cafee74df9b libstdc++: Add hint to compiler about vector invariants [PR106434]
d2e782cb99c3116c389d6a9565678c4ffe267777 libgccjit: Fix float vector comparison
da7fb32d403759daefefc79dc251d2437c1b638c Fix ICE due to condition mismatch between expander and define_insn.
4505270128ef70538ea345f292e3eb85a5369eaf [PR102706] [testsuite] -Wno-stringop-overflow vs Warray-bounds
1e1847612d7f169f82c985b0b3a5e3301d6fe999 c++: fewer allocator temps [PR105838]
d081807d8d70e3e87eae41e1560e54d503f4d465 c++: avoid initializer_list<string> [PR105838]
bd0485f20f4794f9787237706a6308473a8e9415 c++: build initializer_list<string> in a loop [PR105838]
cf80a23e19db83b7cb2220371d21642aa08261e0 analyzer: handle memmove like memcpy
26295a069fd312a8be4a6cd96643117383145cc0 Treat ADDR_EXPR and CONSTRUCTOR as GIMPLE/GENERIC magically
4d9db4bdd458a4b526f59e4bc5bbd549d3861cea middle-end: simplify complex if expressions where comparisons are inverse of one another.
33be3ee36a7e2c0be383ec01b5fbc9aef39568fd vect-patterns: Fix up vect_recog_rotate_pattern [PR108064]
7450b25566b7a738edff6f554d97ba6e3dd95ac9 ipa-cp: Write transformation summaries of all functions
512098a3316f07d4b8bf0e035ab128ed2a50cb5e libgccjit: Allow comparing vector types
df049cb2153839fdf6c6bdc27acf5a5151f74a99 RISC-V: Note that __builtin_riscv_pause() implies Xgnuzihintpausestate
9bb7864877ab05bf951fad66c934845351b271ce RISC-V: Fix up some wording in the mcpu/mtune comment
64c986b49558a7c356b85bda85195216936c29a3 libstdc++: Diagnose broken allocator rebind members
6e56633daae79f514b0e71f4d9849bcd8d9ce71f initialize fde objects lazily
e4337398620098f96a7680ce748c9da178514acf RISC-V: Fix RVV related testsuite
b346e77f4d7b482df78f119819b1e06a544ef515 RISC-V: Fix vwrite_csr.c and vread_csr.c
61f9fe404933552a1858414f8181936d63a88ca2 RISC-V: Change vlmul printing rule
22dc669e109de9a76c74535cdf30e7922e0ef5c1 RISC-V: Fix RVV machine mode attribute configuration
9243c3d1b63b9092a82178392145f9e9d62423d9 RISC-V: Support VSETVL PASS for RVV support
c2c29fbebb9ea2e9e720a29d74b4e541e5c79953 RISC-V: Simplify ASM checks in gcc.target/riscv/rvv/base/.
e4433e075fc4ef06401c2255561ee6a508a49dcb RISC-V: Add testcases for VSETVL PASS
6f18836ca035d3d029cdc503e2a0d7d685a4d072 RISC-V: Add testcases for VSETVL PASS 2
76023293e6e82439643048a32cad36ddf9ba0e44 RISC-V: Add testcases for VSETVL PASS 3
5a1b66b77cfbf617494e1baad8cbf0fd2d1a0c54 RISC-V: Add testcases for VSETVL PASS 4
6c098f7d23db4dd98e7fed74a35416248397be40 RISC-V: Add testcases for VSETVL PASS 5
8aa045c97485d75e0b6eb1068464c0ddaa6beacb c++, tree: walk TREE_VEC (and VECTOR_CST) in natural order [PR101886]
d4a320f1ee4c76f09f95bdc583b90a9b049bbba0 testsuite/107809 - fix vect-recurr testcases
85112fbbfd939f87fb12a00e40ab423ddcfa8ca1 RISC-V: Fix muti-line condition format
9374f766a75bf898e717a5bbb58199a91528af0b RISC-V: Fix incorrect annotation
37fd10fd3eb42ea4487d93521a267ba08a9f8575 RISC-V: Remove side effects of vsetvl/vsetvlmax intriniscs in properties
b47b33c799bd4874a4c81fb71708ff1c3dd150ff RISC-V: Remove side effects of vsetvl pattern in RTL.
55d65ad4fd808c7806d770f03c26fa38672a4e28 RISC-V: Update vsetvl/vsetvlmax intrinsics to the latest api name.
a143c3f7a61c61bb5a5e099fdb59f3adbf99b6b3 RISC-V: Support vle.v/vse.v intrinsics
16eb1f43ab4e521ed4503e7766eee25da75eaeba RISC-V: Fix vle constraints
bd1fc4a219d8c0fad0ec41002e895b49e384c1c2 c++: template friend with variadic constraints [PR107853]
12b23c718cd29924a18e8cdd6790a9c04801c5f5 RISC-V: Fix ICE for avl_info deprecated copy and pp_print error.
681a5632e0afaa24cc2a3d50a30be08d27dbfd35 RISC-V: Fix ICE of visiting non-existing block in CFG.
3d365acf982e50588f944c46a46ec2fff59f5798 RISC-V: Add riscv_vector.h wrapper
b0a32b6e1b971ad9bfa97599d54f837fd16981dd Fixed typo in RISCV
3895dd7675197167789e3b346057be417eede943 riscv: attr: Synchronize comments with code
7c755fd9018821b79ddc32ee507897860510986c riscv: Restructure callee-saved register save/restore code
2e886eef7f2b5aadb00171af868f0895b647c3a4 RISC-V: Produce better code with complex constants [PR95632] [PR106602]
103f963e5cf6e7fe80395efc5fcede351420e25d Commit right version of last patch (missing modes)
31ec203247413f150d5244198efd586fc6d2ef5e RISC-V: Return const ref. for vl_vtype_info::get_avl_info
3b6cac2b44b384cd2091eaeaebeb3478c253a25d Compute a table of DWARF register sizes at compile
0425ae780fb2b055d985b5719af5edfaaad5e980 OpenMP: GC unused SIMD clones
cccef0517f3a73f638a96ee879e94ff2bece7298 ada: Update copyright notice
554bb9b61e2b76d4ace16a3f766b98ea887b17f4 tree-optimization/108314 - avoid BIT_NOT optimization for extract-last
c389991432da2bcc335a2b4fb7e502d28a6b3346 ipa: Sort ipa_param_body_adjustments::m_replacements (PR 108110)
b073f2b098ba7819450d6c14a0fb96cb1c09f242 tree-optimization/99412 - reassoc and reduction chains
fd1f5373b8647a5da2f7f4b42282e676a4b04d98 PR tree-optimization/92342: Optimize b & -(a==c) in match.pd
42d3f74323800d2ce5853dfb9180a5be1ff28d04 libstdc++: Enable string_view in freestanding
c841bde5ac2bd8915ecc974ff7623c8954fc1cf3 riscv: Fix up Copyright lines [PR108413]
4798080d4a3530d985efef68aa2e04ec7549b3c1 Add c[lt]z idiom recognition
ad4f8c4e375dd7603382ed3ff95bd184e1959918 tree-optimization/108482 - remove stray .LOOP_DIST_ALIAS calls
47b269caf87904fd0112e8c9e96884dd0313ed15 modula-2, driver, Front end: Revise handling of I and L paths [PR108182].
72e46b3c7ad5e3d2c69868a510c00707c356106a c++: vector of class with bool ctor [PR108195]
049a52909075117f5112971cc83952af2a818bc1 c++: TARGET_EXPR collapsing [PR107303]
7b8f4c85051501e9c804df2de1a08f11aa187e9d testsuite: Fix gcc.dg/vect/vect-fmax-1.c etc. on SPARC [PR104756]
e304e9283a97e28dc0074d8d30715d3f626b4e87 testsuite: Fix gcc.dg/vect/vect-bitfield-write-[23].c on SPARC [PR107808]
f91cd98ebc3599d514c42db23606b4b9474ef1fe RISC-V: Fix pointer tree type for store pointer.
856eec0d6b65c7b28b4b6c4fd6ccc10f2f6a22b1 RISC-V: Fix inferior codegen for vse intrinsics.
91a41201b5cea1d72cd84e0e8751289774fcba42 RISC-V: Fix vsetivli instruction asm for IMM AVL
005fad9d251b7ce6c009b646e213fbbf8d43a02b RISC-V: Fix bugs for refine vsetvl a5, zero into vsetvl zero, zero incorrectly
011ba384b343e99bb86eb3ac86c7628c4cd98f8b RISC-V: Fix wrong in_group flag in validate_change call function
8d8cc482ea49fd6fed81b47c948263fd82a1936b RISC-V: Fix backward_propagate_worthwhile_p
aef20243b842284587023306e922e483b2401f34 RISC-V: Simplify codes of changing vsetvl instruction
cca9c44eca42d71ef20fc00a261616ba66edd089 RISC-V: Fix bugs of available condition.
387cd9d37950a93225f19bc4054e45638dd7d29a RISC-V: Refine Phase 3 of VSETVL PASS
cfe3fbc678d7b69785d2b017d3ff3cd78cd91580 RISC-V: Cleanup the codes of bitmap create and free [NFC]
00fb7698f0b3ae14d6d472db0f8b64744c84678b RISC-V: Avoid redundant flow in forward fusion
b9b251b7b95c78b485022802908970c598d9f6e1 RISC-V: Refine codes in backward fusion [NFC]
27a2a4b6ed36784cc44e33451eed602f93ef3488 RISC-V: Rename insn into rinsn for rtx_insn * [NFC]
7ae4d1dfb8f43b99aea4e86e3ec8e48e9480045f RISC-V: Remove dirty_pat since it is redundant
acc10c793127d5683b19158fd89fd0d4f4fc9db0 RISC-V: Add probability model of each block to prevent endless loop of Phase 3
4f673c5ee287d73262ad9c1d59ca4d6db3809eef RISC-V: Fix bugs of supporting AVL=REG (single-real-def) in VSETVL PASS
6bc31c2c7c038e328cea88f67bd93415054a3db6 RISC-V: Add testcases for IMM (0 ~ 31) AVL
cb31b22751e66019c7a4f0d9d572cca795b78368 RISC-V: Add testcases for AVL=REG support
95dca4e7482fcb3ef65df55144ca306e270a8a02 RISC-V: Use get_typenode_from_name to get fixed-width integer type nodes
e3bcf0726207185af88dd3c8fbed35b05cd80ddd RISC-V: Fix incorrect attributes of vsetvl instructions pattern
ca8fb0096713a8477614ef874f16ba5bf16c48bc RISC-V: Change VSETVL PASS always call split_all_insns
5aa486e7740a0bc83168d806806d1149e6e90310 RISC-V: Reorder VSETVL pass location
89483d952aca74c2e053ab9bee18f3d25695e2c9 RISC-V: Change parse_insn into public for future use.
0f024ff988aeaacd8d0f967c5f841ab20fb40c19 RISC-V: Add TARGET_MIN_VLEN > 32 into iterators of EEW = 64 vector modes
4369d499f711933b8f204f896cb654423e99b039 RISC-V: Fix pred_mov constraint for vle.v
e577b91bbaa7075655de4da4b8af95216d8b1f6d RISC-V: Refine function args of some functions.
9b9a1ac14cdca6eef8dbcab0d33f3c03774a6c77 RISC-V: Fix bug of before_p function
6b6b9c680bc43c19b24a2e01ddc99f2c061e0511 RISC-V: Finalize VSETVL PASS implementation
d324d56221d68bd965ac5fc2c3e0eba48076bf60 RISC-V: Finalize testcases for final version VSETVL PASS.
ab39fa8c8fd72cc77f13ece3d6129760edfcfb8a RISC-V: Add vlm/vsm C/C++ API intrinsics support
931a042f7e6c3ee0741cf4365b15f4e27d364209 RISC-V: Add vle.v C API intrinsics testcases
4f6d7f9b6adeb4c9f280914ffeb3aa5f0acc3e80 RISC-V: Add vse.v C API intrinsics testcases
ce34fa309e05e4c417fc4ff96e6ab9e8dd058836 RISC-V: Fix vop_m overloaded C++ API name.
c17082867ebfea7d70f383f216204d4c2a689424 RISC-V: Add vle/vse C++ overloaded API intrinsic testcases
3caa3a3f1a0dbf347d38eadf27f00a209f3030c4 RISC-V: Fix testcases check.
7486fe153adaa868f36248b72f3e78d18b1b3ba1 Add support for conditional xorsign [PR96373]
0fd52972c600c432d9df74dad427243b916317a0 testsuite: Two adjustments to gcc.dg/vect/complex
43122c45607afb1d599a2c81484cdbc7d28ac830 RISC-V: Remove redundant attributes [NFC]
eb1c2960184e666db331cdaeef2c51cf97f7fee0 RISC-V: Add vlse/vsse intrinsics support
caa87b98fc37accc5db0ee1a2cbca97f883d04fd RISC-V: Add vlse/vsse C/C++ intrinsic testcases
3cd08f7168c196d7a481b9ed9f4289fd1f14eea8 riscv: Enable -fasynchronous-unwind-tables by default on Linux
6c9bcb6c7ec70aba260a388469fd88f31fe08d15 RISC-V: Add indexed loads/stores C/C++ intrinsic support
6dfacebd2d6458b0774c76b7b2afbcc22bc43e4c RISC-V: Add VSETVL testcases for indexed loads/stores.
9da40aae23180fc9d240b762e4fea154df546570 RISC-V: Add indexed loads/stores constraints testcases
12c42f87473ef604e1713ee038c8cf640b17bc41 RISC-V: Add vloxei8 C API intrinsic testcases
a9c45ce56a55c8a35724bb141276ef316ceed133 RISC-V: Add vloxei16 C API intrinsic testcases
106bd09fd1ffdfdb430073e513935b9c9a9dad2d RISC-V: Add vloxei32 C API intrinsic testcases
8ef1c4a7689ad1c28bbd86fd7eac12cceb7cd27a RISC-V: Add vloxei64 C API intrinsic testcases
126c6bac3d1b7391acf61e4a295b828d2fef5b4e RISC-V: Add vluxei8 C API intrinsic testcases
6e13f699f84437d00f304858b08831dfbcf947f6 RISC-V: Add vluxei16 C API intrinsic testcases
0451ce4444dc5c9f84dd323b228e707323399487 RISC-V: Add vluxei32 C API intrinsic testcases
afd7265818081276d7bc4c104b4e6efbc8013211 RISC-V: Add vluxei64 C API intrinsic testcases
878e57576086622ba822d5b35513771754989967 RISC-V: Add vsoxei8 && vsoxei16 C++ API intrinsic testcase
2b48e628b0f2f7c250c3157769e641e2c9a9ca6b RISC-V: Add vsoxei C API intrinsic testcase
e9ec6159070e5dbdf33d5353ab6b1d883351cdaf RISC-V: Add vsuxei C API intrinsic testcase
25a4d238d81ece682ad76e041abeabbbe23979e4 RISC-V: Add vsuxei* C++ API intrinsics testcases
22fb77702b1c373422b501246395e46aaa89124a RISC-V: Add vluxei8 C++ API intrinsic testcase
ed83c931db151f426d633adc6e61da9ed015d3db RISC-V: Add vluxei16 C++ API intrinsic testcases
c019f34e1f55cb2ce32cb79369251413c4ab7f86 RISC-V: Add vluxei32 C++ intrinsic API testcase
b85ba3c4b37ea60a81d4def8406caa868a881aa5 RISC-V: Add vluxei64 C++ API intrinsic testcases
44e194aa3f6cbbf67c6dbbcc98dd2e61ed98140e RISC-V: Add vloxei8 C++ API intrinsic testcase
1e5451c55b09f5587c12150c26a12ffefecf4454 RISC-V: Add vloxei16 C++ API intrinsic testcases
e5ce6efaab38d80fc32f43ca4331899a8afaea6a RISC-V: Add vloxei32 C++ API intrinsic testcases
e9b5a85238ac0a5b2df7f6b68b3e5a66f58f6988 RISC-V: Add vloxei64 C++ API intrinsic testcase
a190f583050630802438bce9aa854fdfa7a4433c RISC-V: Simplify testcase condition for RVV tests [NFC]
e66fec8e6ba35edf01f86c2bf6514109aba4ded2 gccrs: const folding port
245ce6f26a1688ad69a1802ec50fa865db409eec gccrs: Add guards against getting data from an empty vector
2a937fb5cf805c7311f1d9ecf98b60bedc922165 RISC-V: Add integer binary vv C/C++ API support
2db1fd76ebaa6da8c868bb610b3e36d1ef504036 RISC-V: Add vxor.vv C API tests
88a4dc078ad16b94e5f4c93d84c02fddf7d7936a RISC-V: Add vsub.vv C API tests
4703a573d1131d052ed5c05f108997e26a53f316 RISC-V: Add srl.vv C API tests
79d1e60cb8670efb778a504aac3fa1fe90df289e RISC-V: Add vsra.vv C API tests
f9979ac8a2c792c11ddd1b14733e68c12cad4667 RISC-V: Add vsll.vv C API tests
9d2fe103bfbcb4762d33a4bc06eb6ef827a9eabc RISC-V: Add vrem*.vv C API tests
a581639528a6cfbb17f4ec27a31ffcc2e4939bb0 RISC-V: Add vor.vv C API tests
7f51e62876c7ca6953cf39ab07c2e0bb196f4d59 RISC-V: Add vmin*.vv C API tests
aa89ce6a65afa0d27fdf305fc92c39bc12c5680b RISC-V: Add vmax*.vv C API tests
a542b1feeb209348bf168e4b6cf58a63d29e3208 RISC-V: Add vdiv*.vv C API tests
817d8f2ec5a7845cf63b80eff84b3733d9e088d4 RISC-V: Add vand.vv C API tests
c2674f5b913ddec9d0b94d555ffd326b7f113c8d RISC-V: Add vadd.vv C API tests
e96482d84ec801c43e651547ef70dfc86f9cbb62 RISC-V: Add binop constraint tests
6344011ae3203f49df2f75bc863d38d5469aad94 RISC-V: Add vadd.vv C++ API tests
e37c8f209e08a851a1d2f90a93c265c1fece61bd RISC-V: Add vxor.vv C++ API tests
768a8952539ca7dfb6a61f17595fa9f6ea1f27b2 RISC-V: Add vand.vv C++ API tests
f4463ea86a4b9855d204b8e8e612567017f07228 RISC-V: Add vsrl.vv C++ API tests
38e152f84b0667410a298cd487c38b70f7443c01 RISC-V: Add vsra.vv C++ API tests
147e602a4ddd342523eddb419b602fdc732a3897 RISC-V: Add vsll.vv C++ API tests
f4f00e44fd392ee75b45de7522027c1de3c43a75 RISC-V: Add vrem*.vv C++ API tests
e2e93b9dee938f4f757cf2f1dae09a8cd77eded4 RISC-V: Add vmin*.vv C++ API tests
a97767c30b1f7e58a32f80440420f59260b50dbf RISC-V: Add vmax*.vv C++ API tests
77906341efc5cb69aada0645c22850bc83c1d42c RISC-V: Add vdiv*.vv C++ API tests
209f02b0a9e9adc0bf0247cb5eef04e0f175d64e Don't peel nonlinear iv(mult or shift) for epilog when vf is not constant.
a02aacf55a35876ddc1e534778dc37fae29054f6 RISC-V: Fix bug of TARGET_COMPUTE_MULTILIB implemented in riscv.
61122017132366189b43bc15402c34d5d9615024 RISC-V: Add RVV shift.vx C/C++ API support
fae260ebfb19c7cabadda38e40f37b85ed93768e RISC-V: Add vsrl.vx C API tests
f890b9e76f98b00a063a4fa9913c715fa3196ab0 RISC-V: Add vsra.vx C API tests
6c93c1fb3969648cb9b4e330c796d6520aa0c9e8 RISC-V: Add shift constraint tests
b0a2abcd79e3c5ec63ac5b94e8b834c91693f612 RISC-V: Add vsrl.vx C++ API tests
f08acad732e35396136f9fe3a23f52ec85ca56ce RISC-V: Add vsra.vx C++ API tests
f3a10f4fff3d6751aa65df58b8629f84a0c04545 RISC-V: Fix constraint bug for binary operation
167b04b9b8a2becfd23b8ccf7f09016bbd013e12 RISC-V: Remove unnecessary register class.
cad2412cc84518195fceb2db31e82e6df7e5a2c2 cgraph: Handle simd clones in cgraph_node::set_{const,pure}_flag [PR106433]
740a3be7df29b280f39a04c441fd4917af4eef5e vect: Check gather/scatter offset types [PR108316]
a035d133809430d2b2019d5de6c42d358eb8c7aa RISC-V: Add binary vx C/C++ support
649107f6d1f0d5cefa623f41eb6b69f3c8f89580 RISC-V: Add vmul.vv C API tests
1b0bd520f5ab03807c0be297d2d210bed2e44cc7 RISC-V: Add vmul.vv C++ API tests
e9d5e4ac35753b0adabed4c18c5e0f417f8827e5 RISC-V: Add vxor.vx C API tests
fe9e2eccb9e9e82779fa60a8a2f5cb0f62ac399e RISC-V: Add vsub.vx C API tests
d2d6b0915e04d82ce979fbf4d7ac47c0624827b8 RISC-V: Add vrsub.vx C API tests
b65e8a1900205ab9b69c8ab24e4ea2fdfd459c47 RISC-V: Add vremu.vx C API tests
dc4d66d543b16474173b4998e87113ae773f31fb RISC-V: Add vrem.vx C API tests
76cd8e80058df1d349d88103a0ab73ec0dec29b6 RISC-V: Add vor.vx C API tests
ac843ce70e695959a2f3652c55449421f4958c64 RISC-V: Add vmul.vx C API tests
f82338eca2f754b55512bbf67a6f08e45eaa56ae RISC-V: Add vminu.vx C API tests
5255664d4ab144b35d93d67e2251b79f21d817ad RISC-V: Add vmin.vx C API tests
a524f0c44f141a90f5120589575b24f096fce91a RISC-V: Add vmaxu.vx C API tests
e6a085499cbf78c2cb877d237e0dfdc358ec52c3 RISC-V: Add vmax.vx C API tests
8f1320e09764a5855a4eaaafdd9134d6d0be8b1d RISC-V: Add vdivu C API tests
5442df6cbdf32a53fd433b6248f11a54c9ecb900 RISC-V: Add vdiv.vx C API tests
9f35eb5d51bb4a3857633690c951ecb344a18e84 RISC-V: Add vand.vx C API tests
f7bff05f5e9f0c74ae42b1c5fe657911f6708b96 RISC-V: Add vadd.vx C API tests
ce4b00f393b2c470b2c18e7fda1286d71408e41c RISC-V: Add binary op vx constraint tests
7d8c4a59fdf1dd0bd5303eb50761b114fd7bd8b7 RISC-V: Add vxor.vx C++ API tests
525274d82f3d3220e5740cfd4e23dd1e619139f4 RISC-V: Add vsub.vx C++ API tests
f0cd94672fc5a94a7ae61b7c18c4ec4d662a1452 RISC-V: Add vrsub.vx C++ API tests
1e6324f7f36fc3850032b13577b2473a6a3d64bf RISC-V: Add vadd.vx C++ API tests
d862fd1832a8a1acee12490178780316719fd6fd RISC-V: Add vremu.vx C++ API tests.
988cc529af6132242727d0501ea6d620985a6c8d RISC-V: Add vrem.vx C++ API tests
6289b83ffe2b7ea21c9fa957fc6931d49202bd67 RISC-V: Add vor.vx C++ API tests
8c971d59a7c16247954a90335b50bb5b2cc88d34 RISC-V: Add vmul.vx C++ API testcase
679ba598453d7564ae52ad1cf98adb193b325354 RISC-V: Add vminu.vx C++ API tests
0e5ae1fad00c228f701f29c84b86e3add3c03847 RISC-V: Add vmin.vx C++ API tests
66979d72eb9651ead9655fbc5e4f8f9129ad9281 RISC-V: Add vmaxu.vx C++ API tests.
ae3ea1340de976f33ef01881f2ecc579610e2fec RISC-V: Add vmax.vx C++ API tests.
8189380d868d902120c91d166c3517fa79ed28f7 RISC-V: Add vdivu.vx C++ API tests
e0e32c3397e0fa378abbcea5e689b7b7c8782e9c RISC-V: Add vdiv.vx C++ API test.
edfc4402504fd512ba469219e2ed637f2921a1c2 RISC-V: Add vand.vx C++ API test.
76ab4084d033053f430c7429c2f2f3d2a76bc6b3 gcc/testsuite: fix excess warnings for mingw-w64
c129d22de6bde38edcc3a53ed73c0cc5033bb83a RISC-V: Fix VSETVL PASS bug in exception handling
d7f8c79a57e667cfc7888784457c4a0e6f2bdcda RISC-V: Add unary C/C++ API support
2855e29548443fae92d87761c6b3a4c63f1c9a08 RISC-V: Add vnot.v C API tests
340a770d9dc32a2673094d8a53b2d3d39dffc01f RISC-V: Add vneg.v C/C++ API tests
779e441103e834c9b973ae25956e4546543aec0a RISC-V: Add unary constraint tests.
4170a0f021faa12541dc02838d928844ce8351f8 RISC-V: Add vnot.v C++ API tests
eeb50b70354aa8f198d814ae254ba29e595470a9 RISC-V: Add vneg.v C++ API tests
7ad729a0df05938fc36c3c0b0c4dd6fa4fcd5eb1 RISC-V: Add saturating Addition && Subtraction C/C++ Support
b2691c96efd74c25ba69d6cf14e9f0b3dc48053b RISC-V: Add saturating Add && Sub vx constraint tests
098e7fc10e42e3a07c3fe10cf44159ea59e7374d RISC-V: Add vsadd.vv C++ API tests
77c9ee5e22e4ff70940c2cdef58fd8c8ae82f57a RISC-V: Add vsaddu.vv C++ API tests.
cc01b5c0659500cb72187b886ef38e2b410a3e6e RISC-V: Add vsub.vv C++ API tests
ae9b600f2d5236ee3cefc93d56afe6d33348ed9e RISC-V: Add vssubu.vv C++ API tests
cd92bd48c557e86eb60f1069ec839459483ea4ef RISC-V: Add vssubu.vv C API tests
bd182ae41bc2c81171e0bd8816864b1336fa81c0 RISC-V: Add vssub.vv C API tests
e5600572a1735f4edddca437e788e471c0d3eb30 RISC-V: Add vsaddu.vv C API tests
6a04629d5a0147328e69c4b08c89bd95f760b4b9 RISC-V: Add vsadd.vv C API tests
d6c18465cbb17b177613f99bdeba5679bb048884 RISC-V: Add vssubu.vx C API tests
1b7f3e20a2f405d95b89c5e7893cd2ec0809e666 RISC-V: Add vssub.vx C API tests
ed0c99027d4a843c2857c3383aa29f154d34f65a RISC-V: Add vsaddu.vx C++ API tests
933dce55100d0b6f3cb7d6499c909890ead3dd95 RISC-V: Add vsadd.vx C++ API tests
e5dd529dcdb1463230b2e2f700f79ed95d260eba RISC-V: Add vssubu.vx C++ API tests
3762ff2450c41b4e3ea5eabdffe344259f03bb22 RISC-V: Add vssub.vx C++ API tests
a1ca758fd5e98d87d382958e92af1d5733fe066b RISC-V: Add vsaddu.vx overloaded API tests
064a2d53a38fe55cafb0e00f5c7077e2bdf5a624 RISC-V: Add vsadd.vx C++ overloaded API tests
99fa5d94c41355f82f9f83d98faeaf58c6aa85fc RISC-V: Add vsext/vzext C/C++ intrinsic support
a2da134248bbfa0cdaf196e4c859ce5cf4bb1e80 RISC-V: Add vzext.vf8 C API tests
1d66166b0f7185ac8e54b97fcf5528ec1fd430e9 RISC-V: Add vzext.vf4 C API tests
91d0120e389a6d85279dd298028e1369a369070d RISC-V: Add vzext.vf2 C API tests
decfa1d5bc5878dbd77db4c523da49868de2057a RISC-V: Add vsext.vf8 C API tests
42666defc0d9a2aa4c152874008062bb67f48f59 RISC-V: Add vsext.vf4 C API tests
7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c RISC-V: Add vsext.vf2 C API tests
00c93929571619aa30f9321167f904d1cd0a73cf RISC-V: Add vsext constraint tests
221f26c9624586b5cec6c5bb8c0a63e21359d1f6 RISC-V: Add vzext.vf8 C++ API tests
522d385831bf6ccdc34a82c3701ebaa2e3bc6b6a RISC-V: Add vzext.vf4 C++ API tests
921f11c8cc2c5a170c405286eaf931f7b2ca8428 RISC-V: Add vzext.vf2 C++ API tests
74595dd5181813e6cca9464ec7ca04dccf029d4e RISC-V: Add vsext C++ API tests
8340bbad6a1a2a9b5b33ff12ebe435472cc34b50 RISC-V: Add vmulh C/C++ support
87c557e269685b59d97d7655d2ce8718e56af840 RISC-V: Add vmulhu.vx C API tests
ce756a1392b1f77b69cb9d5c92614cb3ff2c0f63 RISC-V: Add vmulhu.vv C API tests
f95ada62f3f0935de3b9b258c3ba36c1b0e85dd8 RISC-V: Add vmulhsu.vx C API tests
956c0c8c7dc47a6c6a1b4cd6429f746d6b3277c3 RISC-V: Add vmulhsu.vv C API tests
fa07f9da8b72e4a11c96200734383b4eed5b12c3 RISC-V: Add vmulh.vx C API tests
9ecdd261f72136a070f6b71d68a549186a36312c RISC-V: Add vmulh.vv C API tests
b9eabfee8494ccf913a252134dd998762a5bc024 RISC-V: Add vmulhu.vx C++ tests
5a792199d80d7a780b1ec506e29a282a66bd554f RISC-V: Add vmulhsu.vx C++ API tests
b81d711d189238d726ee7758bff40759d08b5d6d RISC-V: Add vmulhsu.vv C++ API tests
f18e96e6188242a4e1a4b0320aad5de8ca6d15fa RISC-V: Add vmulh.vx C++ API tests
d88110b07e73f9065a2e1d7b1ef306f628e65405 RISC-V: Add vmulh.vv C++ API tests
a1e42094e7ac684e556e3a1246516bce5ed5ecee RISC-V: Add integer widening instructions
9b1807548918dd4a1c6f88493dcce440990ab03c RISC-V: Add vwsubu.vx C API tests
8aa1e133b1257e8485526c9d902a599f496a52e1 RISC-V: Add vwsubu.vv C API tests
931b3d88313661128946775f9e8517c76111d891 RISC-V: Add vwsub.wx C API tests
14ac33c8e03cd9b1006a2fbb04ec47d32f50b742 RISC-V: Add vwsub.wv C API tests
524e491ab5370b8efd37dbcae241c5a4a1cdc30e RISC-V: Add vwsub.vx C API tests
2a2ab19d5594d1a5b7d964da1432d58ceca8c617 RISC-V: Add vwsub.vv C API tests
fcbe69a096a1c1b2b2a06c2f740e32e9166e9b99 RISC-V: Add vwmulu C API tests
697a877279b0f9d3827929f08028aec6964a469e RISC-V: Add vwmulsu C API tests
ee4f91db8ee78cec4e7a70b425475ac89b9f2f86 RISC-V: Add vwmul C api tests
011ec88dd2ba2bc065c678cf20431e11dc33a531 RISC-V: Add vwcvt C API test
f14f44d92f61c57afe351e4bb7672e43f204cb8b RISC-V: Add vwaddu.w C API tests
2daeb10c609c9349734ca33ee980641ab73b5519 RISC-V: Add vwaddu.v C API tests
7df7cbaaf5ebfd1c70b92212e959356d8401299e RISC-V: Add vwadd.w C API tests
c12ea7136ad9592a0f8bb0c37a02796ed5c49df5 RISC-V: Add vwadd.v C API tests
345b2aa4eb3be99f93ab5d13e454308704293890 RISC-V: Add constraint tests
8532ae57f30b55c599fb7905a64c3df221a2589e RISC-V: Add vwsubu.w C++ api TETS
0fca6d1ac50b809a75b8c354cd66e5b044b53179 RISC-V: Add vwsubu.v C++ API test
b406b86cad2330df2973692ae4d3a2e897cb1de3 RISC-V: Add vwsub.w C++ api TESTS
c95bc128c05dc2a8ce9cef9e6764b58cf907635f RISC-V: Add vwsub.v C++ API tests
ba839fb84bcfa723332fc4b38f969bb36a0a6600 RISC-V: Add vwmulu C++ API tests
307241cbaa9d183b57076bac7be2d3876d918e0b RISC-V: Add vwmulsu.v C++ API tests
7d010731e8bd5c4346b939a313a3ec68956130b7 RISC-V: Add vwmul.v C++ api TETS
98767d253c1c05258113d71829755bcae2dc15d3 RISC-V: Add vwcvt C++ api test
b840dad84da08a1cb95a7509367c5d4e04f9c521 RISC-V: Add vwaddu.w c++ API TESTS
0006e578d0aceac9c37ebfeca7e1a8c16ec102d5 RISC-V: Add vwaddu.v C++ API tests
ccfaa507361237ad314a1e1ba335fb976e4bb1c5 RISC-V: Add vwadd.w C++ API tests
316c83b158dbae2559f130fb7e44718c99941266 RISC-V: Add vwadd v C++ api test
5e620b36cd34b85b0e28c34160245d84bc5acd68 RISC-V: allow vx instruction use "zero" as scalar register.
cb44a16d212e9d0c402340fe6627501ca2e50fb8 RISC-V: Add vadc/vsbc C/C++ API support
b5e7450a1734f01b6453c2c56c3278954825a905 RISC-V: Add vadc.vvm/vadc.vxm C API tests
c2f4dc5810517f3c5465ecea4ce3820f655a0375 RISC-V: Add vsbc.vvm/vsbc.vxm C API tests
6483b8310337917b21a8722de811bf7637a777f6 RISC-V: Add vsbc C++ API tests
b7e4f61c3e703f38c5621d5114e776d245abdf73 RISC-V: Add vadc C++ API tests
dca23bf0bbe68c3880c9793b401cfc03890e6a0d RISC-V: Add vmadc/vmsbc C/C++ API support
c8c7b4b32d86ecf5f8768a5c162484ac2a6b0130 RISC-V: Add vmadc C API tests
bd5c5d2eaf1baecac73d21350fc257aa5f50f8bd RISC-V: Add vmsbc C API tests
485c710b4e698eaef62e4a0037a173a876734c21 RISC-V: Add vmadc C++ API tests
30eedd6a4fccbd3202490ad2dd483bfd1b48201e RISC-V: Add vmsbc C++ API tests
6271a07219a7d764ef59607836c01e0084c3d50c RISC-V: Add vnsrl/vnsra/vncvt/vmerge/vmv C/C++ support
10e999a3abdb676475a0d2bcf7d83188862cc85d RISC-V: Add vnsrl C API tests
eeec45d29238262e524ed40a04ee355f68656429 RISC-V: Add vnsra C API tests
fb03f2acfb724ba224de422f107cbece3efc7c34 RISC-V: Add vncvt C API tests
c1294253310014627d4294ae67eafef10c4c77e2 RISC-V: Add vmv C API tests
4852c719a1adccf9f6b41d5cb2b542f579b9c06f RISC-V: Add vmv.v.x C API tests
c0ea34be11c0da54c18b010ab51b97fc95657a4a RISC-V: Add vmerge C API tests
0b7dd2f4799fc184a36423723ad8652bfb2cf14e RISC-V: Add vnsrl C++ API tests
484ea18ffae0ffe48c054f7a975eeb183abcfc61 RISC-V: Add vnsra C++ API tests
9a1c81afd551ac66b6cb8011a2168ddcd7887576 RISC-V: Add vncvt/vmv C++ API tests
79ef372fa419191a3eb991f6f28671d96444b97b RISC-V: Add vmerge C++ API test
e09418f21dd79517cc321b7999e586e0d1518942 RISC-V: Add fixed-point support
71a1c2c67aa13ae59eef8f2b37fd364d1d18916e RISC-V: Add vssrl.vx C API tests
4e00937ec3eedb68b76babf60b56a1a4a58277a1 RISC-V: Add vssra.vx C API tests
5ca5ca30b6a220682cf98ad04647535421b3e51e RISC-V: Add vssra.vv C API tests
bbb168daecf38a0c9f28a388e51ffa15690f08b2 RISC-V: Add vsmul.vx C API tests
c156e8d7bcfbf8fc40bcd7088750d153be915c28 RISC-V: Add vsmul.vv C API tests
367a01e6a06cecf637db819cf0c4d4cf5085c37d RISC-V: Add vnclip C API tests
1580eda6c3dfdf6c72df96cad2c00298bee1c3c7 RISC-V: Add vasubu.vx C API tests
193a125c3fef20ff81cc91385be60f1d6ad1fb02 RISC-V: Add vasubu.vv C API tests
48e24473fe196e4b2a4d8aa27f5174795a9cd202 RISC-V: Add vasub.vx C API tests
4432ef4eca4b984c83f997032b6f5ee1e876b21c RISC-V: Add vasub.vv C API tests
6ad0002f1e376872c1fcefec9cba15209ddc3dbc RISC-V: Add vaaddu.vx C API tests
119e5d9aff3a950923d333b8fb2e19ea8482cc37 RISC-V: Add vaaddu.vv C api tests
5898e1f333be366f6e6bf35e5f85002a8cdc28b0 RISC-V: Add vaadd.vx C api tests
e85cb86e338a0fd9304c338ef2b37c3145de4d02 RISC-V: Add vaadd.vv C api tests
b7795fb143c2dfd5757f3949faeb07fedf676e0b RISC-V: Add vssrl.vx C++ API tests
02b0325269b6dca8c2da32bf3db4663a9190e6d4 RISC-V: Add vssrl.vv C++ API tests
7326a694da987a025f7491046c2489836f886a41 RISC-V: Add vssra.vx C++ API tests
49e538820819657de6ac5e37449f96e5081a7b30 RISC-V: Add vssra.vv C++ API tests
73dea8e64264c2afe311bde94c58f4ae0d2be785 RISC-V: Add vsmul.vx C++ API tests
7302972bcd59be0308f8f765463153331a9e4775 RISC-V: Add vsmul.vv C++ API tests
0906435e2b6d1f226679b6eac145d9f247559cdf RISC-V: Add vnclip C++ API tests
90ea2d28d470ace7ed7a988982d270fb8d03035f RISC-V: Add vasubu.vx C++ API tests
1a8c69e7ea6df4f1bdc2d453b364f1e6434184dc RISC-V: Add vasubu.vv C++ API tests
3d65ea07b472e70ac02e7c948c91d5422aa53534 RISC-V: Add vasub.vx C++ API tests
ff4d996600b6e2abea571070a4957f093eb4ba83 RISC-V: Add vasub.vv C++ api tests
2ec753302306aee65f7a8629a4bfe168d81b7ef0 RISC-V: Add vaaddu.vx C++ Api tests
0b1f45786f4983b6894c22141548768df9b123bf RISC-V: Add vaaddu.vv C++ api tests
e8a0c9e9d41fb39d150c6c5a4bfbb8a0639b14c4 RISC-V: Add vaadd.vx C++ API tests
2cd7cbaf51f0057d570406b2540796161af756a6 RISC-V: Add vaadd.vv C++ API tests
52009fa79cdb497b9e410bb4a5b54960a4a44463 RISC-V: Change the generation mode of ADJUST_SP_RTX from gen_insn to gen_SET.
89367e794613bdeb21df3e6fc0215f0acd553ef8 RISC-V: Handle vlenb correctly in unwinding
26f4b055d97804666d6d144b2af9b9dee0854354 testsuite: adjust patterns in RISC-V tests to skip unwind table directives
994224236e0231807681b62e880d3c2772c69521 tree-optimization/108782 - nested first order recurrence vectorization
ec23e9e25eb64bb066dc408fd498861b8587bec8 target/108738 - STV bitmap operations compile-time hog
acb51b5c801540c7c15236f9f5a6be893216584f RISC-V: Add integer compare C/C++ intrinsic support
fca68b0bbf8a8a42db2888337325d468e6f73f16 RISC-V: Add vmsne.vx C api tests
946ed63e6161dddcde458cfb09ff168fc4e7e32c RISC-V: Add vmsne vv C api tests
13a256448a58bc80ee5b564b4edf80b5bdcfb100 RISC-V: Add vmslt vx C api tests
85a8ad0a351d6a5774da8e42f98b27ebb9e3a9dd RISC-V: Add vmslt vv C api tests
fec15ae4a3871b03696765daf8d141275b1b3379 RISC-V: Add vmsle vx C api tests
f7b8022bcd4cb736a2a3b60867e5cfb9304ec9b5 RISC-V: Add vmsle vv C api tests
6dae0aa24842570e14e27b567a740d9851db24ee RISC-V: Add vmsgt vx C api tests
fe1a6c2c8a219c12d5fb242c23cf3be58e253610 RISC-V: Add vmsgt vv C api tests
5893cfb26a15e20e0049aeb07440547a4055029b RISC-V: Add vmsge vx C api tests
52ba1d2e2358af522af1fb75155652b8ff8274d9 RISC-V: Add vmsge vv C api tests
76db33c592df22442b19bab72ee13488463c060c RISC-V: Add vmseq vx C api tests
4d06fc379093fd2353c6e09619d40bc15c89465a RISC-V: Add vmseq vv C api tests
6ec7b7b3e46da49ce9e9fb38e1c1405f988d76ae RISC-V: Add binop constraints tests for integer compare
ecdbebde7cb9ab63ae62bdf9296fe118a507b172 RISC-V: Add vmsne vx C++ tests
f87fca5d7f2568dc15387645e5126115b0b2583f RISC-V: Add vmsne vv C++ tests
18f4691e31e50fae2098c2970ee92c1385929a81 RISC-V: Add vmslt vx C++ tests
400f003ee5531d6998c53082a3f255690e63778c RISC-V: Add vmslt vv C++ api tests
6c4262a52590bb1768238090f7f9d8d0ef1e252f RISC-V: Add vmsle vx C++ api tests
d6d9206d2b652d3d2c017ab53485419f37a88fc3 RISC-V: Add vmsle vv C++ api tests
cfbcbe8e27bf9280b0242bcba746b02c566d50e5 RISC-V: Add vmsgt vx C++ tests
0d689135ffd7df101240d8c44cc6a56f2fe4aeb2 RISC-V: Add vmsgt vv C++ tests
92e575eacf0294bdb898f701c81a6caa800b9122 RISC-V: Add vmsge vx C++ api tests
5e96553eba9efca0aae6f9d67bbaaaa8f7e28192 RISC-V: Add vmsge vv C++ tests
c4e770c45218277499b2ffa22bcbfbf31bca3a07 RISC-V: Add vmseq vx C++ tests
a75fa2518d4ad997cb11145f625b4aebac5b9293 RISC-V: Add vmseq vv C++ tests
272e119d97217562803b42384db546e86b511d11 RISC-V: Finish all integer C/C++ intrinsics
a432d0d9e063940db3e1f117af0b1a9fe2748642 RISC-V: Add vwmacc vx C api tests
645bfe04ce118a462ad2b3d59a323619dea95560 RISC-V: Add vwmacc vv C api tests
51307617b4a8a6e33c9ff6159d3b9a15df60afe0 RISC-V: Add vnmsub vv C api tests
a462e612073fc2cade8ff6ab225d8b6e0dd164e2 RISC-V: Add vnmsub vx rv64 C api tests
496ae797c204bcaa8b18c7b9dc4bb60a6c941ebf RISC-V: Add vnmsub vx rv32 C api tests
3a70551148edd1774d14bdce9a2dd4ea9a959b1f RISC-V: Add vnmsac rv64 C api tests
1d403b1e79f2f5a0a30c0ff73360d56482529c1b RISC-V: Add vnmsac vx C api tests
46444e3984aad46de72633790545044a2bf3d77b RISC-V: Add vnmsac vv C api tests
0bca2036dc7a168e8a04aac7caf2f3d7a387a1a7 RISC-V: Add vmadd vx rv64 c api tests
0033ab7b923fb967dfd489d39c50182b5b31f4f9 RISC-V: Add vmadd vx c api tests
abbfd706ceebfbec4ab77428993589e18586d2bd RISC-V: Add vmadd vv C api tests
987f4bb2f8d10afd8e5a6ec1aaa578208bf0ce99 RISC-V: Add vmacc vx c api tests
dce0e53cf62665d5a65105b02f97ae8b86313b78 RISC-V: Add vmacc vx rv32 c api tests
ddd7c2e948923da7ffbed10b85f9bee2eeb42492 RISC-V: Add vmacc vv c api tests
5cf9afc5965e36acf430d0fef0bd15fe8f3454f9 RISC-V: Add ternary constraint tests
c4e2a63e4620ab85f84b06e6e5f1553caae4a576 RISC-V: Add vwmacc vx C++ api tests
a5012e90b252580306fa6ee6e0617393043f045a RISC-V: Add vwmacc vv C++ api tests
326fe0f2f557adf1a475783d9bb905b8295e4d27 RISC-V: Add vnmsub vx rv64 c++ api tests
1ff4063f25813c27a8abcbb48d4bff7452f99af5 RISC-V: Add vnmsub vx rv32 c++ api tests
249be04bb830eae753c6171bb77c03872f5cee90 RISC-V: Add vnmsub vv c++ api tests
7ce337324a8bafef59d268b647d3a03542c511bb RISC-V: Add vnmsac vx rv64 C++ api tests
0fd29de569b0644b13e437b2b4eb072c076a159f RISC-V: Add vnmsac vx C++ api tests
47919b0decb469054a784ef32c98486074808d9d RISC-V: Add vnmsac vv c++ api tests
4e43f0cb269748aa0bfab531e63196d0dd3021c2 RISC-V: Add vmadd vx C++ api test
5db1182b7ca1778a1be0856bc14d41f8707b3dbd RISC-V: Add vmadd vv c++ api test
1ec316c538aa2ae383e6b87f79616330bcf06016 RISC-V: Add vmacc vx rv32 c++ api tests
4a9a9a787b9fc8fbc23599016bcd713823e99170 RISC-V: Add vmacc vx rv64 c++ api tests
81f0945cd97cf0645c56b14827abad63164bd80c RISC-V: Add vmacc vv c++ api tests
cb3e0eac262e55774949b1717c64da383adbc621 don't declare header-defined functions both static and inline
b9da8f063a6c65228172528d5cbf9eff511350da RISC-V: Replace simm32_p with immediate_operand (Pmode)
3b6d44f459d28ab17d42967ce1c0490397e30e40 RISC-V: Remove "extern" for namespace [NFC]
5804c20b13f28cf6c2e464003c338104bb508906 RISC-V: Move saturating add/subtract md pattern location [NFC]
b2dec44ee77c00bab51faa8527106a01b7c796f4 RISC-V: Rearrange the organization of declarations of RVV intrinsics [NFC]
3cb0fa12126a287160dedec4fa9ab3e4425bf619 RISC-V: Normalize SEW = 64 handling into a simplified function
c2031252868015f8a8ad1c67362a8b37ce6f8030 RISC-V: Rename tu_preds to none_tu_preds [NFC]
1ed93bc7ed88d1164bcccbd38a840b8b0a67961c RISC-V: Add RVV all mask C/C++ intrinsics support
6108dc91cdaf19b495ae5f5defd31b96c0b87060 RISC-V: Fix vmnot asm check (Should check vmnot.m instead of vmnot.mm)
b943d5771e1cdaba3004c4ca692ffa9e1a094f8d RISC-V: prefetch.* only take base register with zero-offset for the address
4c86188ca4ca4f25eb7ab7152439f9e81ed17a87 libstdc++: Update baseline symbols for riscv64-linux
31b77593edbf623fb8f84e35baeb927fdd7c55b6 gccrs: Ensure uniqueness on Path probe's
e7a69d4533add13ff8f5468131cc824f6fa9e154 gccrs: Fix undefined behaviour issues on macos
a0abd652e3878bd79ed802e868324ae3f617c380 RISC-V: Adjust vsetvl testcase.
c57fbdd6f11de2916fd0df6553e35117d3d12c5a RISC-V: Make the test condition more strict for gcc.target/riscv/_Float16-zhinxmin-1.c
dc244cdc05a0cc4a7c40c5c5027c12cc1dc6e4d3 RISC-V: Add floating-point RVV C/C++ api
c878c6586dee353e685364910e02ad1a611d4634 RISC-V: Add RVV reduction C/C++ intrinsics support
3da77f217c8b2089ecba3eb201e727c3fcdcd19d vect: inbranch SIMD clones
aee5ee35602e0098c2ae16fa2fc9c8845caf92ed Rust: In 'type_for_mode' langhook also consider all 'int_n' modes/types
af46073dbe83d88e2d93d967da447346b22c70bb Fix memory leak in if-conversion
426b0ae103894d1f1bd82e5f049ff8a53bd82a8d Fix memory leak in PTA
ef22c3e90b5010a5229e70907ad2087f774fdfc0 Change vec<,,vl_embed>::m_vecdata refrences into address ()
2dd68cddbc745de2c4a4b4982673122716c8231c Avoid default-initializing auto_vec<T, N> storage, fix vec<vl_embed>
85203d52bfa4a84da5f50e0a242891308ffa8d83 tree-optimization/108970 - ICE with vectorizer peeling
076d309e36c682176e9f85dc8593e6f2c9e6e75f vect: Don't apply masks to operations on invariants [PR108979]
51af8a6401eea726d3498e6b2aba456b6af246d6 d: vector float comparison doesn't result in 0 or -1 [PR108945]
929c6b8cd12a3bd338a4c250274a9d86da5b2ea7 d: Allow vectors to be compared for identity [PR108946]
97651be1b63ae79eeff12b2867454d186e4cb7e0 testsuite: Fix up syntax errors in scan-tree-dump-times target selectors
9debb240a4b1a711c0648fd9e4385dbde5ad45fd RISC-V: Fix wrong partial subreg check for bsetidisi
602cfc746e9e0447221896a3d93608c6db3a89e5 RISC-V: Allow const0_rtx operand in max/min
ec99ffabc3d32bbc0cce164e84942e176c13e75c RISC-V: Add scalar move support and fix VSETVL bugs
2a2c4c93fda928d9726a96afe0ef912d2aa53599 RISC-V: Add testcase for VSETVL PASS
f8ba8a45edcff7fe117f88deff7184dffe3af311 RISC-V: Remove void_type_node of void_args for vsetvlmax intrinsic
1bff101b7e66feed0efc7f656468647e0b5fb48c RISC-V: Add permutation C/C++ support
7caa1ae5e451e780fbc4746a54e3f19d4f4304dc RISC-V: Add RVV misc intrinsic support
7e52f4420ffb0946dfc97704d72fa8aa67251495 RISC-V: costs: miscomputed shiftadd_cost triggering synth_mult [PR/108987]
89456334473c6b1ea1713740fb5f5191cd0b2235 RISC-V: Add prototypes for RISC-V Crypto built-in functions
2c8095109b8756bebc5d0ac2cc0ded34fd6a46df RISC-V: Implement ZBKB, ZBKC and ZBKX extensions
072c558a0f181bec139d68b451e7aa4907dbc5ef RISC-V: Implement ZKND and ZKNE extensions
e6416e4323f346968533de404518b2aaf186ead1 RISC-V: Implement ZKNH extension
2554d90c6c2cf80559b918d387944da35fc6aa23 RISC-V: Implement ZKSH and ZKSED extensions
44c918b50af64d1c0f27067b2671e1a4f744841b RISC-V: Fix ICE for avl_single-86/avl_single-88/avl_single-90
ca27d765f1d88a0f9d625b3519b6a8b1f8b19cc7 testsuite: Fix up syntax error in scan-tree-dump-times target selector
c1873079b05e399355eb79e4828ed9ba2d0c6968 tree-optimization/109025 - fixup double reduction detection
247cacc9e381d666a492dfa4ed61b7b19e2d008f RISC-V: Bugfix for rvv bool mode precision adjustment
b2b841fa25513a87fcb6e8195c2ad3ea354426d4 testsuite: Fix another syntax problem in slp-3.c
2dc73876fc9a0df4c3af2766319402d14d39db33 [PATCH v2] vect: Check that vector factor is a compile-time constant
ab7bb445ee586258a6210462e92ed196d61beb9e RISC-V: Fine tune merge operand constraint for integer/load/store
a803c268c5529624bdb7d02131d4862516a63c22 Extend nops num in "maybe_gen_insn" for RISC-V Vector intrinsics
60bd33bcbb75fbe040efe681f81e864a0df2244d RISC-V: Add fault first load C/C++ support
2246d576f922bae3629da0fe1dbfcc6ff06769ad middle-end: Revert can_special_div_by_const changes [PR108583]
0b3c630fcc44063a61f6131af48a4171b1de2b37 middle-end: don't form FMAs when multiplication is not single use. [PR108583]
81fd62d1378b7ddc1fa0967cbddcdcdcdd2d8d8c middle-end: Implement preferred_div_as_shifts_over_mult [PR108583]
7ff57009bcc728044ba2de339ecd16721d48aba3 RISC-V: Fine tune RA constraint for narrow instructions
6f6eba35b9f06d35ff7bea81969fe905a5584bdc RISC-V: Fix ICE of RVV compare intrinsic
9dd51550b7d140f5fcc60f892cf68b59ff667b66 RISC-V: Remove RVV intrinsic API test
2219aed9ad6f2678eac457b7de0984dbcde18679 RISC-V: Fine tunning merge operand constraint
72b52751c60abb327c73716259485d04b8eabe4f tree-vect-patterns: Fix up ICE in upper_bound [PR109115]
0e6f87835ccabfe84afe412583544ff6e6292352 RISC-V: Avoid calloc() poisoning on musl
8351535f20b52cf332791f60d2bf22a025833516 riscv: Add basic XThead* vendor extension support
c36fb3ca9eef56bc2f597e0fee577aca96ec3754 riscv: riscv-cores.def: Add T-Head XuanTie C906
b77c32273b432db3f04175b95143b3ed5214f6f3 riscv: thead: Add support for the XTheadBa ISA extension
d328d3a6f8756ed61b3cdf3675b24051f7d3b2ef riscv: thead: Add support for the XTheadBs ISA extension
c493fa3892487c22d0bdd817361a02bd523fc2e7 riscv: thead: Add support for the XTheadBb ISA extension
8e7ffe126debfbc59e2d359ef3c37899327e2055 riscv: thead: Add support for the XTheadCondMov ISA extensions
b2a1bef96dadcd18f1cc861b10bceaeec7cf48a6 riscv: thead: Add support for the XTheadMac ISA extension
75047aeb7e6af248dee47ee29bdcd57f93e7352e riscv: thead: Add support for the XTheadFmv ISA extension
02fcaf412ae9508b75efa9602cd4ac58bc63d6a4 riscv: thead: Add support for the XTheadMemPair ISA extension
bd2d206b7b7d32ef6f45ce23192cfaf5fe14ac3d [testsuite] fix array element count
02880e7803b19c357718abd2f0d567b4a761f318 RISC-V: Use reg_or_subregno to check regno [PR109092]
c413abed869e7e34a86855a015413418f3c6b595 RISC-V: Handle undef for vector mask patterns
b49aedf6aed4911c8473738a88e839703f51386d testsuite: Fix up vect-simd-clone1[678]*.c tests [PR108898]
49a8bce43cdc1d1b48efa5eeb2a4097cfca1dc22 testsuite: Remove obsolete comments [PR108898]
8ff3ca2d94721fab78f167d435d4ea4fa4fdca6a libstdc++: Fix simd compilation with Clang
7712736376b2ee775f88976117b4e8b4ea37841b Remove TARGET_GEN_MEMSET_SCRATCH_RTX since it's not used anymore.
ba31f9a3c8fa9405a9a58094d6dc83bab0823786 RISC-V: Add riscv_vector target check
0e2715176df3787d1470d7b9bde26b1b5e16e1e2 RISC-V: Fix wrong RTL pattern for ternary instructions.
a481eed8fd01837cdf011ea9a17853505080a888 RISC-V: Fix wrong vsetvli fusion for vmv.s.x
116a8678840f9f52ec14639ff07e302a8c429f32 RISC-V: Implement __riscv_vlenb PR109228
cd0c433e5faba9a18f64881cd761a53a530aa798 RISC-V: Fix LRA issue for LMUL < 1 vector spillings [PR109244]
37dd1f14b6e0e7775973e0f31876066f503f5b21 RISC-V: Fix loss of function to script 'multilib-generator'
3a982e07d28a46da81ee5b65b03a896d84b32a48 RISC-V: Bugfix for rvv bool mode size adjustment
378ec7b87a5265dbe2d489c245fac98ef37fa638 [testsuite] test for weak_undefined support and add options
07fc3491260e6b5d261433c977a4e069f5ab40c1 match.pd: Fix up fneg/fadd simplification [PR109230]
50a36a9541526708881f2ac0c4f180506bcf80bb Docs, OpenMP: Correct internal documentation of OMP_FOR.
9da6f93144619b0f798c2b43d7cf4fc8d42c13a0 target/109296 - riscv: Add missing mode specifiers for XTheadMemPair
5a923516ae61ddc6dd863891db13189cbf392411 RISC-V: Define __riscv_v_intrinsic [PR109312]
c9954996cd647daf0ba03e34dd279b97982f671f tree-optimization/109154 - improve if-conversion for vectorization
8dd57939c20b5e218404a838f514429f8e414dea tree-ssa-math-opts: Move PROP_gimple_opt_math from sincos pass to powcabs [PR109301]
ad32fcb8e91ba85cb4676c6249b6adc4b0daf9df scan generic vector tests before lowering
b2f327b9be81326c9e59fc6da98074c909ac7408 RISC-V: Add Z*inx imcompatible check in gcc
fe42e7fe119159f7443dbe68189e52891dc0148e Rename ufix_trunc/ufloat* patterns to fixuns_trunc/floatuns* to align with standard pattern name.
608388486a54afe98aed0f105a6101ae7a9ff66c RISC-V: Fix missing file dependency in RISC-V back-end [PR109328]
db4f7a9b47d148b5074ac15910124c746fb7a96f RISC-V: Fix ICE and codegen error of scalar move in RV32 system.
802ab7d0db5b5aa46edc8d82526d97258c599927 RISC-V: Fix reload fail issue on vector mac instructions
840354060e23ff28d325af2b8422233ce14f40f8 riscv: Fix bootstrap [PR109384]
4f81edad41caea4ddd269555f88790cec28cc9d9 RISC-V: Fix typos
fdc5abbdcfb65d415af6c40230f8f07872e51e49 [PATCH] RISC-V: Fix PR109399 VSETVL PASS bug
ce1e682ca21400d9b59f08f0416d96e0bac369d8 [PATCH] RISC-V: Fix SEW64 of vrsub.vx runtime fail in RV32 system
804208a2ab817c17d1eea627b671e77a15545a01 [testsuite] enable -maltivec like vect_int for signbit-2.c
3821669164d6d925de393470447e91c31bc78074 gccrs: macros: Perform macro expansion in a fixed-point fashion.
c18b1b0bc78c27257cfc8448581564337412f567 riscv: Fix genrvv-type-indexer dependencies
58c8c1b383bc3c286d6527fc6e8fb62463f9a877 if-conv: Restore MASK_CALL conversion [PR108888]
40fc8e3d4f600d89e6b065d6f12db7a816269c8f RISC-V: Fix regression of -fzero-call-used-regs=all [PR109104]
0c5e64c4249322a178e1a0e843874e4d6b43b992 RISC-V: avoid splitting small constant in <or_optab>i<mode>_extrabit pattern
31eb8f18bbe64613fd8d77c4520c00beeb13598f RISC-V: Fix supporting data type according to RVV ISA. [PR109479]
9d1a6119590ef828f9782a7083d03e535bc2f2cf combine: Fix AND handling for WORD_REGISTER_OPERATIONS targets [PR109040]
040e64b09d4422c7d3c51bee098043782112b924 Fix vect-simd-clone testcase dump scanning
a87d95def0dcaad7a447e365d2f4a8edd9e00b02 vect-simd-clone testcase adjustments
a647198fcf7463a42c8e035a429200e7998735dc [committed] [PR target/109508] Adjust conditional move expansion for SFB
0c4d366ef757da28800f786fb5ea02b6e4918719 RISC-V: Add test cases for the RVV mask insn shortcut.
2e6b57196dd0e1f4b308abb958f5f905f0ba6aba RISC-V: Fix testsuite fail on RV32
a1f25e04b8d10bbe5dcaf98bb7e17cdaec9f169d testsuite: update builtins-5-p9-runnable.c for BE
f66ae49bba7d3b8c999498a0e166c0a2f99ec61a tree-optimization/109524 - ICE with VRP edge removal
7ec03c41de320fb747fa2a90f5d3b6db3aa4dde1 testsuite: Fix up vect-simd-clone-1[678]f.c tests some more
0ccf520d349a82dafca0deb3d307a1080e8589a0 RISC-V: Optimze the reverse conditions of rotate shift
a782346757c54a5a3cfb9f416a7ebe3554a617d7 RISC-V: add a new parameter in riscv_first_stack_step.
8c010f6fe5ebe80d2e054b31e04ae0e9f12ae368 RISC-V: Clean up the pr106602.c testcase
e6b050da8a4513ab37fd3699c7a963421fbe4d81 RISC-V: Set the ABI for the RVV tests
c16848ed8f30be952ac0167fd464ae794fa5ac67 RISC-V: Force ilp32d for the T-Head FMV test
60524be1e3929d83e15fceac6e2aa053c8a6fb20 RISC-V: optimize stack manipulation in save-restore
3f0f4e0fa0b1f9c6217bf5018df4d0836cad84c7 RISC-V: make the stack manipulation codes more readable.
2349e69125335d4c8c5e43cf3643844519d154c3 match.pd: Improve fneg/fadd optimization [PR109240]
14c1a8dfa3eaea283ab467c2aa3a62a25d3b49cb Docs: Add doc for RISC-V vector intrinsics
b7c54e3f48086c29179f7765a35c381de5109a0a libstdc++: Export global iostreams with GLIBCXX_3.4.31 symver [PR108969]
9874ceed091a0ce17b23d8d77b5bf90b8902a3c0 Add TARGET_ZBKB to the condition of bswapsi2, bswapdi2 and rotr<mode>3 patterns
c9d7fbdf3e752be40c34855741e7c27121315744 vect: Verify that GET_MODE_UNITS is greater than one for vect_grouped_store_supported
ade0a1ee5c6707b950ba284adcfed0514866c12d tree-vect-patterns: Improve __builtin_{clz,ctz,ffs}ll vectorization [PR109011]
7838574b5aca179e347eb972880ea8376a2cc6b5 Avoid non-unified nodes on the topological sorting for PTA solving
fac24d43e68838c63bfe112c8fb63aa3df960429 Revert "libstdc++: Export global iostreams with GLIBCXX_3.4.31 symver [PR108969]"
978e8f02e8edebaf21ce32768cce603f650459e4 RISC-V: Align IOR optimization MODE_CLASS condition to AND.
9fdea28d6ace8c8e5ac64a55685d310ba8dfa3cf RISC-V: Support 128 bit vector chunk
57e7229a29ca0e9929b61051e4f5857f0b41b6c7 PR testsuite/106879 FAIL: gcc.dg/vect/bb-slp-layout-19.c on powerpc64
705b0d2b62318b3935214f08a1cf023b1117acb8 tree-vect-patterns: Pattern recognize ctz or ffs using clz, popcount or ctz [PR109011]
98ebdda3fd81c2c87ef0e73de9c94135fb49210f RISC-V: Fix simplify_ior_optimization.c on rv32
a2d12abedc89a9439fd6aadc38730fdadca0684f RISC-V: Fix wrong check of register occurrences [PR109535]
9fde76a3be8e1717d9d38492c40675e742611e45 RISC-V: Fix riscv/arch-19.c with different ISA spec version
7b206ae7f17455b69349767ec48b074db260a2a7 RISC-V: Fix RVV register order
07e2576d6f344acab338deeb051845c90c1cf6a3 [PR target/108248] [RISC-V] Break down some bitmanip insn types
87c9bae4e32b54829dce0a93ff735412d5f684f8 tree-vect-patterns: One small vect_recog_ctz_ffs_pattern tweak [PR109011]
d51f2456ee51bd59a79b4725ca0e488c25260bbf RISC-V: Add local user vsetvl instruction elimination [PR109547]
98d66b204932e343bbf940990914b949e8fccbd5 riscv: Fix <bitmanip_insn> fallout.
d06e9264b0192c2c77e07d7fb0fe090efcb510c0 RISC-V: Defer vsetvli insertion to later if possible [PR108270]
c58c0771b7a3dbd2a00cd4b6ca2301d74b6cd4e2 match.pd: Fix fneg/fadd optimization [PR109583]
7a0cbaf7f802df209840d78740ffc749dadd1ce3 testsuite: Fix up pr109011-*.c tests for powerpc [PR109572]
8311c26757657fe8ffa28ca1539d02d141bb8292 Add testcases for ffs/ctz vectorization.
4eae76d10433b12bdb6944c2b3be818ccc3b5986 RISC-V: Optimize fault only first load
c5a1fa59ae3f44059a79086cbc506800d4149b69 RISC-V: Add function comment for cleanup_insns.
ff8f95449350372b584cfcd28a7d9d71f52eea50 RISC-V: Eliminate redundant vsetvli for duplicate AVL def
60bf26a412a9ec2b467c04fac1dfacef2ef09c6d This replaces uses of last_stmt where we do not require debug skipping
0530254413f8d356805442f659c6d2921739284d riscv: relax splitter restrictions for creating pseudos
392200f807fe2ee377ecc451ff75894b89335c33 avoid splitting small constants in bcrli_nottwobits patterns
2fb7df82b8edd64ea31417592619c4cee00b05bc RISC-V: Add auto-vectorization compile option for RVV
a8d5e14f524283484c2a466353f92f7eaadae9f7 RISC-V: Bugfix for RVV vbool*_t vn_reference_equal
a010f0e08501b267ecb925ff88450f58e01dd991 RISC-V: Fine tune gather load RA constraint
4f9eac2f262dfe938edf52045ef3fcdcf925af2d RISC-V: Fix redundant vmv1r.v instruction in vmsge.vx codegen
06792c142c5ac8424db1ca36d11b0b9d42de3f21 RISC-V: Optimize comparison patterns for register allocation
5fce06b868ec0d4f75530a17d6fe6b12b7c9b5f0 RISC-V: Fine tune vmadc/vmsbc RA constraint
5bdc5155138abeb244be1690998b359152445be6 Convert users of legacy API to get_legacy_range() function.
637037f4e637563c4f50ed04adfa2baf90671491 Remove some uses of deprecated irange API.
a8e1551bdb372aa3cfe754429b5efd6229ae5fdb RISC-V: Legitimise the const0_rtx for RVV load/store address
f797260adaf52bee0ec0e16190bbefbe1bfc3692 RISCV: Inline subword atomic ops
b6dea04fca6f249c553cb18d670a0845cd0579f8 Add sbr_lazy_vector and adjust (e)vrp sparse cache
0a38f677463ff8a4fb61b049263aa596ef6471a7 Create a lazy ssa_cache.
2a26872984c109a98d0ad733b0c68c3e1648ec86 RISC-V: Fix sync.md and riscv.cc whitespace errors
d94ca762f6e0e4f117c1a61aa6d6613b2abc1216 testsuite: adjust NOP expectations for RISC-V
865869dc6943eb5dee855bc1ea88b09b7dabc641 libstdc++: Add @headerfile and @since to doxygen comments [PR40380]
a82c6ab0aade4124e1903dda6f6f85c4c317fcec wrong GIMPLE from (bit_field_ref CTOR ..) simplification
f2d6beb7a4ddf18dd95fdcc336181a8702a9f55f Unloop loops that no longer loops in tree-ssa-loop-ch
e0cf929d99bebd9a740db6db45d69957514e0c12 RISC-V: Add required tls to read thread pointer test
821ef93976e750c118d42a2ad33b96dbd1b9f3a5 tree-optimization/108752 - vectorize emulated vectors in lowered form
8b84d87969ef2443516a79a80c22d2b6dba04630 RISC-V: Allow RVV VMS{Compare}(V1, V1) simplify to VMCLR
24905a4bd1375ccd99c02510b9f9529015a48315 Adjust costing of emulated vectorized gather/scatter
6d4b59a9356ac4df7f4ae370495dc3366d0daa55 Add emulated scatter capability to the vectorizer
1966741378d5f456d0245960fa09074b6320b4d6 RISC-V: Eliminate redundant zero extension of minu/maxu operands
d9df45a66b2c8f543106be0a2387bbe6195b00a6 RISC-V: Added support clmul[r,h] instructions for Zbc extension.
065be0ffbcd676b635d492f4679e635b6ece4fe4 RISC-V: Add divmod expansion support
a5b2a3bff8152aa34408d8ce40add82f4d22ff87 RISC-V: decouple stack allocation for rv32e w/o save-restore
2744dbb9ecf104a113da3a0f39115da4653bb676 gcc: Use ld -r when checking for HAVE_LD_RO_RW_SECTION_MIXING
e1366a7e4ce1d4dfe43dfa50d451ac45da00975f vrange_storage overhaul
f385252b2336a4a57a30fddf82e558c73bcc85cc tree-optimization/109672 - properly check emulated plus during vect
87c347c2897537a6aa391efbfc5ed00c625434fe RISC-V: fix build issue with gcc 4.9.x
1adb1a653d6739589b12337c974c7e741cfb187c RISC-V: ICE for vlmul_ext_v intrinsic API
9cfdd5af3efd4a7e52ae7f97f55effc436c0cf45 RISC-V: Name newly added flags in changelog
1d003da715a5cb4bc80e6ecf560f2be1ecd602e0 libstdc++: Regenerate baseline_symbols.txt files for Linux
f37a36bce81b50a43ec1613c1d08d803642f7506 RISC-V: Eliminate SYNC memory models
dcd7b2f5f7233a04c8b14b362d0befa76e9654c0 RISC-V: Enforce Libatomic LR/SC SEQ_CST
4990cf84c460f064d6281d0813f20b0ef20c7448 RISC-V: Enforce subword atomic LR/SC SEQ_CST
d199d2e56da2379004e7e0457150409c0c99d3e6 RISC-V: Enforce atomic compare_exchange SEQ_CST
a61a067b15221de981afd4df8433e96a8cf32341 RISC-V: Add AMO release bits
6a2383f47ae70c31f91775142b9fb03f697741c2 RISC-V: Strengthen atomic stores
08c5d1804a027f1e4bee4ed5fda25522d9ac8806 RISC-V: Eliminate AMO op fences
942ab49b5f8955371cf5db23608ba5f5f5244152 RISC-V: Weaken LR/SC pairs
bff7c77386447936dd614ebc7086b826c99c6642 RISC-V: Weaken mem_thread_fence
b90e030a3cef2158579618ad883783170ef58fa0 RISC-V: Weaken atomic loads
bc24c51c0ccd64617864897ad071c98004ffc0a4 RISC-V: Table A.6 conformance tests
e8511cbba692a9f3ff4d9c74e902fab03f154bbd Docs: Add vector register constarint for asm operands
12847288da55965ce684c5dd1c53cc38a2d0a8a9 RISC-V: Add tuple types support
cb7f6ec9524ced259199ea049949f05f1ed999a5 RISC-V: Add tuple type vget/vset intrinsics
6313b0457394172b13978b9772d49eea1d68d3a1 RISC-V: Support segment intrinsics
203f3060dd363361b172f7295f42bb6bf5ac0b3b riscv/linux: Don't add -latomic with -pthread
4bd434fbfc7865961a8e10d7e9601b28765ce7be riscv: fix error: control reaches end of non-void function
82cfd93ae81a5687bf2a1b12d964c630e95517a7 tree-optimization/109721 - emulated vectors
0a26a42b237bada32165e61867a2bf4461c5fab2 OpenACC: Further attach/detach clause fixes for Fortran [PR109622]
37b5f031292fbdb854ee791de3883362cf2afcff tree-optimization/109735 - conversion for vectorized pointer-diff
124bc77ba9868db07d284b4dea31797da1468515 GCN: Silence unused-variable warning
d875d75653ed67e125e70dd8530182ce7872af65 RISC-V: Fix PR109615
3365956d55a6484097ff40fb81acb2345322044c RISC-V: Allow RVV VMS{Compare}(V1, V1) simplify to VMSET
0c1eaac3fd35eafedc8fb5638af30af0aea199d3 RISC-V: Legitimise the const0_rtx for RVV indexed load/store
8421f279e9eb00a2342ee3630dcdaf735b734fe8 RISC-V: Fix incorrect demand info merge in local vsetvli optimization [PR109748]
043550bceea7881163bba5d8a0486bb100a05809 libffi: fix handling of homogeneous float128 structs (#689)
2d76f2b45d6649174748d862a31bb95c53ee1117 RISC-V: Enable basic RVV auto-vectorization support.
b3e5cb9dc33628c7fee225c6a1bab68d2679d108 RISC-V: autovec: Add new predicates and function prototypes
6ad9e5e0c7b77938348eee0ede77cb5522a914ac RISC-V: autovec: Export policy functions to global scope
bc73bf831ef512b6a1c07ae150a7cbf2daed9fd6 RISC-V:autovec: Add auto-vectorization support functions
b9b7981f3d6919518372daf4c7e8c40dfc58f49d Remove duplicated definition in risc-v vector support.
9217e0dde1b7dbcff456d513334496404e626437 RISC-V:autovec: Add target vectorization hooks
730909fa858bd691095bc23655077aa13b7941a9 RISC-V: autovec: Verify that GET_MODE_NUNITS is a multiple of 2.
4c05f966a098744db9fa1e73074d7c08ace446fd Delete duplicated riscv definition.
17d683d4d3dc95d13096ec52ad9937a2b011f9a4 RISC-V: Handle multi-lib path correclty for linux
bf839c154d6cdee62f222277fa29c38509f25912 RISC-V: Fix ugly && incorrect codes of RVV auto-vectorization
69f1a8af45d8a42003c21489019ddfb01d88d30d PHIOPT: Add diamond bb form to factor_out_conditional_conversion
dd7136cff68528c77d9346e41a75ba41dfaf95e1 RISC-V: Improve portability of testcases
c139f5e106fcdcd5e820541f357937c6edd7b161 RISC-V: Factor out vector manager code in vsetvli insertion pass. [NFC]
69f3914414a303f0e2c8246e08925f90c207846c RISC-V: Fix dead loop for user vsetvli intrinsic avl checking [PR109773]
a2676383adf31a7b4b64b7b1817428f953041d73 RISC-V: Fix incorrect implementation of TARGET_VECTORIZE_SUPPORT_VECTOR_MISALIGNMENT
046551108378a00ee09cc2a071dd83b3fc7c35cf RISC-V: Insert vsetivli zero, 0 for vmv.x.s/vfmv.f.s instructions satisfying REG_P(operand[1]) in -O0.
003f388cddbbd3c8ff936f98355a90acda619030 RISC-V: Support const series vector for RVV auto-vectorization
0918360d709a32294913aef4392cec6c1dec1857 VECT: Add tree_code into "creat_iv" and allow it can handle MINUS_EXPR IV
b75c9e10379481b1b1e9dfdcc6aa81c9ba58cb1a RISC-V: Add vectorized binops and insn_expander helpers.
84d2899638a7207bc01159553e9489de7d65b494 RISC-V: Clarify vlmax and length handling.
8c08201f06e67d80a12dca9e5dc33334631285a6 RISC-V: Split off shift patterns for autovectorization.
6cb594f3ffca461ca6df56cc389f7b278e1047af RISC-V: Add autovectorization tests for binary integer operations.
44564a4ab7b403598791ed9f0e866e94093a0b9d RISC-V: Update RVV integer compare simplification comments
6445f1224509861f2d471a66134b98f26290586e RISC-V: Allow vector constants in riscv_const_insns.
de1ac6283faee2a0705cebefdeaafc08d562a2ea RISC-V: Fix RVV binary auto-vectorizaiton test fails
c2d62cdd63f34c2f5187687d4c7b9f00f7d8fa3a RISC-V: Reorganize binary autovec testcases
1c1a9d8ed840dc7d7467b30a8547967854c6c45f RISC-V: Add basic vec_init for VLS RVV auto-vectorization
4f67400b8475ee645e63f67bbb6b81ae1ab99ca8 RISC-V: Fix fail of vmv-imm-rv64.c in rv32
7a7f6b26259d22115ee4813ce130622ad1073d16 RISC-V: Suppress unused parameter warning in riscv-common.cc
cc0e22b3f25d4b2a326322bce711179c02377e6c tree-optimization/64731 - extend store-from CTOR lowering to TARGET_MEM_REF
c919d059fcb67747d3c0bd539c7044e874b03fb7 RISC-V: Optimize vsetvli of LCM INSERTED edge for user vsetvli [PR 109743]
ea7a9f361e71b0176ae7e6b6bdaaa95789cc7942 RISC-V: Improve vector_insn_info::dump for LMUL and policy
1d339ce8d002920fe8f1c968a04bb8b0c2580b0e RISC-V: Pull out function call with side effect from gcc_assert.
1871740c7803c2aea20f651f57b413bc425a051c RISC-V: Refactor the or pattern to switch cases
f2afe68a1755fe627ae7dca9cc6c3a72bb8222f9 RISC-V: Support TARGET_VECTORIZE_PREFERRED_VECTOR_ALIGNMENT to optimize codegen of both VLA && VLS auto-vectorization
66e268eb063de32b232f6f006048e6f7bae6268f Fix gcc.dg/vect/pr108950.c
e9ea407c474b52722cb135f3f6b265ef01aede04 RISC-V: Optimize vsetvl AVL for VLS VLMAX auto-vectorization
47c4e96ad61a19ec3adb39587bf0d7d0b51a51b3 OPTABS: Extend the number of expanding instructions pattern
5ed880788ba33302de5d78574464201e0fecbc70 RISC-V: Add rounding mode operand for fixed-point patterns
8cd140d3658c29df9571e5f926464f742d87e0c4 RISC-V: Add FRM and rounding mode operand into floating point intrinsics
fa1c2ec1bb5e6363839dce55421cdc6c3dd19726 RISC-V: Adjust stdint.h to stdint-gcc.h for rvv tests
008cbecf622a413ebcc8b41a737f30fd7e2a1abf RISC-V: Fix wrong select_kind in riscv_compute_multilib
e0f2f4711794e3117db9e97164c674bd96a52fe6 RISC-V: Support RVV VREINTERPRET from v{u}int*_t to vbool1_t
a04bf39f61ce7814d197d712760f08c206daf4f1 vect: Don't retry if the previous analysis fails
01d62e9b6c3e9fd3132f1616843103ccf81778ed RISC-V: Add rounding mode enum for fixed-point intrinsics
24bd7168112f96e363cacaf593b3ac0c38c238f9 RISC-V: Introduce rounding mode operand into fixed-point intrinsics
e682d300261c0f2c8a5cc51151adabfe98e1006c RISC-V: Add mode switching target hook to insert rounding mode config for fixed-point instructions
7b0073c6a4c21a558936c06a06ab1c6def9769ae RISC-V: Remove trailing spaces on lines.
b14af304965c20111ebd01d0c916353c927d9151 Machine_Mode: Extend machine_mode from 8 to 16 bits
c072df1ab144506cd8bb0ac81fb8f1aad69f0bd2 Fortran: Narrow return types [PR78798]
9907413a3a6aa30a4a6db4756c445b40f04597f3 gcc/config/*: use _P() defines from tree.h
9157b213f560fc7539a429075a3f1b6826e45523 c: use _P() defines from tree.h
ca2007a9bb3074146780fc1e1382c7f73eb6d71b gcc: use _P() defines from tree.h
64d6a4dfd983377c6a91f1711ead71dc59aaefac RISC-V: Allow more loading of const vectors.
e430b32528d03fc655142525793639f6aeb31590 RISC-V: testsuite: Remove empty *-run-template.h.
c104ef4b5eb1f781bbef953e3c282ef1ca94c4f1 RISC-V: improve codegen for large constants with same 32-bit lo and hi parts [2]
9000da00dd70988f30d43806bae33b22ee6b9904 RISC-V: Fix CTZ unnecessary sign extension [PR #106888]
31cc55f4ff32475f8552205cbf341d4af8bb4fb7 Add bext pattern for ZBS
55914b016de8c8514c58eb59822677a69e44135c Fix riscv_expand_conditional_move.
660754a820465583df32a5f9601df7389c941920 RISC-V: Support RVV VREINTERPRET from v{u}int*_t to vbool[2-64]_t
285e0bb95dd3edf3e3312f0e0ee940594f46f77d vect: Refactor code for index == count in vect_transform_slp_perm_load_1
7b0986acf20ebe261221b800b6196acbf87f5ca2 RISC-V: Reorganize the code of CONST_VECTOR handling in riscv.cc
16df2790a58ebbeb949ffb790ebee7f6ed31936d VECT: Fix bug of multiple-rgroup for length is counting elements
8637aecd5aea70bb13c08b5b96d3cb24f5afcead RISC-V: Fix typo of multiple_rgroup-2.h
776d94f0b14235bf85d0cce4020eea86a20c91f7 RISC-V: Add "m_" prefix for private member
a8900fe4812f6b77d1349308bb4de08f7c130225 Skip some tests that won't work for target AVR.
b9fb093e7ccaee68be659d7d9711652c57e37aca libobjc: Add local macros to support encode generation [P109913].
da579188807ede4ee9466d0b5bf51559c96a0b51 libstdc++: Add missing constexpr to simd
51fd69ec2d57721ed502344ebe68b1643d9e7f34 RISC-V: Refactor the framework of RVV auto-vectorization
751da44bd9032878e3dbebc63f20aafec8794bd2 RISC-V: Fix warning of vxrm pattern
9d5034aad9868bed45472ef5bfac22dd9ac0e0cb Generic vector op costing adjustment
f504b70eb0fc1339322960041a85606df4547897 Account for vector splat GPR->XMM move cost
b6b8870ec585947a03a797f9037d02380316e235 tree-optimization/109747 - SLP cost of CTORs
1ede03e2d0437ea9c2f7453fcbe263505b4e0def Fold _mm{,256,512}_abs_{epi8,epi16,epi32,epi64} into gimple ABS_EXPR.
658938f3a173f4f9b3c8c8d22401fb7e31433f23 RISC-V: Fix magic number of RVV auto-vectorization expander
2203da5175851c20cac3c8ce1f342519e090de37 RISC-V: Fix incorrect code of reaching inaccessible memory address
0d76b785222a9d49a54c007537b636455072d37f RISC-V: Support RVV VREINTERPRET from vbool*_t to vint*m1_t
bed61b5646f3f62861879ae361ff9022957dcc1d RISC-V: Support RVV VREINTERPRET from vbool*_t to vuint*m1_t
e0600a02fc3eda109d12bdfccf1408c5bf2994db RISC-V: Add RVV comparison autovectorization
e55c134ebeef2fa23ad5f4d8afa36b5949b2852c vect: Enhance cost evaluation in vect_transform_slp_perm_load_1
ec40410d98e57fc6650241d4e05119a1f0af6a41 RISC-V: Add RVV mask logic auto-vectorization
29a60c13f8ed9982483b477b2c44ec1c2d2f9b1f RISC-V: Add FRM_ prefix to dynamic rounding mode enum
affee7dcfa1ee272d43ac7cb68cf423dbd956fd8 target/109944 - avoid STLF fail for V16QImode CTOR expansion
efd2b55d8562c6e80cb7ee8b9b1f9418f0c00cd9 libstdc++: Fix type of first argument to vec_cntm call
2f20d6296087cae51f55eeecb3efefe786191fd6 [testsuite] tsvc: skip include malloc.h when unavailable
53bd7622de70a4ca4a25cac953da3be2a24bc3c8 RISC-V: Remove FRM_REGNUM dependency for rtx conversions
31365eda4602181acced5b0479eb50ef1213e836 ada: Add size clause to System.Address
f97572c2aeddc71b01686993b978895e55890ab6 target/109955 - handle pattern generated COND_EXPR without vcond
f574e2dfae79055f16d0c63cc12df24815d8ead6 VECT: Add decrement IV iteration loop control by variable amount support
5bd67d7abddca87198b11efccedee42f82e9f3a9 RISC-V: Fix zero-scratch-regs-3.c fail
25907509787e3ef68cd8054460893cd316a8186a RISC-V: Add autovec sign/zero extension and truncation.
a1b23dcf2337ab8666fac7d1e191ca987710d184 RISC-V: Implement autovec abs, vneg, vnot.
272f920b78f5a9ff80755861fa07ec9eb1aa4b58 RISC-V: Add ZVFHMIN extension to the -march= option
c0df96b3cda5738afbba3a65bb054183c5cd5530 RISC-V: Fix incorrect VXRM configuration in mode switching for CALL and ASM
f8af48d8755018272cdb0cf2f250cf278829d7be RISC-V: Fix ternary instruction attribute bug
c48d7a6e3209021ec3a3d9c23601250405d94d96 RISC-V: Add RVV FMA auto-vectorization support
ff313e1c74b0360688cdd4a8894486b3941366cf RISC-V: Remove redundant printf of abs-run.c
e9fd9efc8d64f944cb480322ee5ed2d0a46db87d RISC-V: Fix VSETVL PASS ICE on SLP auto-vectorization
8196b58e0a1a466a41d2fd2f3c6eb3f6ee68685c ada: Fix crash on vector initialization
a99dc11fe272f6a1214f357b82f3f7eb5c7dabc3 RISC-V: Using merge approach to optimize repeating sequence in vec_init
3f4c3c929fe6a5c3b24a886ffb8380cbe4d09896 RISC-V: Eliminate the magic number in riscv-v.cc
6b828454246c5aef7f984bb6a2888699f8dcfb2d RISC-V: Refactor comments and naming of riscv-v.cc.
10680bc36aca7bfaee542a653a78813cf0d4fb1f RISC-V: Use extension instructions instead of bitwise "and"
a1806f0918c0d3612c99b6193b9703d4b4c82c21 RISC-V: Optimize TARGET_XTHEADCONDMOV
908546602e33e8810e98acd7634b22013346aa18 RISC-V: Add RVV FNMA auto-vectorization support
b1b92e72cdad1dc51058a26f1dadddd406fb8472 RISC-V: Fix warning in riscv.md
52577a301ef1b86d0a3fda9fed2477b4d46a124a RISC-V: Add floating-point to integer conversion RVV auto-vectorization support
21a07620f4bfe38f12e6d5be8b1eeecc29fa6852 riscv: update riscv_asan_shadow_offset
456cf52c0d35bdf66f5d86cce45a6af49a9ce1d8 riscv: add work around for PR sanitizer/82501
d8545fb2c71683f407bfd96706103297d4d6e27b Detect bswap + rotate for byte permutation in pass_bswap.
32a0266cc54a404007fca0d44dc9a299bbe70c1f RISC-V: Allow all const_vec_duplicates as constants.
3e2689e568425f14d6728504ad6f5d32b90320ad libstdc++: Simplify calculation of expected value in simd test
3279b6223066d36d2e6880a137f80a46d3c82c8f Enhance NARROW FLOAT_EXPR vectorization by truncating integer to lower precision.
fefa7db2c31fee449dd46dd6ed7f5a39fa884038 RISC-V: Fix unreachable test code for init repeat sequence.
5a98afec536ccc8e4530575edc5cf3420a4416b3 RISC-V: Add ZVFH extension to the -march= option
e2a326227977dd361bb3b52b8409ebc57240a2a7 RISC-V: Remove FRM for vfncvt.rod instruction
b65458005dfb38f2efdca52e42f3dbf4760f91bd RISC-V: Remove FRM for vfwcvt.f.x<u>.v (RVV integer to float widening conversion)
57920ae9653e8ef2b3f5f68c22894f5e65a3673d RISC-V: Remove FRM for vfwcvt (RVV float to float widening conversion)
644d168385f2e90da1985ed7307be0637ea184e9 RISC-V: Add testcase for vrsub.vi auto-vectorization
e1240bda3e0bb10ea6d24b278660fb3c6797f4f2 RISC-V: Add vwadd<u>/vwsub<u>/vwmul<u>/vwmulsu.vv lowering optimizaiton for RVV auto-vectorization
fb409a15d9babc78fe1d9957afcbaf1102cce58f libstdc++: Express std::vector's size() <= capacity() invariant in code
443613caa80d807250e5fbcbee961442c0c2ffbb RISC-V: Add RVV FRM enum for floating-point rounding mode intriniscs
0b317a60abe7181713ec70c20a0ef12aeb41e703 RISC-V: Introduce vfloat16m{f}*_t and their machine mode.
b7b255e77a271974479c34d1db3daafc04b920bc libstdc++: Fix code size regressions in std::vector [PR110060]
bf9eee73f3d849e249fd7eb1fd9ebe7314bbbc62 RISC-V: Support RVV permutation auto-vectorization
91430b73a059f58de83a82bba1a9ec2b750c48f9 RISC-V: Add vwadd.wv/vwsub.wv auto-vectorization lowering optimization
d5ea84cdd9a45e83b144442cdf9eb50efea9e28e RISC-V: Add __RISCV_ prefix to VXRM and FRM enum
691805ff8aa4cba5bded97821b61750a07b31ca4 RISC-V: Add test for vfloat16*_t (non tuple) types
265357d401fb7215e8fea820d29a48eacdd75ad1 RISC-V: Optimize reverse series index vector
a06b9435b9652ea1b0d30e6fa176c91df314954f RISC-V: Add _mu C++ overloaded intrinsics for load && viota && vid
bffc52838e393a775e13dc48162669b0f43ebe09 VECT: Change flow of decrement IV
9f926f3a0c8dee7edb6807323a1fe2a92b33bfaa doc: clarify semantics of vector bitwise shifts
2e3401bd71b59ca0e03f051c5db286c32299b940 RISC-V: Add pseudo vwmul.wv pattern to enhance vwmul.vv instruction optimizations
e1d2493f5912c340b50f49e4c2d928870faa172b Remove unnecessary md pattern for TARGET_XTHEADCONDMOV
5681872057f0b725ec8a7c8a1eec8fee205ad673 [RISC-V] fix cfi issue in save-restore.
8bdfa8a67a54545be1d90c46fb88a676695f25dc RISC-V: Support RVV zvfh{min} vfloat16*_t mov and spill
8ab9fb6b8e05cf9acca7bd8282979ede53524cf1 PR target/110083: Fix-up REG_EQUAL notes on COMPARE in STV.
1330977166aa8b3035b6314f5d3bac362f77be6b RISC-V: Move optimization patterns into autovec-opt.md
5c9cffa3a4aeeac1e462dbc8a35a5c4986f3381e RISC-V: Support RVV FP16 ZVFHMIN intrinsic API
a96ba6b958a00ad59c43cae10be65b263b5d0d2d RISC-V: Remove redundant vlmul_ext_* patterns to fix PR110109
2418cdfcf60b527dbfdabdda8523bf480ff295c4 RISC-V: Split arguments of expand_vec_perm
c7fe7ad612bb6aac1d078d215d5700ec4ef70e3c RISC-V: Reorganize riscv-v.cc
71ea7a3030590567938a3884583f7c0dd885f50c RISC-V: Support RVV FP16 ZVFH floating-point intrinsic API
f7f12f0b64646968d722c2d80f149934358a7d71 Testsuite: Fix a fail about xtheadcondmov-indirect-rv64.c
fe29963d40a721d18b5f688b9d54dd9021bfb90a vect: Refactor to allow internal_fn's
2f482a07365d9f4a94a56edd13b7f01b8f78b5a0 internal-fn,vect: Refactor widen_plus as internal_fn
8ebd1d9ab9510fe693763463cfb176084f420598 Remove widen_plus/minus_expr tree codes
6d4b6f7b5368858df316a2dc154a746a83be48ec RISC-V: Fix some typo in vector-iterators.md
da2d75af6013bdbf347b0b1b1e88d8e4c2f771b2 RISC-V: Fix 'REQUIREMENT' for machine_mode 'MODE' in vector-iterators.md.
17c796c7174bfc4a13a2aa74714cd295bf228668 [RISC-V] correct machine mode in save-restore cfi RTL.
7805890428c3b3adfbf37143a262f76b1557e4f0 RISC-V: Support RVV FP16 ZVFH Reduction floating-point intrinsic API
d1344c418005927e2c39d8285ec63461d72a6717 RISC-V] add TC for save-restore cfi directives.
ce2188e4320cbb46d6246bd3f478ba20440c62f3 libstdc++: Protect against macros
9165ede56ababd6471e7a2ce4eab30f3d5129e14 libstdc++: Avoid vector casts while still avoiding PR90424
88604bd17c3d0c82792020b4b0da95627b1caa9d RISC-V: Add RVV vwmacc/vwmaccu/vwmaccsu combine lowering optmization
42eb371286fa4f1f8419ff9e8059576e574c7a2c RISC-V: Fix ICE when include riscv_vector.h with rv64gcv
631e86b7adb55fb5ce418ce4cb5a59a1a3a6faa7 RISC-V: Support RVV VLA SLP auto-vectorization
fa8b4468e0d124bec0fdbfc0a168bd8c377b08ec libstdc++: Fix some tests that fail with -fno-exceptions
ae6c2d1edf289a8a04557e8fbfd4a61841c53345 riscv: Fix insn cost calculation
7f26e76c9848aeea9ec10ea701a6168464a4a9c2 riscv: Fix scope for memory model calculation
99bfdb072e67fa3fe294d86b4b2a9f686f8d9705 RISC-V: Eliminate extension after for *w instructions
e73a307f5027aeb124fa824621ad980aa983931b [Committed] Bug fix to new wi::bitreverse_large function.
8b327e0e273d525275e6236d1048192284779732 [testsuite] bump some tsvc timeouts
1379ae33e05c28d705f3c69a3f6c774bf6e83136 RISC-V: Add more test cases for RVV FP16
07b86ab138bf8be8cb331015cd2b9775c6856ac6 Fold _mm{,256,512}_abs_{epi8,epi16,epi32,epi64} into gimple ABSU_EXPR + VCE.
dac73e4c64bf62be18bd5203e4e0f3e6bc64b4dc Explicitly view_convert_expr mask to signed type when folding pblendvb builtins.
7f4644f8c683b6a60462a5e10ab67a0598945c37 RISC-V: Fix one warning of frm enum.
cb33116afc2da3024cffdeed5d90b69c3820017b RISC-V: Refactor requirement of ZVFH and ZVFHMIN.
3e12669a0eb968cfcbe9242b382fd8020935edf8 middle-end/110182 - TYPE_PRECISION on VECTOR_TYPE causes wrong-code
45b7da5f4951c3e9e5187487d611d16ff8cf148f testsuite: fix the condition bug in tsvc s176
47203d89a0ff914406f635bf9cf34e61ed6f19c5 VECT: Add SELECT_VL support
55dcf277b5dc10702593b7c2fc0fc63917ce14f7 RISC-V: Enable select_vl for RVV auto-vectorization
a53a83b63b4c4b3f7d2d997b3a26d82abb883f9a RISC-V: Add test cases for RVV FP16 vreinterpret
20c85207abd543c76818032632a5f1b3aea5495b RISC-V: Rework Phase 5 && Phase 6 of VSETVL PASS
7fc2b9ea2c41ae28154288c0a56e3e5c53b7df5b RISC-V: Support RVV FP16 MISC vlmul ext intrinsic API
b50b9d369c74b7bd86a2b2beb93877f1e6c253ea RISC-V: Add test cases for RVV FP16 undefined and vlmul trunc
e52be6034fa0171c26f571f4ad1a5686594f32a9 Add missing vec_pack/unpacks patterns for _Float16 <-> int/float conversion.
3ad0ef34ccbe656a7a9e5962fe1173226104174a vect: Don't pass subtype to vect_widened_op_tree where not needed [PR 110142]
84cbf560ff62a57432374d8a878251234ffcb99a RISC-V: Add ZVFHMIN block autovec testcase
6631fe419c6e47121e54fa3bbcc330dc04efd9a0 RISC-V: Add RVV narrow shift right lowering auto-vectorization
8d3eb3ad5388d2f523e4a6f886c4b3364f77f51f Fix disambiguation against .MASK_STORE
145b5db151277133a2cfdb2d32d1756ff7df241b RISC-V: Support RVV FP16 MISC vget/vset intrinsic API
7a4794af9aa2d7621b67ea026f29a771590f61a1 RISC-V: Fix one potential test failure for RVV vsetvl
d150afb4791e8dff4fc1d4e4b10938b55e58cb16 RISC-V: Enhance RVV VLA SLP auto-vectorization with decompress operation
de5f3bbf95674c2e6688b2ce7e7a01cdc236ea41 RISC-V: Fix V_WHOLE && V_FRACT iterator requirement
95e2a51685d5ce977c332735ddc5ef39e777639e RISC-V: Fix one typo in full-vec-movel test
1c3661e224e3ddfc6f773b095740c0f5a7ddf5fc Fix disambiguation against .MASK_LOAD
0f3d07e16fec7bea2fd033d9ec8ff08ea7effa39 middle-end/110232 - fix native interpret of vector <signed-boolean:1>
1d4d302acd915a81f4b7d7a6db44999531f2fd31 RISC-V: Add vector psabi checking.
cbe7f069e6a1a5c4f17019f4449da35a182775fc RISC-V: Fix bug of VLA SLP auto-vectorization
325bfe220517d073ddd0f413cf95465d89f273ac RISC-V: Add more SLP tests
a07dadba85f1b15e270c227dfa70e2fdf331494f RISC-V: Add comments of some functions
06a0f07220cea449b4683f9bb9cce2e5de1e5a35 RISC-V: Remove duplicate `#include "riscv-vector-switch.def"`
40eafcd83d6ee644ec48985fd5a9696921ea10e7 Avoid duplicate vector initializations during RTL expansion.
8a3a4fb273f9c69b8f9f6c303508610d34b3ebf1 RISC-V: Bugfix for vec_init repeating auto vectorization in RV32
41738a1b3f333d0283fe911f715194f602d318f6 RISC-V: Align the predictor style for define_insn_and_split
0ec3fbb5903ac3ad735b3154e814b46724fe1a27 RISC-V: Ensure vector args and return use function stack to pass [PR110119]
9e3607e19bcd34e1fc857ca44ae30a8a1a4f5e20 RISC-V: Use merge approach to optimize vector permutation
710b8dec61a73cbbf5dadbdd2070a85e690e8184 Missed opportunity to use [SU]ABD
59a8207f83855d756a6a87fa4b9537899d88f0a2 ada: Fix wrong finalization for double subtype of bounded vector
27612ce352921d74086102d9ad4d3e011923f837 RISC-V: Fix one warning of maybe-uninitialized in riscv-vsetvl.cc
dd6e1cbac8682106c5167c105f2807014288b852 RISC-V: Fix VL operand bug in VSETVL PASS[PR110264]
d0cf0c6c8449009697ad29dd7cb60e7f655628f2 RISC-V: Bugfix for RVV integer reduction in ZVE32/64.
fcf4e50f852e6c3e7ce777573b282c26b85a7d77 RISC-V: Fix one typo for reduc expand GET_MODE_CLASS
85c39a3cf157916ac494e8e90ad1df2cb6bf5cf2 AVX512 fully masked vectorization
c3e720887eca17342b0c7870d69687caf9e5269f RISC-V: Add (u)int8_t to binop tests.
51795b91073798c718df6fafb01303861641a5af RISC-V: Implement vec_set and vec_extract.
9b24611acf2cda332378a84a1858752c51f61411 RISC-V: Add sign-extending variants for vmv.x.s.
47ffabaf669e0c3950c7b1904f0873b006664d99 RISC-V: Add autovec FP binary operations.
da6cc50819c6652e9612cf5b35886afc284afb38 RISC-V: Add autovec FP unary operations.
ccfdda34341423c6034876856cd8ba50f0ca0ef3 VECT: Support LEN_MASK_{LOAD,STORE} ifn && optabs
60c120686da91d84b970ad949073c91085a52b91 Fix build of aarc64
8968e92cc65ef4cfe9dbba86b7873490139100b0 simplify-rtx: Simplify VEC_CONCAT of SUBREG and VEC_CONCAT from same vector
c5309565d007acdeda9abcfef3854db1ba0b1e1b Remove -save-temps from tests using -flto
1f97a0b412ed0984ff4af381b222b87424c08dbd vect: vectorize via libfuncs
2ba7347aba59faa119345c7b374fbbf1f35bae85 RISC-V: Bugfix for RVV float reduction in ZVE32/64
26bb67fc4d4b4bbefe298e21c965d41bb412eeb6 RISC-V: Bugfix for RVV widenning reduction in ZVE32/64
5fad77857198981c16d9e5eae81e02a45113cca8 RISC-V: Fix VWEXTF iterator requirement
7b34cacc5735385e7e2855d7c0a6fad60ef4a99b optimize std::max early
dbcbc858c71f69da76d1f36d6bb5d72f2db11eda RISC-V: Save and restore FCSR in interrupt functions to avoid program errors.
1d2308d68571ad7f84b2319574f381c486a58a3a RISC-V: Add tuple vector mode psABI checking and simplify code
62514099cb56574d96e29e2688aca23eeba5268f RISC-V: Fix fails of testcases
37c167e89b031df77fe3133baebf5bf362151b05 RISC-V: testsuite: Fix vmul test expectation and fix -ffast-math.
4a6c44f4ad4198382b7c70f4d40eefb69e71132e RISC-V: Fix compiler warning of riscv_arg_has_vector
b26f1735cb8dcf690e9bd25f27d9f35002f3a291 RISC-V: testsuite: Add -Wno-psabi to vec_set/vec_extract testcases.
1c0b118babcd56dc886976b81727a9a77fc311c3 RISC-V: Optimize codegen of VLA SLP
cb421ffff66914e56a270dfb1cedb9bb890b43c2 RISC-V: Set the natural size of constant vector mask modes to one RVV data vector.
649c640cc4a2b4d9057613556ac989aed638c010 RISC-V: testsuite: Add missing -mabi=lp64d.
7f986e2ed9323099bf142756d282002baa869289 ipa-cp: Avoid long linear searches through DECL_ARGUMENTS
6f19cf7526168f840fd22f6af3f0cb67efb90dc8 Use intermiediate integer type for float_expr/fix_trunc_expr when direct optab is not existed.
b9401c3a323c59705eca177bf72c13c0d2f462b6 vect: Add testcases for unsigned conversions [PR110018]
1742ea94aaa758a2b0c40360f89e27770bd8ffeb Improve vector_vector_composition_type
efc7fadff587b675552cd130cffe8c96c0feb4fc Optimize vector codegen for invariant loads, fix SLP support
6b32400e19a702137fd11571d199f725add0daf6 Bogus and missed folding on vector compares
1fe09b90f856ba27c3e44dda156b28adb5d4d8ea Use element_precision for match.pd arith conversion optimization
4127e0f3313c961b4b4e5efad85a25c40c2510c2 Properly guard vect_look_through_possible_promotion
4f2fcf21d4c939831c299cb884cbeaca1d33fa8e Fix tree_simple_nonnegative_warnv_p for VECTOR_TYPEs
96854fd753868d26dd8f270fff8c3703f7cb6c86 Deal with vector typed operands in conversions
2acbbf41d4c2a3362991863ce265041f9a2feee4 Fix initializer_constant_valid_p_1 TYPE_PRECISION use
dd2eb972a5b063e10c83878d5c9336a818fa8291 libstdc++: Use RAII in std::vector::_M_realloc_insert
d39f4889cc24c5c96cf9112045298e0945b9932c VECT: Apply LEN_MASK_{LOAD,STORE} into vectorizer
b2e075a594e93a4fc89de8fa53db5c32a4de83b5 text-art: remove explicit #include of C++ standard library headers
0a3b1a095d451427571299fc78f29dec94c6931c RISC-V: Support RVV floating-point auto-vectorization
95a2e5328e5aa15724ab8da4aa622a0bfc40c9e5 RISC-V: Refactor the integer ternary autovec pattern
c79476da46728e2ab17e0e546262d2f6377081aa Refine maskloadmn pattern with UNSPEC_MASKLOAD.
ae10eb041da70d39f9cd0feb1b704e5c9d6a62aa Revert "RISC-V:Add float16 tuple type support"
319e6fe96027f53719fd07b5ed057100b19ac802 Revert "RISC-V:Add float16 tuple type abi"
df80ca2d95a5f6c782b4648d375761833123203a internal-fn: Fix bug of BIAS argument index
d42d199e9ea72fb220ea00195dffb5c142226188 RISC-V: Enable len_mask{load, store} and remove len_{load, store}
b23ec2de3b992784c3e376da8f51f962daca4d86 RISC-V: fix expand function of vlmul_ext RVV intrinsic
9326a49c9e9d6316bc960505a55da2dd06bc10af RISC-V: Optimize VSETVL codegen of SELECT_VL with LEN_MASK_{LOAD, STORE}
068eba260fa362616ea82ebb37ed86eb9cc59ac6 RISC-V: Fix one test failure of dg config.
77a50c772771f681085922b493922516c3c03e9a Don't use intermiediate type for FIX_TRUNC_EXPR when ftrapping-math.
1bfe7e5352d1f4ac525317454aca45aa80a517ba Use cvt_op to save intermediate type operand instead of "subtle" vec_dest.
9f76f04be40adffb2d3498010a23051502031140 RISC-V: Remove redundant vcond patterns
c3bdee86183b3d84f269e9775b2603f8f8221417 Fix TYPE_PRECISION use in hashable_expr_equal_p
5b3d421be747386349981c6291f0af1756b1112c Avoid shorten_binary_op on VECTOR_TYPE
c7b0707ceb24fd10a726780bb42bbbde0c2e06b1 narrowing initializers and initializer_constant_valid_p_1
a024176a97b0176f526862836c33e283b8db4197 RISC-V: Remove duplicated extern function_base decl
53d6f57c1b20c6da52aefce737fb7d5263686ba3 tree-optimization/110381 - preserve SLP permutation with in-order reductions
9302b0743b366037379af0568534c23ab597b4d4 vect: Cost intermediate conversions
f0deeefebb661a1e6560e10bdb19c142792ef9c1 GIMPLE_FOLD: Fix gimple fold for LEN_{MASK}_{LOAD,STORE}
c2ebccc97190a978a44e341516b488f02a78c598 Fix profile of forwarders produced by cd-dce
2d1a3629ba3034cc16599eafb530cdada426bab3 RISC-V: Support const vector expansion with step vector with base != 0
dbf8ab449417aa24669f6ccf50be8c17f8c1278e Refine maskstore patterns with UNSPEC_MASKMOV.
dd86a5a69cbda40cf76388a65d3317c91cb2b501 tree-optimization/96208 - SLP of non-grouped loads
d915762ea9043da858d388b60b2d8093ff77eeab match.pd: Use element_mode instead of TYPE_MODE.
201c6c322f3e88367ac9b6f476cf76b755d3c4b1 RISC-V: Split VF iterators for Zvfh(min).
b95dcaa5a7491e6f97e5fac902d55e8a58e068d3 RISC-V: Implement autovec copysign.
1f3d97bdf1e2ac3770468127fb39645bb68f6291 RISC-V: Add autovec FP int->float conversion.
a9b40612baf2f936ac1d211fbc0b3e46404cefa7 RISC-V: Add autovec FP widening/narrowing.
5fad4da8d968bbb198d593ff93ab485939ca1a28 RISC-V: Add autovect widening/narrowing Integer/FP conversions.
d35702d90e559f20f6c17d55cb0276c4fc60766c RISC-V: Support floating-point vfwadd/vfwsub vv/wv combine lowering
fe48f2651334bc4d96b6df6b2bb6b29fcb732a83 Prevent TYPE_PRECISION on VECTOR_TYPEs
b7ab876fa96ce3b48120c14f327c1e199356e955 RISC-V: Support vfwmacc combine lowering
51c8cbc6bba387f953d9be48c4a4c8b657dd54a5 tree-optimization/110443 - prevent SLP splat of gathers
237e83e2158a3d9b875f8775805d04d97e8b36c1 tree-optimization/110451 - hoist invariant compare after interchange
9757e4440bd8755d327601a60a73d57d712583ed d: Fix d_signed_or_unsigned_type is invoked for vector types (PR110193)
4d1e97f5838b0b6c12d256883e24a8cb3258a134 RISC-V: Allow rounding mode control for RVV floating-point add
e714af12e3bee0032d8d226f87d92c9bc46f0269 RISC-V: Support vfadd static rounding mode by mode switching
4e9f6c14280699997a633cefd3fb315b2bd4762c A couple of va_gc_atomic tweaks
1e6f1659bd7337e91a88086f8092ada01e80ac94 middle-end/110461 - pattern applying wrongly to vectors
6d2eddf456f2d6494cac490c4aa3e7d089926098 middle-end/110452 - bad code generation with AVX512 mask splat
cd23ed2119120bd7b710fbe679fdfcb8f4461800 tree-optimization/110460 - fend off vector types from vectorizer
16e4f09a594f801f68eb0a3e35d1c6e60d402b64 tree-ssa-math-opts: Use element_precision.
9dc18fca431626404b0692c689a2e103666e7adb Compute ipa-predicates for conditionals involving __builtin_expect_p
c0439218eb79aa0293291aed92453a59db8c6e85 tree-optimization/110381 - fix testcase
1cde8e5d45d74cf7ba85772b99b41a7c81769ff4 RISC-V: Refactor vxrm_mode attr for type attr equal
aec90c8bf30cbd66e4febae2c78622dc217f3918 Mid engine setup [SU]ABDL
eab57b825bcc350e9ff44eb2fa739a80199d9bb1 Fix handling of __builtin_expect_with_probability and improve first-match heuristics
6735d66083953315c0d7d491df07d36061093a24 jit: avoid using __vector in testcase [PR110466]
02460c0b8c9000359a09440f9532664a7835f158 Fix update_bb_profile_for_threading
7e904d6c7f252ee947c237ed32dd43b2c248384d Fix profile update in copy-header
1bff9e625b4d2cd2847fcaae4a478ad33b4f86c3 d: Fix testcase failure of gdc.dg/Wbuiltin_declaration_mismatch2.d.
8cb087d869be698a86b082a7248d03e468ef1eb1 testsuite: Add vect_float_strict to testcase [PR 110381]
bd7e9856fe5bbeb487797476c4fffb660f63cf4f tree-optimization/110506 - bogus non-zero mask in CCP for vector types
000590c074615cbfffb6ad854a6474e623801460 tree-optimization/110506 - ICE in pattern recog with TYPE_PRECISION
14fa8c1d651a2e9fd3d9e75ab746589a36c86986 Revert "RISC-V: Support vfwnmacc/vfwmsac/vfwnmsac combine lowering"
bc32918b063b9fa3dffc8815478a81df6ad999ca RISC-V: Support vfwmul.vv combine lowering
b8806f6ffbe72ed8fb7aba3b3a9196ec4d13e614 Middle-end: Change order of LEN_MASK_LOAD/LEN_MASK_STORE arguments
7c521f6751e47d9dfaca2c8288c65f94e2f54d3d RISC-V: Add support for vector crypto extensions
33245d6b87a284495304c9952813b6b83d5df99f libstdc++: Qualify calls to std::_Destroy and _Destroy_aux
c26f275861378cb4e339563b22e06cc8e2dc8120 RISC-V: Optimize local AVL propagation
db3efdaff59374063bde93764a0dff3317e04b22 Machine Description: Add LEN_MASK_{GATHER_LOAD, SCATTER_STORE} pattern
eed9eeaab30fd7b9e509ec3cf78f5f3c881b0abf Revert "RISC-V: Fix one typo of FRM dynamic definition"
0682a32c026f1e246eb07bb8066abca4636f01d8 tree-optimization/110310 - move vector epilogue disabling to analysis phase
f703d2fd3f03890a180e8cc04df087c208999e81 middle-end/110495 - avoid associating constants with (VL) vectors
729aa4fa48d627c4344764676edad3b65d40a003 tree-optimization/110436 - bogus live/relevant for unused pattern
2c12ccf800fc7890925402d30a02f0fa9e2627cc PR tree-optimization/110531 - Vect: avoid using uninitialized variable
6eea7eaf11e2b04670c4bb75f48600747dd76768 Remove unnecessary check on scalar_niter == 0
4870a18ac2d5e0bd8515ea473006071e65622e52 libstdc++: Use RAII in std::vector::_M_default_append
450b9566d5888931aa6f8bee9799c0b60abf75c8 Fix typo in vectorizer debug message
a9c6db31cbe9bedd2dde1c50a7007a67750a0f50 adjust testcase for now happening epilogue vectorization
f4a2ae2338962208b8039f154f5912402e94c378 Change MODE_BITSIZE to MODE_PRECISION for MODE_VECTOR_BOOL.
34c614b7e9dcb52a23063680f3622c842a9712ec VECT: Apply LEN_MASK_GATHER_LOAD/SCATTER_STORE into vectorizer
429905d809bbf2398bf666d65322b87ac7381e43 RISC-V: Change truncate to float_truncate in narrowing patterns.
70b041684a2222b8f19200cc240a13d703b210a7 RISC-V: Use FRM_DYN when add the rounding mode operand
df9a6cbb087d674ccee545d642e688f1979dcb3a RISC-V: Allow variable index for vec_set.
573bb719bb82d1d61ca54eb4fddf82eccfd56470 RISC-V: Support variable index in vec_extract.
c30efd8cd634f8a59bc1bf52e71d8866bf52d56c gimple-isel: Recognize vec_extract pattern.
7339e725b995912747c01c3ec80ce602512f45df tree-optimization/110474 - Vect: select small VF for epilog of unrolled loop
a73b65b74105e76473cc2825bb4e7253deaf18b3 Fix PR 110554: vec lowering introduces scalar signed-boolean:32 comparisons
e1c23189abdd7bbbc066b2aa47ae4b7db0d69f2b Adjust rtx_cost for DF/SFmode AND/IOR/XOR/ANDN operations.
0d40aeb9b85db87e4a502a530db5b89027d1a3b6 RISC-V: Handle rouding mode correctly on zfinx
2ab065c3e6950bc4995fcb16cebc5164d6213708 Fix expectation on gcc.dg/vect/pr71264.c
f2b37c8a38e44696287b19856bcbbf52e8b004f8 VECT: Fix ICE of variable stride on strieded load/store with SELECT_VL loop control.
deebf06a1207bf7d84f4bebc462137d9436ee6dd tree-optimization/110563 - simplify epilogue VF checks
224fd59b2dc8a5fa78a309a09863afe9b3cf2111 Vect: use a small step to calculate induction for the unrolled loop (PR tree-optimization/110449)
d4c2e34deef8cbd81ba2ef3389fdbaf95c70e225 Improve scale_loop_profile
55900189ab517906efe08f8d17f3e4a310ee7fff RISC-V: Fix one bug for floating-point static frm
5966349aa7e1fcbee2558f996b2484b433a0fcf4 Fix epilogue loop profile
63ae6bc60c0f67fb2791991bf4b6e7e0a907d420 vect: Fix vectorized BIT_FIELD_REF for signed bit-fields [PR110557]
a3ad2301d2f4aab2deeb286fa5bd0282260bfd0a GCSE: Export 'insert_insn_end_basic_block' as global function
1e2e5713a6dbd36ac48e8cf78f0eeb303d820afe doc: Add doc for RISC-V Operand Modifiers
312839653b8295599c63cae90278a87af528edad testsuite: Unbreak pr110557.cc where long is 32-bit
4736ddd11874fe215662ac18877ce8eded1f5976 tree-optimization/110614 - SLP splat and re-align (optimized)
6c96d1e4e877d045f7e0c22786244653d2e1cf99 VECT: Add COND_LEN_* operations for loop control with length targets
5d9fc2aced3a2128527afd4a627424542f238471 testsuite: Require vectors of doubles for pr97428.c
9aabf81f40f0ee130646ab5e60d158218d1276cc RISC-V: Optimize permutation codegen with vcompress
13c556d6ae84be3ee2bc245a56eafa58221de86a Break false dependence for vpternlog by inserting vpxor or setting constraint of input operand to '0'
d05c8b016fb96cdcc445406469867b757776894e riscv: xtheadbb: Add sign/zero extension support for th.ext and th.extu
e15a82a1fea3a68f47d9a5a8634265eeec1562a8 riscv: xtheadmempair: Fix doc for th_mempair_order_operands()
208e10bf8a90f49aa40152ab7fcebe8cd7c5d31a riscv: thead: Adjust constraints of th_addsl INSN
b621883620b127caf20e88e59fa73e666960013e riscv: Simplify output of MEM addresses
a3480aacc4ab01651725a63e05829a43bc23d549 riscv: Define Xmode macro
96ad6ab29b3d6d8646c97760cc87a17f405e09d2 riscv: Move address classification info types to riscv-protos.h
423604278ed550f07f80c9687a441c58a6cd6e85 riscv: Prepare backend for index registers
96d32c111e63b7cde38410f4e316512771c8ecff riscv: thead: Factor out XThead*-specific peepholes
c1b3b5a056b8940f845123a8e80ef8e646f40682 RISC-V: Support integer mult highpart auto-vectorization
25f831eab368d1bbec4dc67bf058cb7cf6b721ee tree-optimization/110630 - enhance SLP permute support
a454325bea77a0dd79415480d48233a7c296bc0a genopinit: Allow more than 256 modes.
0d4dd7e07a879d6c07a33edb2799710faa95651e VECT: Apply COND_LEN_* into vectorizable_operation
5a13caf2666bdf586272cc24a08ab90499771c95 riscv: thead: Fix failing XTheadCondMov tests (indirect-rv[32|64])
44f244e4672578be6cc513104473981790a1c164 RISC-V: Support COND_LEN_* patterns
f048af2aa3dccec4d28c32056a1d5972f4049806 RISC-V: RISC-V: Support gather_load/scatter RVV auto-vectorization
574a1ea4406dd1dbf14e149a9b5d142f6cbdf32a vect: Move vect_model_load_cost next to the transform in vectorizable_load
2115c22617c88fea0470cb87de284de904ed786e vect: Adjust vectorizable_load costing on VMAT_GATHER_SCATTER && gs_info.decl
bbee29e82881c30c4f23e29db3e40de71cf49789 vect: Adjust vectorizable_load costing on VMAT_INVARIANT
090d83c25508c108756a534c765d2fa8c07eb261 vect: Adjust vectorizable_load costing on VMAT_ELEMENTWISE and VMAT_STRIDED_SLP
131943ca22e012d6ab953b1406e1fd51eac4d418 vect: Adjust vectorizable_load costing on VMAT_GATHER_SCATTER
c4a8f4414215be6bf381398fdb391afd1440c8f9 vect: Adjust vectorizable_load costing on VMAT_LOAD_STORE_LANES
5f03844b32f45224c33dcea08a20b5a2089082f7 vect: Adjust vectorizable_load costing on VMAT_CONTIGUOUS_REVERSE
a3118d7c153dc9c0af9d892903dc4ebc69f654b0 vect: Adjust vectorizable_load costing on VMAT_CONTIGUOUS_PERMUTE
43ed05a08963a5c3ccc4cc6143d2b322851edd10 vect: Adjust vectorizable_load costing on VMAT_CONTIGUOUS
43fefc1f832a80370ea142273ebc1a76005c68a0 RISC-V: Add more tests for RVV floating-point FRM.
880676d603979852f30b76b1e2a3532b95f08048 RISC-V: Refactor riscv mode after for VXRM and FRM
601a412ef0fe59ce48fb8635ebdaa58b58512a5a RISC-V: Remove the redundant expressions in the and<mode>3.
ad0518d97cfc857183e524fabc104ebeec9e8ccd RISC-V: Recognized zihintntl extensions
d8f5e349772b6652bddb0620bb178290905998b9 ifcvt: Reduce comparisons on conditionals by tracking truths [PR109154]
9ed4fcfe47f28b36c73d74109898514ef4da00fb ifcvt: Sort PHI arguments not only occurrences but also complexity [PR109154]
0d2673e995f0dd69f406a34d2e87d2a25cf3c285 RISC-V: Enable COND_LEN_FMA auto-vectorization
1815e313a8fb519a77c94a908eb6dafc4ce51ffe cprop: Do not set REG_EQUAL note when simplifying paradoxical subreg [PR110206]
c62791fa413a49fc6476ce186b324250f8ae6d40 Fix optimize_mask_stores profile update
061f74c06735e1fa35b910ae0bcf01b61a74ec23 Fix profile update in scale_profile_for_vect_loop
081c623ca88dc53abe34b5f5661e79fcde800cef vect: Initialize new_temp to avoid false positive warning [PR110652]
c29584fc29df0c5075ad57cce5bea447b1d061a3 riscv: Fix warning in riscv_regno_ok_for_index_p
da93c41c4ea124d61d41fb8629b801f74886284c RISC-V: Support non-SLP unordered reduction
70742d08832eb7db4d90f52465966111a19ce3a5 RISC-V: Ensure all implied extensions are included [PR110696]
c1244ceed99bc37069baf164d008ff91f63d3115 RISC-V: Add TARGET_MIN_VLEN > 4096 check
c7ac1de5f5c561b2d90c084a638c232d322d54e6 c++: only cache constexpr calls that are constant exprs
45dd1d91671cbc4a868ec41ada5f070aa487d02d RISC-V: Support basic floating-point dynamic rounding mode
61ec6a45ae3bb741b3afef41cef01094930adf7f RISC-V: Fix RVV frm run test failure on RV32
e6a1b23872995d5344a81cff1857bc861ffee71d RTL_SSA: Relax PHI_MODE in phi_setup
6bab2772dbc42ce7a1b29b03ae84e6e434e23c4e Tighten regexps in gcc.target/riscv/_Float16-zhinx-1.c .
615c2e555d34c2b17513c869b309b8f398376874 IBM zSystems: Optimize vec_cmpge followed by vec_sel
74dc7f1a94e06095108b0ac30ca35d98f3a4bb9c RISC-V: Remove testcase that cannot be compiled because VLEN limitation
48b7404707186856523b908f1720488bf87f6b49 RISC-V: Enable SLP un-order reduction
bd93ef7f1a178079c6cdaccdf953f79a3365b028 RISC-V: Dynamic adjust size of VLA vector according to TARGET_MIN_VLEN
c5c7f1ef5ffcabb7dcbdc96571dbe1b0d675d4a5 RISC-V: Fix testcase failed when default -mcmodel=medany
c283c4774d1cbfd12c2a15b51b18347463694ad0 RISC-V: Throw compilation error for unknown extensions
c1e420549f2305efb70ed37e693d380724eb7540 testsuite: Add 64-bit vector variant for bb-slp-pr95839.c
ba49332baba622cb9af8e34629636f2586664c7e VECT: Add mask_len_fold_left_plus for in-order floating-point reduction
879c52c9dab5940a81aae8374831a6e4f78605ee RISC-V: Refactor RVV machine modes
bb0da4542df887a530d5a75e08abf5cbb821fe6b RISC-V: Align the pattern format in vector.md
ceae1400cf24f329393e96dd9720b0391afe858d middle-end/61747 - conditional move expansion and constants
bb42f05d0738bddc721e838ebe9993df39ff2e0f RISC-V: Fix one incorrect match operand for RVV reduction
c5bd0e5870aed178b7f82e7b94f59a383e7c5b4f vectorizer: Avoid an OOB access from vectorization
b6b72562d116bd0a589dce39437f9d2b3c34491f CODE STRUCTURE: Refine codes in Vectorizer
a4913a19d24a794c97f38d9c65c47c1fb9f2140c analyzer: avoid usage of TYPE_PRECISION on vector types [PR110455]
a6654c08fde11890d621fa7831180d410054568a sccvn: Correct the index of bias for IFN_LEN_STORE [PR110744]
9a8782e63790842d1bfa03e12eecf73c4aaeb1f8 tree-optimization/110742 - fix latent issue with permuting existing vectors
9f8f37f5490076b10436993fb90d18092a960922 tree-optimization/88540 - FP x > y ? x : y if-conversion without -ffast-math
bd68b33f80ae4726393dbd6e12025f99dc269c12 cleanup: Change LEN_MASK into MASK_LEN
363bb3dca429e885ce3d134fc50f8ab05aacda0f cleanup: make all cond_len_* and mask_len_* consistent on the order of mask and len
3e76bdd5fd289ac38326060bba91b0e264c50ccf cleanup: Change condition order
1d96b11e4aef1727b3bd3215d0d8140a504d8eb7 RISC-V: Fix redundant variable declaration.
ea272814c23d2b88dc846b225c041594ae6be3e3 Implement flat loop profile detection
a31ef26b056d0c4f0a9f08b6eb81456ea257298e Avoid scaling flat loop profiles of vectorized loops
6ed43713e4c894c196ee07991aa25e09322f8ab4 testsuite: Limit bb-slp-pr95839-v8.c to 64-bit vector targets
ecfa870ff29d979bd2c3d411643b551f2b6915b0 RISC-V: optim const DF +0.0 store to mem [PR/110748]
bbc1a102735c72e3c5a4dede8ab382813d12b058 Fix PR 110066: crash with -pg -static on riscv
73ff915a169bf3f4b15c75fa3b6e658f7fe86b46 RISC-V: Bugfix for allowing incorrect dyn for static rounding
d07504725973ccdec78929a09dc13e5ebd9472f6 vect: Don't vectorize a single scalar iteration loop [PR110740]
42b17d00c33dd9994dee973c001d85dc09b79b24 VECT: Support floating-point in-order reduction for length loop control
fe39eca4136bf2f9dc740c05e7957027736fc11b vect: Handle demoting FLOAT and promoting FIX_TRUNC.
8547c451aac1c1f0178cf0914243b20fa0dde0c3 Remove unused tree-vectorizer.h include
2b074dc7bdf4402c1e3e44f247e27f3ef51bd8e4 Remove SLP_TREE_VEC_STMTS in favor of SLP_TREE_VEC_DEFS
aa1e2d543869a07580f9b2112f2d7367f83a6753 [committed][RISC-V] Fix minor issues in diagnostic message
d90e81af8052e96ae3262ed3ac42682537fc42c6 [committed] Use single quote rather than backquote in RISC-V diagnostic
ad0dde0af107aaf6a91e37f3aa31249e34df6ce0 RISC-V: Fixbug for fsflags instruction error using immediate.
adbac207e917e42dac7b30553d91f3bd1196bbee RISC-V: Fix vector tuple intrinsic
5d09fb683a8abce49dc0992f5102aa0189f8f632 tree-optimization/106081 - elide redundant permute
d74aed3d7aefbb661ae629a91ca7baa4916085f0 [committed] Add check_vect in a testcase
7931a1de9ec87b996d51d3d60786f5c81f63919f libstdc++: Avoid bogus overflow warnings in std::vector<bool> [PR110807]
f30e62b0ee05befd20863466d1fb55a34d15c228 libstdc++: Require C++11 for 23_containers/vector/bool/110807.cc [PR110807]
aee2817ecd261ac2fd2717a2a36db81906ff2346 [PATCH 1/5] [RISC-V] Recognize Zicond extension
74290c664d1d4c067a996253fe505555ec671668 [PATCH 2/5] [RISC-V] Generate Zicond instruction for basic semantics
6f709f79c915a1ea82220a44e9f4a144d5eedfd1 [committed] [RISC-V] Fix expected diagnostic messages in testsuite
9890d4e8bcda1f34b8eefb481935ef0e4cd8069e vect: Treat VMAT_ELEMENTWISE as scalar load in costing [PR110776]
cdc65458334faad1a2f00cf17e64e39b25d697ca RISC-V: Fix uninitialized and redundant use of which_alternative
d0ae71c26ab9e383768160ea266f56db2e2ae43c RISC-V: Remove unnecessary vread_csr/vwrite_csr intrinsic.
33b153ff521e2f33acf7d076f8625d85319b731d RISC-V: Enable basic VLS modes support
d1c072a1c3411a6fe29900750b38210af8451eeb tree-optimization/91838 - fix FAIL of g++.dg/opt/pr91838.C
9bd1ee6d330b0441c165d889b6b25a5c85caf427 Fix profile update in tree_transform_and_unroll_loop
d023775c1180730ce15adfe191a98c174618f814 Make store likely in optimize_mask_stores
b9d7140c80bd3c7355b8291bb46f0895dcd8c3cb loop-split improvements, part 1
1d6af545bf7fa34c9bdd17b41e81abd019d073a8 RISC-V: Remove vxrm parameter for vsadd[u] and vssub[u]
b24acae8f4d315a5b071ffc2574ce91c7a0800ca loop-split improvements, part 2
fdbb0863b6111ad3f45b79f47ebfe471555b2c4a RISC-V: Specify -mabi in rv64 autovec testcase
92a891e869d35c940d2a7b92355af02d78c9a86e RISC-V: Enable basic VLS auto-vectorization
9f63862184b14a5f04a6e91c8c055687f2720d73 RISC-V: Bugfix for RVV floating-point rm suffix sequence
1349f530753be963043d77c1d51da161133d5afe RISC-V: Return machine_mode rather than opt_machine_mode for get_mask_mode, NFC
129feec0ba4f8ce74edf1fdf7da37b54968d3d37 [Committed] PR target/110843: Check TARGET_AVX512VL for V2DI rotates in STV.
5a770748e8eea38a4ed1f3c4dd8d807aa1640536 RISC-V: Drop unused variable
b769811e7c1b3dff2fa0ec2c37b52859d7bceed4 fur_list should not use the range vector for non-ssa operands.
85699f1d23aa71cbfeb13d72ec987e5217d410c2 RISC-V: Support RVV VFSUB and VFRSUB rounding mode intrinsic API
46a508ec7aee5038cc0a8800b756838ebef7f6d2 RISC-V: Support CALL for RVV floating-point dynamic rounding
1762957384c659a2e6827939ce4b1f1d1ad40003 Fix profile update after prologue peeling in vectorizer
7c09e7e24b0d04857d5880197959e75bda0c489e [PATCH] Add POLY_INT_CST support to fold_ctor_reference in gimple-fold.cc
e15d0b6680d10d7666195e9db65581364ad5e5df [PATCH 3/5] [RISC-V] RISC-V Conditional Move costing [was:Generate Zicond instruction for select pattern with condition eq or neq to 0]
2d73f2eb80caf328bc4dd1324d475e7bf6b56837 [committed] [RISC-V] Avoid sub-word mode comparisons with Zicond
5b501863ac7da57858fdd464dfb7a776143f22a2 [PATCH 3/5] [RISC-V] Cost model for Zicond.
f0b7a61d83534fc8f7aa593b1f0f0357a371a800 Support vec_fmaddsub/vec_fmsubadd for vector HFmode.
2e93b92c1ec5fbbbe10765c6e059c3c90d564245 Fix profile update after cancelled loop distribution
21c2815605fb0ec43ea65b1104990cf03248013e RISC-V: Support RVV VFWADD rounding mode intrinsic API
399c8dd44ff44f4b496223c7cc980651c4d6f6a0 tree-optimization/92335 - Improve sinking heuristics for vectorization
1d5bc3285e8a115538442dc2aaa34d2b509e1f6e [committed][RISC-V] Fix 20010221-1.c with zicond
cba9db950371e810e32e75425707beceb85bb0f0 RISC-V: Support RVV VFWSUB rounding mode intrinsic API
1b53748c61a8b6489ca9a56a25037131335d3cc6 RISC-V: Remove redudant extern declaration in function base
373600087df596b26c10d18eb0c5082c2788808b RISC-V: Support RVV VFMUL rounding mode intrinsic API
39663298b5934831a0125e12f113ebd83248c3be RISCV: Add -m(no)-omit-leaf-frame-pointer support.
29370f1387274ad5a35a020db6a5d06c0324e6c1 tree-optimization/110838 - vectorization of widened shifts
93fd44fde638a4d5fc34547c25aa02f346170430 RISC-V: Fix one comment for binop_frm insn
d61efa3cd3378be38738bfb5139925d1505c1325 [committed][RISC-V] Remove errant hunk of code
9e3fd332959930efd3cabf222afbac910507d2f3 [PATCH 3/5] [RISC-V] Generate Zicond instruction for select pattern with condition eq or neq to 0
d6ac3aae2a32869d9d37f3bc7783d9bbad27d72b Update loop iteration estimates after splitting
b7ab3938c638bf5aacfe926ed19aba1627702a71 RISC-V: Support RVV VFDIV and VFRDIV rounding mode intrinsic API
dd03fb9962e4776286d7654df09549c0e712465e RISC-V: Support RVV VFWMUL rounding mode intrinsic API
098d6fbe6477820f32e1ca3eb3de870ef4861b89 Revert "RISC-V: Support RVV VFNMSAC rounding mode intrinsic API"
b87a4739a4c043e8063f2955a706b949dcc20dae Revert "RISC-V: Support RVV VFMSAC rounding mode intrinsic API"
7a6b4d87d8aa50ef644414fe224c3540c540c2d4 Revert "RISC-V: Support RVV VFNMACC rounding mode intrinsic API"
2d2f090e67b26457596e7d5aabe629e3da58db94 Revert "RISC-V: Support RVV VFMACC rounding mode intrinsic API"
1a599caab86464006ea8c9501aff6c6638e891eb tree-optimization/110838 - vectorization of widened right shifts
73b98860767ac03aa31ad4ca8b73f40484bd7562 frontend: Add novector C++ pragma
6fb5da03107f48e0b76f123933edcc07bae7e0aa frontend: Add novector C pragma
046640f9e53ae92a255e5269b0ca33b1f041b593 middle-end: clean up vect testsuite using pragma novector
4e87c953d16377457b31b65b6c3268d932e462ab [PATCH v3] [RISC-V] Generate Zicond instruction for select pattern with condition eq or neq to 0
838237aeeba578fc2cf42bfd3ecb9d9a4fb7a2b4 Fix profile update after peeled epilogues
e3e6db43640fadc9aa41c5459d43e5541d83f29a Disable loop distribution for loops with estimated iterations 0
1fc96cdd0a3df2ba90a04dc507a44a02fbebd1f3 Add builtin_expect to predict that CPU supports cpuid to cpuid.h
73c14db6d1a8c1267137b94c41f2e2c9410dcbb1 Fix profile update after versioning ifconverted loop
aa63c20420db78ca77ec243af02c7591b88d3b89 Improve -fopt-info-vec for basic-block vectorization
8ae83274d8cc60547e8c92a41a4f4716b045f57a [committed] [RISC-V] Handle more cases in riscv_expand_conditional_move
18c453f0e633abb9b317947b011ec6e07780fba8 [committed][RISC-V]Don't reject constants in cmov condition
9cba4fce837b9fa0b52af64de0bac60ea1906900 RISC-V: Support VLS basic operation auto-vectorization
99e47791a901e71eb2475e3987c51d07f37430a5 RISC-V: Support VLS shift vectorization
8f4d2a4c984f168b8444672aa8f4a103e845dfbf RISC-V: Support neg VLS auto-vectorization
25c4b1620ebc10fceabd86a34fdbbaf8037e7e82 RISC-V: Fix a bug that causes an error insn.
02a015fa320229a057ef721eaf663f3eb22a8ace VECT: Support CALL vectorization for COND_LEN_*
d9f3ea61fe36e2de3354b90b65ff8245099114c9 tree-optimization/49955 - BB reduction with odd number of lanes
6ae5565e78c96868ea6f9a7bb38767b3800d22c9 RISC-V: Support CALL conditional autovec patterns
733e8b48cba745d80ca2d52c1e4f47d1075e30d6 RISC-V: Enhance the test case for RVV vfsub/vfrsub rounding
20659be04c2749f9f47b085f1789eee0d145fb36 [committed] [RISC-V] Fix bug in condition canonicalization for zicond
165b1f6ad1d3969e2c23417797362d0528e65c79 targhooks: Extend legitimate_address_p with code_helper [PR110248]
c4d618143048ac781f435638ef6e788ba870dc53 RISC-V: Support NPATTERNS = 1 stepped vector[PR110950]
a16dc729fda9fabd6472d50cce45791cb3b6ada8 RISC-V: Folding memory for FP + constant case
f088b768d01ae42385697584a2bcac141685dce2 RISC-V: Handle no_insn in TARGET_SCHED_VARIABLE_ISSUE.
e5fe7f2fd69d5a950d8c1e2a068669bda376b2d4 RISC-V: Remove non-existing 'Zve32d' extension
4cede0de9a19ee1a911b27dbe0916e67f1f3d7c9 RISC-V: Refactor RVV frm_mode attr for rounding mode intrinsic
6bdbf1722a312b90a48dea19af545815f0069e86 RISC-V: Add missing modes to the iterators
9b8ebdb60c463fa3641692a21ca0ce24fba89260 Remove insert location argument from vectorizable_live_operation
887f13916b18f46b563d527ad5001c6384e44a60 RISC-V: Support TU for integer ternary OP[PR110964]
da7b43fb0224cdce5157a747fdd6975b7c81c6cf RISC-V: Add MASK vec_duplicate pattern[PR110962]
0ac323238e91c6093709ce8f4176c0c8fb1a693d RISC-V: Add Ztso atomic mappings
797334e931362174eb8ad15ded79cdf8e846e744 RISC-V: Support RVV VFMADD rounding mode intrinsic API
bcda361daaec8623c91d0dff3ea8e576373b5f50 RISC-V: Support RVV VFNMADD rounding mode intrinsic API
59d789b34810d43ddba734e4adb80c29c210e49c VECT: Add vec_mask_len_{load_lanes,store_lanes} patterns
6a8203b7dc0ab694c3f3f4aef503107975bb59aa RISC-V: Support RVV VFMSUB rounding mode intrinsic API
3a13884b23ae32b43d56d68a9c6bd4ce53d60017 Improve BB vectorization opt-info
798a880a0b1fed8a9e3b3e026dd8bd09314b7c38 tree-optimization/110979 - fold-left reduction and partial vectors
2b1b804de2687c9f705cc3625e467dfa18723a45 RISC-V: Specify -mabi for ztso testcases
5bfb5e772f6cf121563f08d27d2c652ea469bbfb VECT: Fix ICE on MASK_LEN_{LOAD, STORE} when no LEN recorded[PR110989]
e80c55e4ca68867ddb3cb3720f857bd22762768c RISC-V: Allow CONST_VECTOR for VLS modes
685abdb4a1fe46a12da5cc9ae1d5aaef9344a339 RISC-V: Fix vec_series expander[PR110985]
9890f377013cf1e4f5b9fab8a7287a5380dade1f RISC-V: Add TAREGT_VECTOR check into VLS modes
4ecc18554bbf789174efe4c9e0be40182898a8ce RISC-V: Support RVV VFNMSUB rounding mode intrinsic API
d15840aa05bc16580b2c79b356012974928e07a4 RISC-V: Support RVV VFWMACC rounding mode intrinsic API
a66873593817f72bbccd86f41128dc5ae404e8b9 RISC-V: Support RVV VFWNMACC rounding mode intrinsic API
d9577b4b4c2a7b4e8bc869d33b7de98a0e507e7c RISC-V: Support RVV VFWMSAC rounding mode intrinsic API
c944ded09595946290778a26794074e69cc65f3e RISC-V: Support RVV VFWNMSAC rounding mode intrinsic API
9be93b80585fc875a2fc6b7d490b640b7fe04365 RISC-V: Support RVV VFSQRT rounding mode intrinsic API
17c22f466162d3a1759f8c607b7e81e7dd631cd9 RISC-V: Minimal support for ZC* extensions.
6e46fcdf24f99ce1272305aac93cac51d45c04d6 RISC-V: Enable compressible features when use ZC* extensions.
7879f589af911ea6a910d08919014b0b2df1b4b1 RISC-V: Add ZC* test for failed march args being passed.
469711f06865979854e587263d3d43137f256b57 RISC-V: Support RVV VFREC7 rounding mode intrinsic API
d5ef0ee307058c5efade84e45228a7576c0141c7 Mode-Switching: Fix SET_SRC ICE for create_pre_exit
9ca0ff5e0988c62fe3080e3f4f99edecac37dff8 vect: Remove several useless VMAT_INVARIANT checks
bcdbedb3e6083ad01d844ed97cf19645c1ef6568 tree-optimization/110991 - unroll size estimate after vectorization
8a6097c7425c4b6294e11dea062df7a883343f47 Use find_loop_location from unrolling
f049868d8db773da4be61d82025e97453d6e9f2b Support constants and externals in BB reduction vectorization
f9e8072f917301f5a794b4935edc40268bf1b362 Cleanup BB vectorization roots handling
0618adfa80fcd2fd7ae03b30553c60a6b1abf573 RISC-V: Fix autovec_length_operand predicate[PR110989]
3064d1f5c48cb6ce1b4133570dd08ecca8abb52d Software mitigation: Disable gather generation in vectorization for GDS affected Intel Processors.
b2a927fb5343db363ea4361da0d6bcee227b6737 Support -m[no-]gather -m[no-]scatter to enable/disable vectorization for all gather/scatter instructions
c6f65ce9483131b1996cbddf8aaaebe0d8e5141c RISC-V: Support RVV VFCVT.X.F.V rounding mode intrinsic API
d5acdd62f090a472026c36fee3dfeb45f2de8429 VECT: Apply MASK_LEN_{LOAD_LANES, STORE_LANES} into vectorizer
fe5788862ba8d5ac4551658d842f2d038bd8d363 RISC-V: Support MASK_LEN_{LOAD_LANES,STORE_LANES}
567258f057913229084c21396b84c219f3fef05d RISC-V: Support RVV VFCVT.XU.F.V rounding mode intrinsic API
dc2529e8243859faf35c66d994756c40978f0ce5 RISC-V: Support RVV VFCVT.F.X.V and VFCVT.F.XU.V rounding mode intrinsic API
f2bec0ac481fb97fc88b976d8255cc85bff7e20e RISC-V: Support RVV VFWCVT.X.F.V rounding mode intrinsic API
ac6b74e9a5a40c28aeb715f43d117a7c4d32f43f RISC-V: Fix one build error for template default arg
1b7418ba1baf0d43fff6c6a68b8134813a35c1d9 RISC-V: Support RVV VFWCVT.XU.F.V rounding mode intrinsic API
a7dba4a1c05a76026d88dcccc0b519cf83bff9a2 Extend fold_vec_perm to handle VLA vector_cst.
c94e0f52f40310b6faeae11bae3366ccb1435199 internal-fn: Fix vector extraction into promoted subreg.
694242930906d9f7ad15977cac6dcbeae1f3d3f2 RISC-V: Implement vector "average" autovec pattern.
083b7f2833d71dd940abcf9cfba99782cb7c07fd libstdc++: Replace all manual FTM definitions and use
a32de58c9e6394e4e6aef0ac95b52d1c774ac8bc Add support for vector conitional not
e7a36e4715c7162ccfd7cd32da985d629bbd9c61 [PATCH] RISC-V: Support simplify (-1-x) for vector.
26a820dc136b00b4dc37609429576b6a914cb572 Emit a warning when AVX10 options conflict in vector width
29547511f7bae06f9f424f8c8583014878240016 RISC-V: Fix incorrect VTYPE fusion for floating point scalar move insn[PR111037]
3d18a528bfd05f0bfdb27f52c2f6c2445f15e4ca RISC-V: Support RVV VFNCVT.X.F.W rounding mode intrinsic API
72fc7e9d6aefbc4de1d3827062e47277fca83ef5 RISC-V: Support RVV VFNCVT.XU.F.W rounding mode intrinsic API
20e1db413ee8bb4d5233d97484e19e4e1d85f4ac RISC-V: Support RVV VFNCVT.F.{X|XU|F}.W rounding mode intrinsic API
3d903a26d7b6b4e32ad9f1f8c6fb5adf766c7cc7 RISC-V: Support RVV VFREDUSUM.VS rounding mode intrinsic API
3a68ef2cccb8a7f15ca188dbffd754d112d75898 RISC-V: Support RVV VFREDOSUM.VS rounding mode intrinsic API
c6259c4975e84b30d7de1f64afaece614d7c4500 RISC-V: Support RVV VFWREDOSUM.VS rounding mode intrinsic API
99b5921bfc8f9122fb7ccb0a4284179fd3a2f2ba Handle TYPE_OVERFLOW_UNDEFINED vectorized BB reductions
903d937569992a885faf8a1bf7d120e9e66f456b RISC-V: Fix XPASS slp testcases
1aaf3a64e92ada283f6d3052151858df2ad99e77 [PATCH] RISC-V: Deduplicate #error messages in testsuite
d7b6cad9d6c40f1dab907abd8e71e713bb2a5bf5 RISCV: Add rotate immediate regression test
c43916857c6586e65f10713fdc5a65909918a8cc RISC-V: Forbidden fuse vlmax vsetvl to DEMAND_NONZERO_AVL vsetvl
86d80395cf3c8832b669135b1ca7ea8258790c19 RISC-V: Revert the convert from vmv.s.x to vmv.v.i
3709ca091bec43ee3203b96146585652c5d84728 RISC-V: Add the missed half floating-point mode patterns of local_pic_load/store when only use zfhmin or zhinxmin
b4c8c551c48f5f29d9a719c4c7fc4fa4cec28fe7 RISC-V: Fix -march error of zhinxmin testcases
f5f47cc1ce75b00427756939a2dab94d3d125f6a tree-optimization/111048 - avoid flawed logic in fold_vec_perm
ac8d3c7c5cd210bef20195346864307660cfa950 vect: Factor out the handling on scatter store having gs_info.decl
70c50c87273d940918225d5c6b03f1ccfb6f978e MATCH: Sink convert for vec_cond
d5dfba19aee783a6ba90fdba1993d576c7ec310b LCM: Export 2 helpful functions as global for VSETVL PASS use in RISC-V backend
e10cb804e658dbd1e9d58f528f3985362e4e72e7 tree-optimization/111082 - bogus promoted min
649388462e9a3c2de0b90ce525de8044704cc521 PR111048: Set arg_npatterns correctly.
4c5712ff47d86a742038477f945d539289c9a7a9 Fix gcc.dg/vect/bb-slp-46.c FAIL
e4e6a92407432cc19db73f8ce108243007d614f0 Fix gcc.dg/vect/bb-slp-subgroups-2.c with 256bit vectors
56c28ce7b52d181641904b4a4a441301a848cf48 [PATCH 1/2] RISC-V: Add quotes to #error messages
ab7de14eaf1d454cb8cbc37dbde89688ec6b7f5a [PATCH 2/2] RISC-V: Add quotes to #error messages (all)
39491441a3aca7725d5a6dfeea4b01229d30c899 [RISCV][committed] Remove spurious newline in ztso sequence
36788c9ff6d044210ddee23154306ba54bc3087b [PATCH] RISC-V: Add Types to Missing Bitmanip Instructions
1d17e3d66736cc8d875bf02530f3f6aa498f0d09 RISC-V: Support RVV VFWREDUSUM.VS rounding mode intrinsic API
eaabae8e305d8df244a00177b92e5d1101600ab0 RISC-V: Change fnms testcases assertion to xfail
c27f06260b248062c3b22f3963858ce3e1ee1882 VECT: Support loop len control on EXTRACT_LAST vectorization
d3b5a1bccc219680dc19281b6fd6cc798bb679eb Fortran: implement vector sections in DATA statements [PR49588]
27de9aa152141e7f3ee66372647d0f2cd94c4b90 tree-optimization/94864 - vector insert of vector extract simplification
2c27600fa79431576f47d55b9ed7b2f4790def67 Simplify intereaved store vectorization processing
f4658e025424ac281dd8b7e61f798f435dbf1cab VECT: Add LEN_FOLD_EXTRACT_LAST pattern
47f95bc4be4eb14730ab3eaaaf8f6e71fda47690 RISC-V: Add multiarch support on riscv-linux-gnu
3571cc93511b39f7a403fe5eab0e316cd7e86220 RISC-V: output Autovec params explicitly in --help ...
b817bfad31b3bb8701ad1b6bd350b841e45693df RISC-V: Add riscv-vsetvl.def to t-riscv
10a7d31dd5cdb2689272b5664627daece9b154ee RISC-V: Clang format riscv-vsetvl.cc[NFC]
d18296e844f35c529f338569622b85fc44d68b5f RISC-V: Adapt live-1.c testcase
ea1eb12a38f09e494d5ef072e55653a6463d57eb RISC-V: Add attribute to vtype change only vsetvl
5f3c8075f230309c4417b0e5256283d010ac99d2 RISC-V: Fix gather_load_run-12.c test
29487eb237b893c673e9ecc6409b175e22792f13 RISC-V: Fix VTYPE fuse rule bug
3beef5e6b5b12b5c90040c8485f1836e2dd6cf83 RISC-V: Fix potential ICE of global vsetvl elimination
82d5c7261fed3cf163945fda2c541ff985bd8dc5 vect: Remove some manual release in vectorizable_store
92f2ec417c57e980b92b8966226fc2bfbf042af8 RISC-V: Add conditional unary neg/abs/not autovec patterns
18befd6f050e70f11ecca1dd58624f0ee3c68cc7 [PATCH] RISC-V:add a more appropriate type attribute
6619b3d4c15cd754798b1048c67f3806bbcc2e6d Improve quality of code from LRA register elimination
edb1a75b84e9c8e532c920b35fdf2789bb031637 Revert "Emit a warning when AVX10 options conflict in vector width"
0345152f922c3a58ae0a8ee014e37dcfab35592c RISC-V: Refactor RVV class by frm_op_type template arg
1c51805e2468bc10057bc0f2fc12fab909d21d04 RISC-V: Fix one typo in autovec.md pattern comment
308e716266787f84ba4a47546317dae83be8901c testsuite/111125 - disable BB vectorization for the test
7b67cab154d4b5ec2a6bb62755da31cefbe63536 tree-optimization/111128 - fix shift pattern recog
a28d4fce8ec2540259a257149de7081f27fb027e VECT: Apply LEN_FOLD_EXTRACT_LAST into loop vectorizer
e80f7c13f64e10c6a3354c5d6b42da60b21ed0b8 tree-optimization/111125 - properly cost BB reduction remain stmt handling
a1558e9ad856938f165f838733955b331ebbec09 tree-optimization/111115 - SLP of masked stores
2a0de833be3cb451cedf75ccae3d07f9825d7dc6 gimple_fold: Support COND_LEN_FNMA/COND_LEN_FMS/COND_LEN_FNMS gimple fold
43da77a4f1636280c4259402c9c2c543e6ec6c0b tree-optimization/111125 - avoid BB vectorization in novector loops
8c3146ce0ee14bc6747fb92947879d82d43f3bb2 RISC-V: Fix reduc_strict_run-1 test case.
e7aec3ae38ce740885e73255e12675174790758d RISC-V: Add missing conversion tests.
b6ba0cc9339f2cc81398863ae779daa6c8853ad6 RISC-V: Allow const 17-31 for vector shift.
a047513c9222f14adc6e5a015e038b207bb9a653 RISC-V: Enable pressure-aware scheduling by default.
1fbcae1c6452c9939a4be818a64cd01883abd80e RISC-V: Add COND_LEN_FNMA/COND_LEN_FMS/COND_LEN_FNMS testcases
701ce3c723623af13597c05df09a049c57c52fc0 libstdc++: Declutter std::optional and std:variant pretty printers [PR110944]
d96659e34cdcf43640541e1b7401ac546e0d1bf5 Fix confusion about load_p in vect_build_slp_tree_1
3ea624da71095cd480c31983d13db45bd9c5a738 RISC-V: Move vector-abi testcases into rvv/base folder
449ab115dece8ac8e8f27d2d7b5bc653a2c75d3a RISC-V: Add early continue for ENTRY and EXIT block
a739bac402ea5a583e43dbd01c14ebaff317c885 tree-optimization/111136 - STMT_VINFO_SLP_VECT_ONLY and stores
470da3b27e6dbeb3286b09dcb1c1b810ac75b276 Apply some TLC to vect_slp_analyze_instance_dependence
845ee9c7107956845e487cb123fa581d9c70ea1b tree-optimization/111137 - dependence checking for SLP
b41d7eb0e14785ff0ad6e6922cbd4c880e680bf9 RISC-V: Enable Hoist to GCSE simple constants
30699b999e94b66ff8706d3b07a35b2a9554d10c [PATCH v10] RISC-V: Add support for the Zfa extension
3cd2b73079bac374ce1c542b9c9e354e00a8713d [committed] RISC-V: Fix minor testsuite problem with zicond
e1f096a3cc96c71907cfbc7b8baf67a3d863cb6d RISC-V: Make stack_save_restore tests more robust
df177510665c4e1045bdaadf10d837f1bdc4ea06 RISC-V: Add Types to Un-Typed Sync Instructions:
e7545cadbedfc167749d801bd574cf9fe22ed5c5 RISC-V: Support LEN_FOLD_EXTRACT_LAST auto-vectorization
b3b13fb1cbad6e5836dee947e85d2954bcacabed RISC-V: Fix xtheadcondmov-indirect.c
6567837fd823a93f7f7948a73ff9dc1153592e8c RISC-V: Fix spill-12 test
3745feb19ed072e0865b12a891d7dbf7ba12c337 RISC-V: Fix spill-11.c testsuite failure
e030af3e6f6d3ae555d6f70047ea3a2bf5744b7e RISC-V: Refactor Phase 3 (Demand fusion) of VSETVL PASS
1671ad9ecff9f361870aeb26d5c5c6d9808826d7 RISC-V: Fix VSETVL test failures
e7b585a468aa4980955ae25fa9f4b41a3dc2995e RISC-V: Disable user vsetvl fusion into EMPTY or DIRTY (Polluted EMPTY) block
421cf6109ad23ae0f5d3da9adb582eb464e8826c RISC-V: Fix uninitialized probability for GIMPLE IR tests
c2d04dd659c499d8df19f68d0602ad4c7d7065c2 RISC-V: __builtin_riscv_pause for all environment
cf64ab18e3f820376ff20c663c7c7bf1af290f02 RISC-V: Fix documentation of __builtin_riscv_pause
973eb0deb467c79cc21f265a710a81054cfd3e8c RISC-V: Fix error combine of pred_mov pattern
818cc9f2d2f3dbbd4004ff85d3125d92d1e430c9 RISC-V: Fix AVL/VL get ICE[VSETVL PASS]
58a48781efa31e08b570f035fbceaaa8018c3412 RISC-V: Fix ASM check of vlmax_switch_vtype-16.c
97aafa9cbb68ffa23aa9f018cc5cb30648a72427 vect test: Remove xfail for riscv
b3176bdc86c04da6545a4bd8e2fb7f38d3f2db8d RISC-V: Refactor and clean expand_cond_len_{unop,binop,ternop}
8b0662254cdac3e0b670c1c54752e1d43113b0f4 RISC-V: Make PR 102957 tests more comprehensive
4053d295fdd81d3e05c4977e3cd9c647e8cc6bc2 RISC-V: Add stub support for existing extensions (privileged)
fea5442127daf8472966360279d402023dba3379 RISC-V: Add stub support for existing extensions (vendor)
f30d6a48635b5b180e46c51138d0938d33abd942 RISC-V: Add stub support for existing extensions (unprivileged)
d16af3ebea84749ac673db29a4124d2dc7cd369e RISC-V: Fix one ICE for vect test vect-multitypes-5
4b70c7c849331d45c0d6a1a4e1cf96b103be9aa6 RISC-V: Add Types to Un-Typed Vector Instructions
6e23440b5df4011bbe1dbee74d47641125dd7d16 RISC-V: generate builtin macro for compilation with strict alignment
fce74ce2535aa3b7648ba82e7e61eb77d0175546 RISC-V: Added zvfh support for zfa extensions.
94b950df6f8c46925799f642e5c44f42638f2b5e RISC-V: Use splitter to generate zicond in another case
260f743aa476abce8f88cceaca12abcb8115b02f RISC-V: Enable movmisalign for VLS modes
7accc6208befae77699a56f67a94da1e247ed069 RISC-V: Make sure we get VL REG operand for VLMAX vsetvl
a248e1cc860821b96a42be96478257c4964a7c2a RISC-V: Make arch-24.c to test "success" case
3d1d3132b9d4dc8b6069ad95dad624371124f297 RISC-V: support cm.push cm.pop cm.popret in zcmp
b27d323a368033f0b37e93c57a57a35fd9997864 RISC-V: support cm.popretz in zcmp
490bf0b9756368b34221348b0260e061634e497b RISC-V: support cm.mva01s cm.mvsa01 in zcmp
586ca3db52228ac1c5f2b5ce754928ced4e8e434 test: Add xfail for riscv_vector
ece3884b4b5d64dff1f112d0ec13c9b71dd0fc6a test: Fix XPASS of RVV
5d34a42f3b64fde9bb8be74231d8d11590c8d1db test: Adapt slp-26.c check for RVV
282c33c5f1c9b2965c18877aea8466701ab4e678 test: Add xfail into slp-reduc-7.c for RVV VLA vectorization
ac55f9710fe82a4ed8cb132f57303775ce60e5d1 RISC-V: Fix vsetvl pass ICE
15269a6b13da7f72bf78bbdd0bf7cd579b4b620c Refactor vector HF/BF mode iterators and patterns.
79ab19bcbae6e54c91bfca4ffa45cbc5eb0374bc RISC-V: Refactor and clean emit_{vlmax,nonvlmax}_xxx functions
b5900ad3a55d130ea201b178c9bddd5675743689 Fix gcc.dg/tree-ssa/forwprop-42.c
e69d050fd990f8e72e19e6dfb1bf7da2f09236f7 RISC-V: Change vsetvl tail and mask policy to default policy
4da3065a6422062b029df9660a226297802455f4 RISC-V: Add Vector cost model framework for RVV
0337555c7a2524bd334bafdc06dd801818eb34b6 RISC-V: Add vector_scalar_shift_operand
3e37e8231849ded7e214042f60f59fdcec75d7d3 RISC-V: Support rounding mode for VFMADD/VFMACC autovec
625962440ba5c737d6f35f7a1c9af1e9ef6bef3a RISC-V: Support rounding mode for VFMSAC/VFMSUB autovec
a7cefeaead68e5d89f65ba3a558eddef9b0b0f75 RISC-V: Support rounding mode for VFNMSAC/VFNMSUB autovec
af0c625f6085567522cf55b2ced05f07ec7be67a RISC-V: Support rounding mode for VFNMADD/VFNMACC autovec
16a268785f646b3d641acd8634ab487b24f51c33 MATCH: extend min_value/max_value match to vectors
3d86e7f4a8aef1b864a51660825597eafe9059b1 MATCH [PR19832]: Optimize some `(a != b) ? a OP b : c`
ed60ffd814c86a225a4586da649f6e76718490db RISC-V: Support FP ADD/SUB/MUL/DIV autovec for VLS mode
ef4e916b526a65411a577126d34c3b0bb97b6111 RISC-V: Add dynamic LMUL compile option
e40edf6499576993862801640227e076b868241b testsuite/vect: Make match patterns more accurate.
ffbb19c6afc016f6dc001ad0f567d3216ff601b1 RISC-V: Add vec_extract for BI -> QI.
5f2098cce6c75117927fef317c714dd2088b0189 RISC-V: Enable VECT_COMPARE_COSTS by default
4d1c8b04ec8731b57ddbc80d76e40a61d8fa3324 RISC-V: Adjust expand_cond_len_{unary,binop,op} api
a1e5fd2c9adc35ef435dcc96991320d69453919a RISC-V: Add conditional autovec convert(INT<->INT) patterns
75a243c7c7c7efa9f12038480b46260ada739202 RISC-V: Add conditional autovec convert(FP<->FP) patterns
258af9c7004cdc7963f783dd510404e79f0b5362 RISC-V: Add conditional autovec convert(INT<->FP) patterns
b8df57b3221aac70f22fb5c93d0b95bf22fded90 testsuite: Fix up pr110915* tests on i686-linux [PR110915]
c2d3211d580369b75200fbdd7b854d30460e0aba testsuite: Fix vectcond-1.C FAIL on i686-linux [PR19832]
419c423d3aeca754e47e1ce1bf707735603a90a3 libstdc++: fix memory clobbering in std::vector [PR110879]
a7d052b3200c7928d903a0242b8cfd75d131e374 RISC-V: Support FP MAX/MIN autovec for VLS mode
d99a868a9b100ab5a4b270a1acece60b5b6153a3 RISC-V: Support FP16 for RVV VRGATHEREI16 intrinsic
affbb7b4322a01cecddaa4dfb70faee925a2348b libstdc++: Fix filenames and comments in tests [PR26142]
99ec76eb8b0826c48709148457f2ef45819ab4ea testsuite: Remove unwanted 'dg-do run' from gcc.dg/vect tests
6f94ef6c86074a8348ec21d8aade04ce67b4e292 RISC-V: Fix Dynamic LMUL compile option
8451fbd56871267e8c1cd781db6d8f02e826f66c riscv: xtheadcondmov: Don't run tests with -Oz
509c10a62546b9b3430040e455b7258322a024e6 RISC-V: Export functions as global extern preparing for dynamic LMUL patch use
a7b048c0f42198a0f8d4244f1bd25211cf48383f RISC-V: Support FP SGNJ autovec for VLS mode
fba0f47e4617e164716d3bce587fc6948088e225 RISC-V: Emit .note.GNU-stack for non-linux target as well
e87212ead5e9f36945b5e2d290187e2adca34da5 RISC-V: zicond: Fix opt2 pattern
af5cb06ec17780736749ed51cfc6dfad9397156c riscv: xtheadbb: Enable constant synthesis with th.srri
c85db606d46774283ca4ec037dc3051719828f41 RISC-V: Add Types to Un-Typed Pic Instructions
decbf9ec81f33052be12296b89cd86ea65ae10da RISC-V: Add Types to Un-Typed Risc-v Instructions
fbc01748ba46eb26074388a8fb7b44d25a414a72 RISC-V: Expose bswapsi for TARGET_64BIT
102dd3e8067f12beee1b8b0bec6848733d107aee riscv: Synthesize all 11-bit-rotate constants with rori
ce65641354d98fc80912d5516b7fea87c344c2cc RISC-V: Fix Zicond ICE on large constants
254100a9a003a16255a58eec3fa24168e6dc7124 RISC-V: typo: add closing paren to a comment
c1597e7fb9f9ecb9d7c33b5afa48031f284375de RISC-V: Add conditional sqrt autovec pattern
94a4b93292f8ab19910c844bb9b63e4a68b55d33 RISC-V: Part-1: Select suitable vector registers for vector type args and returns
fdd59c0f73e9e681cd5f4d0eee2dd58d60d8dbe1 RISC-V: Part-2: Save/Restore vector registers which need to be preversed
4abcc5009c1ad852e235f368f535c0bf6bfa7697 RISC-V: Part-3: Output .variant_cc directive for vector function
9ee40b9a7bee83394fc7ba6fef71cb76d91b49c8 RISC-V: Keep vlmax vector operators in simple form until split1 pass
57d1c9c1fe57a0de66e5c20538f77f49b1298071 riscv: xtheadbb: Fix xtheadbb-li-rotr test for rv32
0574a19047fa66f26a38e79c1b9ae6a8207bba89 RISC-V: Fix incorrect folder for VRGATHERI16 test case
ee21f79f72980732214156bae2eb5daf7e089bda RISC-V: Remove unreasonable TARGET_64BIT for VLS modes with size = 64bit
1b4c70d4271a00514ae20970d483c3b78d9d66ef RISC-V: Fix VSETVL PASS AVL/VL fetch bug[111295]
6b96de22d6bcadb45530c1898b264e4738afa4fd RISC-V: Fix incorrect mode tieable which cause ICE in RA[PR111296]
2ce182e258d3ab11310442d5f4dd1d063018aca9 libgcc _BitInt support [PR102989]
f76ae4369cb6f38e17510704e5b6e53847d2a648 C _BitInt incremental fixes [PR102989]
af88776caa20342482b11ccb580742a46c621250 RISC-V: Add support for 'XVentanaCondOps' reusing 'Zicond' support
572abb52f5761a647035ee39d0e443c1c3622e75 RISC-V: Remove incorrect earliest vsetvl post optimization[PR111313]
6aba1fa7a4ceaf66adc587da23834d1f317f871d RISC-V: Add VLS mask modes mov patterns
daaed758517c81fc8f8bc6502be648aca51ab278 Support vpermw/vpermi2w/vpermt2w instructions for vector HF/BFmodes.
f9cb357ae962ba2922b8507f4d96227780a063b9 RISC-V: Fix incorrect nregs calculation for VLS modes
a0e042d61dadc6bdcbeaa3b712b7a83415a12547 RISC-V: Suppress bogus warning for VLS types
0c37fef39fa0a8f77ea4fc67d1bbf5067d4bddb9 riscv: bitmanip: Remove duplicate zero_extendhi<GPR:mode>2 pattern
0e25761b373f075a41d43b9462366a653dbf1121 riscv: thead: Fix mode attribute for extension patterns
d8bdc978dc9cd4a6210997edacedb954375af70d riscv: xtheadbb: Fix extendqi<SUPERQI> insn
b96b554592c5cbb6a2c1797ffcb5706fd295f4fd libstdc++: Add Filesystem TS and std::stacktrace symbols to libstdc++exp.a
7547f65f60c0bbf8de704c569c92c7a0e31a6175 Support folding min(poly,poly) to const
df9a25384e6c484643b48b59b4e6e07504889b61 RISC-V: Fix VLS floating-point operations predicate
0d50facd937bda26e3083046dc5dec8fca47e1e6 RISC-V: Fix dump FILE of VSETVL PASS[PR111311]
108779056eb4b56e715a094fac48a699d2dc91b3 RISC-V: Expand fixed-vlmax/vls vector permutation in targethook
4ab2520ec424fa097ec839f2cde33522b220e93a RISC-V: Add missing VLS mask bool mode reg -> reg patterns
d05aac047e0643d5c32b706c4c3b12e13f35e19a RISC-V: Add VLS modes VEC_PERM support[PR111311]
7f9083ffe262cb14c49d042fc6363514badea6cb RISC-V: Use dominance analysis in global vsetvl elimination
48d4ab698036de859e194edc037faed2ef9b58a5 RISC-V: Remove redundant functions
88a0a883960910530bfefa750461168f539f4a00 RISC-V: Enable RVV scalable vectorization by default[PR111311]
aa512cc0146d1be957ccc35a8f4a45ebad0de598 RISC-V: Update Types for Vector Instructions
d8751d9e32214380e6fdbb9e47f13192cc899469 RISC-V: Add Types for Un-Typed zc Instructions
4074aede45e3d8fbdb8fe28e1f084e869d3546f5 RISC-V: Add Types to Un-Typed Zicond Instructions
25c30049f5896ef6312cf45a1c058ee3e3079e6a RISC-V: Update Types for RISC-V Instructions
316d57da5bb9205b946afc56d78582fee874e4b5 RISC-V: Add Types to Un-Typed Thead Instructions
721021a18e2ac004140ddd93113c11075ea890c6 RISC-V: enable muti push and pop for Zcmp when shrink-wrap-separate is ineffective
c1e4efd8ae3488c5a2c11ac42d4670b67e1f7bf4 RISC-V: Add vcreate intrinsics for RVV tuple types
b90a4c3dd502974f352084c23a6cdfd767e1340b RISC-V: Elimilate warning in class vcreate
5e19f8991579f70aeccbe4003b7f8c914ce7f338 RISC-V: Add missed cond autovec testcases
df48285b2484eb4f8e0570c566677114eb0e553a riscv: Add support for strlen inline expansion
949f1ccf1ba9d1f33ca3809424e97429b717950a riscv: Add support for str(n)cmp inline expansion
af6d089b4ded96b529c7063bd7873e4630a3a64d RISC-V: Support Dynamic LMUL Cost model
75f069a6403b5d4217fb5b654a9c656b4dca9dc1 RISC-V: Remove unused structure in cost model
360c8cad6a727d5afd43017ca1ce9a84c6db61c5 RISC-V: Finish Typing Un-Typed Instructions and Turn on Assert
701b9309b687ed46188b9caeb7d88ad60b0212e5 RISC-V: Support VECTOR BOOL vcond_mask optab[PR111337]
fcf66bceb4670fcd6ed8efef7f64003354e609f1 RISC-V: Enable vec_int testsuite for RVV VLA vectorization
20268ad194d3c00d1182af345875ce63a4a9c762 RISC-V: Remove redundant ABI test
feb23a37e6142016c3463aa3be3e900d45bc3ea5 RISC-V: Bugfix PR111362 for incorrect frm emit
6737a51728881790b54e490494b468267f04a608 RISC-V: Support cond vfsgnj.vv autovec patterns
842e4d51c11ff5ac842d925e73f4094901f4a9be RISC-V: Support cond vnsrl/vnsra autovec patterns
c0a70df6403397a69204cba1df82114a9ddf7076 RISC-V: Support cond vmulh.vv and vmulu.vv autovec patterns
04238615bba435f0b0ca7b263ad2c6bdb596e865 tree-optimization/111387 - BB SLP and irreducible regions
d03773c8efea216c67b3ac8870fcac2662c522fe RISC-V: Support VLS modes VEC_EXTRACT auto-vectorization
7c4f6ebe54f4da0097acd07f41782ff6cc39e9a4 RISC-V: Format VSETVL PASS code
53ad1bd520759580b9a5cc590a81a1a30b9e2e28 RISC-V: Fix ICE in get_avl_or_vl_reg
8ebb02dd6c9d190c84bf40259201e8e7327291f8 RISC-V: Support VLS modes mask operations
14c481f7fc0a90de7e5b7aec109e12b7b5220d65 RISC-V: Cleanup redundant reduction patterns after refactor vector mode
6223ea766daf7c9155106b9784302442e2ff98d3 RISC-V: Refactor vector reduction patterns
3a1e9f3ed7aa49adad02190ace0614e0b37fc089 diagnostics: support multithreaded diagnostic paths
68cb873fd360dbb64f2a6dfb28e79399ff99d07d RISC-V: Support combine extend and reduce sum to widen reduce sum
e6413b5dc5b786391802368207ec86945eef2ae0 RISC-V: Refactor expand_reduction and cleanup enum reduction_type
e1ec05b800e2ee9f2dfc8f99b1c5622103f52cd5 test: Remove XPASS for RISCV
0854ebea63f59eb678ebf4440afe1d18ed5bb6d4 test: Isolate slp-1.c check of target supports vect_strided5
9b80311cdc685e6f27cf4f8625ac3d24dcc59d7f test: Block slp-16.c check for target support vect_strided6
16c5d0f0c4c6f72bdfc01c640f11a845530c4d3d test: Block vect_strided5 for slp-34-big-array.c SLP check
5c7c359c907852c4c374e85d4f8a392fd960e98e test: Block SLP check of slp-34.c for vect_strided5
b259284ee135a432e0097d923d0908350f74f468 test: Block SLP check of slp-35.c for vect_strided5
dd6e5d29cbdbed25e4e52e5f06b1bfa835aab215 RISC-V: Fix using wrong mode to get reduction insn vlmax
ba4c1f2bfc9ec063188b39d0281fae04c57b1416 MATCH: Fix `(1 >> X) != 0` pattern for vector types
d7b6020276a843e97f6135259b4ab3b53a5850e2 fix PR 111259 invalid zcmp mov predicate.
52841fb7035c0e3a6d4354fc4e61c0bd3fea81ca libstdc++: Replace dg-options "-std=c++11" with dg-add-options strict_std
7810fb3a142bed6da9eca8fde114629023fc5c4e libstdc++: Remove dg-options "-std=gnu++23" from remaining tests
b9a2dce8c45b7b35f6d5811a6c1c0ee53d2af0c3 libstdc++: Remove dg-options "-std=gnu++20" from 23_containers tests
23224f06c980533d474b3a29d2437e5537916fc0 RISC-V: Support FP SGNJX autovec for VLS mode
a1751681867a3ce760ea6924c3c632f1b81db97e RISC-V: Make bit manipulation value / round number and shift amount types for builtins unsigned
9882b81410f247604fbfd5883894a96127f461ac RISC-V: Make SHA-256, SM3 and SM4 builtins operate on uint32_t
86451305d8b2a25e7c6ea6c2f1ee69c419cba3ef RISC-V: Expand VLS mode to scalar mode move[PR111391]
5761dce5d71e3dd013ce4db4c5e9b5e49c6cba23 RISC-V: Remove redundant codes of VLS patterns[NFC]
fafd2502c5416fe4f69daf13224ab1efbf256a1c RISC-V: Support VLS modes reduction[PR111153]
4e679b9ceac22cf369a57ebb4f9175c1d02b2466 RISC-V: Remove autovec-vls.md file and clean up VLS move modes[NFC]
1f9bf6f372da48c75d42f2669ba92f3fd4370fda RISC-V: Support VLS modes vec_init auto-vectorization
d45ddc2c04e471d0dcee016b6edacc00b8341b16 tree-optimization/111294 - backwards threader PHI costing
8fbc0871da26fac1668ba939f4492876794734ac RISC-V: Fix VSETVL PASS fusion bug
71e0f38dcb73e4cdfe61fc28821551b325320302 RISC-V: Support VLS reduction
4ab744ace2478c4b986ec4ac27c0e3467b7a6419 RISC-V: Add fixed PR111255 testcase by other patch
1b03c73295266984378dd9da99a9458b591b964c RISC-V: Removed misleading comments in testcases
bdb7d85dde56b69af378adcffe45accf792cf4fd RISC-V: Fix bogus FAILs of vsetvl testcases
4260f4af4dde6dbf85c28da7e8aaf03985b3d171 RISC-V: Remove redundant vec_duplicate pattern
28f16f6d9b4fc1391275f4ba24dc2019ee64fc22 RISC-V: Bugfix for scalar move with merged operand
aad0c3e197f21fac169917e187c61764a8a3ff3d RISC-V: Support VLS mode for vec_set
f45cca26263c3563e9db15e0ba64d4a114316808 RISC-V: Add builtin .def file dependencies
7f4fc87086b5ad57edaaf628ba6cb92649d14453 RISC-V: Fix typos on comments (SVE -> RVV)
95d2ce05fb32e663bc7553438ccee7f4d4e36a35 RISC-V: Refactor and cleanup fma patterns
8e09480193ef870745f91f48a44ed0307757fb3c RISC-V: Support integer FMA/FNMA VLS modes autovectorization
28569e79e34ac8760833640abcb21c5b36add2b3 RISC-V: Support VLS floating-point FMA/FNMA/FMS auto-vectorization
5b945243c77e3ecd8dfab4b8b44f21daa3de8fe1 RISC-V: Support VLS unary floating-point patterns
e1817426e85f2181a97ac4f71a87baaa9645b1b5 RISC-V: Fix RVV can change mode class bug
c81d9b9fabaea25950a5fea91e4f541077078087 LTO: Get rid of 'lto_mode_identity_table'
131c1df8d901385c8622aa067c5890458005d1a9 RISC-V: Add FNMS floating-point VLS tests
5b554c559d0103bfc1a68777907945ec3035a2bd RISC-V: Fix --enable-checking=rtl ICE on rv32gc bootstrap
bea89f78f2f02a0dabe4993ccf1c7cdb48be040b RISC-V: Extend VLS modes in 'VWEXTI' iterator
d024a31a09d18d2586769602205a60ff3afe568c RISC-V: Fixed ICE caused by missing operand
264ff8182580c57f77c6bc60381cfb2c3842b46c RISC-V: Reorganize and rename combine patterns in autovec-opt.md
c3d2b6bc913803d3eccacb9e354f37eef1cee212 RISC-V: Fix Demand comparison bug[VSETVL PASS]
b34397857adb7b3ae72e2701879bcb4e19165d63 RISC-V: Support VLS floating-point extend/truncate
b9cb735fc1bb4ca2339ab900e2d07667d7c0f6b4 RISC-V: Support simplifying x/(-1) to neg for vector.
27282dc0931484c31fa391772499d878afcc746a internal-fn: Support undefined rtx for uninitialized SSA_NAME[PR110751]
c08ffa04d95890f39b3f99d50d0276a61a3e66bf RISC-V: Remove math.h import to resolve missing stubs failures
66c13521f56fee1ec6db7ddd9fb053cf852a84a1 RISC-V: Support VLS INT <-> FP conversions
4e35cf2ea1fbcdf798b37b2e00d9977683b17b8a RISC-V: Rename predicate vector_gs_scale_operand_16/32 to more generic names
47065ff360292c683670efb96df4b61f57dc1d9a RISC-V: Optimized for strided load/store with stride == element width[PR111450]
38048fc501b3d53fc38c701ae4625024cd93bd1d RISC-V: Fix SUBREG move of VLS mode[PR111486]
9b5b2c9f95056f97cf95f0e8d970015aa586497b RISC-V: Enable undefined support for RVV auto-vectorization[PR110751]
5ff4431675c0d0c800d4a983254e94a6b401c14d RISC-V: Adjusting the comments of the emit_vlmax_insn/emit_vlmax_insn_lra/emit_nonvlmax_insn functions
94982a6b9cf4c61357eabebd14866969ef4c2b6e RISC-V: Support VLS mult high
29862e21f6d656eca59284c927d0c4c0698eb99c RISC-V: Add more VLS unary tests
1df81f01e45c8b16cf3995cf63c766124a0729ea RISC-V: Add VLS integer ABS support
8bf5636e4fca947527a302813fdf08e1bbc82fa3 RISC-V: Support ceil and ceilf auto-vectorization
dba79ce1681828d05f6ed73ad56d8c3f3d53411a RISC-V: Leverage __builtin_xx instead of math.h for test
e99cdab81bd3df7979d9b6917c06c80d73dff1e0 RISC-V: Split VLS avl_type from NONVLMAX avl_type
5bc8c83d30b852a09eaf604464711054c11d9a51 RISC-V: Support combine cond extend and reduce sum to widen reduce sum
e446ed29f6c92dd677ec5792aada5343c9533c2c RISC-V: Remove arch and abi option for run test case.
0ed05db7cee8f92604b5d7761713b7a7161e0db0 RISC-V: Optimization of vrgather.vv into vrgatherei16.vv[PR111451]
40ac613627205dd4d24ae136917e48b357fee758 RISC-V: Rename the test macro for math autovec test
8a87ba0b4fe72acbf34e48898652d0f78b9e235e RISC-V: Add VLS conditional patterns support
6eb55cab2956d130d2e18c895e4f67fc9381199e RISC-V: Remove @ of vec_duplicate pattern
cefd4ad06b5756819b5371755bb4b2c4e3967d82 RISC-V: Move ceil test cases to unop folder
dc607a0d861c2d6e3067c6b2b5a106d07bba1980 RISC-V: Add VLS widen binary combine patterns
190ba48952b1ec4b73bb31ed150b73b055408af1 RISC-V: Add VLS mode widen ternary tests
4c496020764057453415f1ae599950724ec0e871 RISC-V: Refine the code gen for ceil auto vectorization.
63f3c0f1b59e65592f05b6f7a077d2fb25748d20 RISC-V: Remove FP run test for ceil.
83441e756734cd86b017e73a396ad8a0155a1bd1 RISC-V: Suport FP floor auto-vectorization
648347be1fdaaeb866607dbac02fba97d62b839b RISC-V: Add VLS unary combine patterns
e4aa1a49010fb55f3e90731464d21b05baeb6855 RISC-V: Support full coverage VLS combine support
deb844c67f1e2b116518f9742a6acbe6f19ea28f RISC-V: Fix fortran ICE/PR111546 when RV32 vec_init
9d5f20fc4a6b3254d2d379309193da4be2747987 RISC-V: Fix AVL/VL bug of VSETVL PASS[PR111548]
c983744307527793b09138420553bd18210c08ef RISC-V: Rename rounding const fp function for refactor
e2023d2d5ff2e703a025ab5a8d12e27d96efd002 RISC-V: Support FP nearbyint auto-vectorization
e4cf5f54cac52f937b7929ba2fac71c059a77f7a RISC-V: Support FP rint auto-vectorization
31ef3fe9e49b5446d465628830a9b6591c2168ce RISC-V/testsuite: Fix ILP32 RVV failures from missing <gnu/stubs-ilp32d.h>
d324984f9fa50e0055e3818f29d8c019df08cecf RISC-V: Support FP round auto-vectorization
dd0197fb4cdee8cd5f78fea9a965c96d7ca47229 MATCH: Optimize COND_ADD_LEN reduction pattern
277456180ea4d002675a9498a7b1ec9d483ded73 MATCH: Optimize COND_ADD reduction pattern
a5f39859d0c14a831e2826f5e5cfe036e56dcd7d RISC-V: Add zicond tests
1c4ca595d817ae1e1139145f86cfb58899d376bd RISC-V: Support FP trunc auto-vectorization
4a15bb6139431647a661dfbf670293b84650e0ea RISCV test infrastructure for d / v / zfh extensions
073849da3dfd5cabbfd4492a40a17b207b4a7630 DSE: Fix ICE when the mode with access_size don't exist on the target[PR111590]
fcbbf158ee90400877f81185bb40b5870dca1558 RISC-V: Support FP roundeven auto-vectorization
d326bb6d7588425d013791299272f913fb23e56d Harden scan patterns with a bit of scripting:
b31218bc93683554077c68dec14f4217a5e66835 vect, omp: inbranch simdclone dropping const
110ffb2d8d3a64b32dd56ac995c2e30e8f64d4dc RISC-V: Bugfix for RTL check[PR111533]
0fb176ef0486d78b1bb473f0de794f6b8cc62ac3 Replace riscv_vector with riscv_v in target selector clauses.
88d79b9b03eccf39921d13c2cbd1acc50aeda126 tree-optimization/111614 - missing convert in undistribute_bitref_for_vector
73cd319b72ca45a537688cc8cc5751d86a00a0e9 vec.h: Make some ops work with non-trivially copy constructible and/or destructible types
88d8829e4f435bfc844db5a9df730e20faf7c2c7 RISC-V: Support {U}INT64 to FP16 auto-vectorization
bcc97edf8c9e40232fa30e7f0070057b6516fd77 Simplify & expand c_readstr
59cda1f9525702d5d6560002c874f12c0103f7df use *_grow_cleared rather than *_grow on vect_unpromoted_value
51d09e67df52164c2025afa24531cf79820ff4c8 RISC-V: Replace not + bitwise_imm with li + bitwise_not
4f1e5379fd77c744111672ab3d961cecb4826b80 RISC-V: Specify -mabi=lp64d in wredsum_vlmax.c testcase
44efc743acc01354b6b9eb1939aedfdcc44e71f3 Fix INSN costing and more zicond tests
d6fe757b39297c1c0cf243acee860d045726c184 RISC-V: Add type attribute in *<optab>_not_const<mode> pattern
04e772bbdcbc1cea67cd498c1a45e4360bf5f8e1 RISC-V: Use safe_grow_cleared for vector info [PR111649]
f416a3fdbee32ae12b055b8e3e4ee11c3df7c117 Make riscv_vector::legitimize_move adjust SRC in the caller.
e4a4b8e983bac865eb435b11798e38d633b98942 RISC-V:Optimize the MASK opt generation
5f3da480e7541a9c29d655dccb2463fc5f3cf2c4 Fix typo in add_options_for_riscv_v, add_options_for_riscv_zfh, add_options_for_riscv_d .
9464e72bcc9123b619215af8cfef491772a3ebd9 cpymem for RISC-V with v extension
a70b158c270fffc40fde258bd778184fbc32b942 Replace UNSPEC_COPYSIGN with copysign RTL
645f2a7dd47aa84d94df594bbd736085e51fc637 RISC-V: Unescape chars in pr111566.f90 test
6dc44436301143a286e3b45de0673af012299eba Fix SIMD call SLP discovery
0bda3f25147203d04724fa375daf3d1110da5c3f RISC-V: Remove @ of vec_series
480648ce9ebda809c726e6f54d1bf7f652d68075 Add outgoing range vector calcualtion API
250dce25b6ca7ce63f036fc4a90b4d1e8c6517e9 RISC-V: Test memcpy inlined on riscv_v
f05b68b8f009c644521d6ff2fde940342029b830 RISC-V: Update comments for FP rounding related autovec
00e167fa50d9ade6382d67a275bded891d660d21 RISC-V: Use stdint-gcc.h in rvv testsuite
171420fdc9208198f09ff258164fc4cc1fd4bf74 ipa: Remove ipa_bits
c1bc7513b1d76812752f70cc2ef7e0173dfb0014 RISC-V: const: hide mvconst splitter from IRA
15c1530ebbbcff5ddd254988904c5d5ce72c58f4 RISC-V: Fix scan-assembler-times of RVV test case
a809a556dc0792a34fca7b754ff96ea3ea7d1e7f RISC-V: Bugfix for legitimize address PR/111634
7866984ba427dc56a12ee1b8d99feb4927b834b1 RISC-V: Add more run test for FP rounding autovec
f49886484691d6ecec38ee83353ca34cc71410b7 [APX EGPR] Handle GPR16 only vector move insns
066a43ce72ab6559ba14af9628df19daa0b85cdf Revert "RISC-V: Add more run test for FP rounding autovec"
752bfdb2bf0a4d84bc2fb2858410e9a97f4788d0 RISC-V: Enable more tests of "vect" for RVV
f1ccee6181000bde1f11f557c44d2aef3804e598 TEST: Fix XPASS of TSVC testsuites for RVV
b20e59f49b51b7baf05e1b727be5da947e617496 RISC-V: add static-pie support
91fdbd650d4bc3d1a13891095536f317e3a24d7a Support smin/smax for V2HF/V4HF
b4fc1abbd9a525e724385b91a17c0f4b8a5a6c59 Support signbit/xorsign/copysign/abs/neg/and/xor/ior/andn for V2HF/V4HF.
873586ebc565b6c8abbaaba58b900dbe984bf64f TEST: Fix dump FAIL for RVV (RISCV-V vector)
aa9bce39f1cea1f4cbdf41823c53029a8af40d50 Disable zmm register and 512 bit libmvec call when !TARGET_EVEX512
c1eef66baa8dde706d7ea6921648e6016dc7c93d Support -mevex512 for AVX512F intrins
8e79b1b45a4d74aa866de5abc7bf3ef68e617f06 Support -mevex512 for AVX512BW intrins
784deda0da6062edc0ace62fd7cf1abbcf2fb054 RISC-V Regression test: Fix FAIL of fast-math-slp-38.c for RVV
3f99b709c87acf0c76234d6d054d2813b5e1a5fd testsuite: Fix vect_cond_arith_* dump checks for RVV.
1543f3e331b317c086d9acfbdc2681e510c3d4c8 RISC-V Regression test: Fix FAIL of pr45752.c for RVV
841668aa02a05deca06e68a5931408d970f5c8b2 RISC-V: Refine bswap16 auto vectorization code gen
578aa2f80056175b902671b30cc77e38945e3ba4 THead: Fix missing CFI directives for th.sdd in prologue.
dee55cf59ceea989f47e7605205c6644b27a1f78 RISC-V: Support movmisalign of RVV VLA modes
f8498436d6dd77f3c993e68536a3f6864793829c RISC-V: Add initial pipeline description for an out-of-order core.
db20b83cfffc692691156b67caf9d0228252accb RISC-V Regression test: Fix FAIL of slp-reduc-4.c for RVV
30b76f860a46497592904ed696b9a987769dc775 RISC-V Regression test: Fix FAIL of slp-12a.c
e90eddde570b5082a61369b07894971566536d6e RISC-V Regression tests: Fix FAIL of pr97832* for RVV
dae21448b60874dd6b8501c2f33c956d6c631e5f RISC-V Regression test: Fix slp-perm-4.c FAIL for RVV
cc50337215535e17f1caa5eae34eaa650223c96b Fixes for profile count/probability maintenance
4ecb9b03d9a058925d5a5bc43bdc3a505a587b0c RISC-V: Add available vector size for RVV
4d230493f57dd11b8de9155b03088092f2ecea5c RISC-V Regression: Fix FAIL of bb-slp-pr65935.c for RVV
a704603d458b1e55b561ddfb4e513581ee863ed6 RISC-V: Add testcase for SCCVN optimization[PR111751]
70b5c6981fcdff246f90e57e91f3e1667eab2eb3 tree-optimization/111751 - support 1024 bit vector constant reinterpretation
5255273ee8b14ea565eb43f067a86370d25df114 RISC-V: Add VLS BOOL mode vcond_mask[PR111751]
8a361405375a82ed1975c72b9900a6775e0de037 RISC-V Regression: Fix FAIL of pr65947-8.c for RVV
0b0fcb272b4d6e9f7c98cfbc355ca69c8a653922 RISC-V Regression: Fix FAIL of predcom-2.c
5bb6a8766ec83e20550e1b59f2accb1ef25e3369 RISC-V Regression: Make match patterns more accurate
71f906498ada9ec2780660b03bd6e27a93ad350c RISC-V: far-branch: Handle far jumps and branches for functions larger than 1MB
cfe89942673aeb9ee58ab1a3ae9e60ddf1c698c7 RISC-V Regression: Fix FAIL of vect-multitypes-16.c for RVV
de04f73eefd856914f4a253ad2f1579239512e31 RISC-V Regression: Make pattern match more accurate of vect-live-2.c
23aabded1ff8fd73780af2be25293a2e01488aba RISC-V: Enable full coverage vect tests
d4de593d366f3bbdfe2db7baf60ae32ad876c2cc RISC-V: Remove XFAIL of ssa-dom-cse-2.c
d1e5566685ac9bf8271ccf39d69e81e7ba9ae70d RISC-V: Support FP lrint/lrintf auto vectorization
f6c5e247b2913f0a7b3be986fe96afbed29c1d5e RISC-V: Fix incorrect index(offset) of gather/scatter
400efdddf3d8499d7c7969d26bedb537a625c070 [PATCH v4 1/2] RISC-V: Add support for XCVmac extension in CV32E40P
5ef248c15ec3490f4b98cda4bc27a667a8cf8206 [PATCH v4 2/2] RISC-V: Add support for XCValu extension in CV32E40P
0363bba87feeb00464a5c2d3e7050b9d3f9f93cb options: Define TARGET_<NAME>_P and TARGET_<NAME>_OPTS_P macro for Mask and InverseMask
9452d13b1afb295c3764bb1134f3ac1a1d804989 RISC-V: Refactor riscv_option_override and riscv_convert_vector_bits. [NFC]
faae30c49560f1481f036061fa2f894b0f7257f8 RISC-V: Extend riscv_subset_list, preparatory for target attribute support
a3e50ee96dc3e25ca52608e58c4e653f9976cb4e RISC-V Adjust long unconditional branch sequence
06f36c1d83a7e8b6da47d3c5b325a963baee6aab RISC-V: Add TARGET_MIN_VLEN_OPTS to fix the build
d6b7fe11efe9c7bf44dfe57ded6c86df5ec7e2c7 RISC-V: Support FP irintf auto vectorization
6a3302a41a6bbae706a7b688c446fe60383322fc RISC-V: Support FP llrint auto vectorization
32207b15b7218a7563a36efae4845c2ac8513562 vect: Ensure vect store is supported for some VMAT_ELEMENTWISE case
3bf2366685b24108674d12d7cf91b269e9ee2161 vect: Move vect_model_store_cost next to the transform in vectorizable_store
e00820c8e5cff0c1950a200354263fe6cc13493c vect: Adjust vectorizable_store costing on VMAT_GATHER_SCATTER
7184d2257a0d927e6e3736ba0a169d557e673ad5 vect: Simplify costing on vectorizable_scan_store
8b151eb96b909094050b0be2a204b578b154ee93 vect: Adjust vectorizable_store costing on VMAT_ELEMENTWISE and VMAT_STRIDED_SLP
6a88202e5a43f7b9cafd9fbfca74e3c53ea0f911 vect: Adjust vectorizable_store costing on VMAT_LOAD_STORE_LANES
0a96eedb3477be23391f54cb1f2302fe67641188 vect: Adjust vectorizable_store costing on VMAT_CONTIGUOUS_PERMUTE
0bdb9bb5607edd7df1ee74ddfcadb87324ca00c2 vect: Get rid of vect_model_store_cost
f1a05dc180518d8dd66850833967a15d50c15db0 vect: Consider vec_perm costing for VMAT_CONTIGUOUS_REVERSE
610b845a426e26fa86724e5c9d6f74c7a4baf741 testsuite: Avoid uninit var in pr60510.f [PR111427]
05f98310b54da95e468d799f4a910174320cccbb tree-optimization/111764 - wrong reduction vectorization
2cc4f58a7c12c9b7a82194279c201ebe389f6dba RISC-V: Support FP lround/lroundf auto vectorization
0d00385eaf72ccacff17935b0d214a26773e095f wide-int: Allow up to 16320 bits wide_int and change widest_int precision to 32640 bits [PR102989]
d8c3ace8985cf9b45f7414ce7398bb1274951db9 RISC-V: Make xtheadcondmov-indirect tests robust against instruction reordering
51f7bfaac74e1311e35555c95ac056637373f112 RISC-V: Support FP lceil/lceilf auto vectorization
8f52040e5f08ae0bbc63ee49c07212f07997a59f RISC-V: Support FP lfloor/lfloorf auto vectorization
f0b05073bd3f0e5c8e55ef5a6fd16aa4518956a4 RISC-V: Leverage stdint-gcc.h for RVV test cases
0f40e59f193f96f1bb0fa3e1c2d160567ed29b32 RISC-V: Fix the riscv_legitimize_poly_move issue on targets where the minimal VLEN exceeds 512.
d53d20a940efe4262f18ac3da870eb972dcf84f0 RISC-V: Add test for FP iroundf auto vectorization
2a89656a03282c0fe80c5467c6891c067ae0007a RISC-V Regression: Fix FAIL of bb-slp-pr69907.c for RVV
6b580560a0e393e3b65567263e2cf5477d670592 RISC-V: Add test for FP llround auto vectorization
6decda1a35be5764101987c210b5693a0d914e58 tree-optimization/111779 - Handle some BIT_FIELD_REFs in SRA
fbd3923887b40c90e7da7323cd0338f23339d888 riscv: Fix -Wincompatible-pointer-types warning during libgcc build
ad0bac803ce316bfa5330156a683cced5898cfce RISC-V: Add test for FP llceil auto vectorization
2943c50a0ee5c9d0e46fd963f2282cf3748142bf RISC-V: Add test for FP iceil auto vectorization
8c5447ad67e580a9fe48abf27fd99119b0e9e0f9 RISC-V: Add test for FP llfloor auto vectorization
9a82cca91dee190d845ee1681440bc69a07c6d49 RISC-V: Refine run test cases of math autovec
8544efd6d4aea46656c37b0e002503616f09edfc RISC-V Regression: Fix FAIL of bb-slp-68.c for RVV
63eaccd114393f4692976bb78b30148e6d77a89e Add support for SLP vectorization of OpenMP SIMD clone calls
3179ad72f67f31824c444ef30ef171ad7495d274 OMP SIMD inbranch call vectorization for AVX512 style masks
78dd49f387c515a6b28ef3fcb989605a168ff752 RISC-V: Remove redundant iterators.
77faa3e198a6b6f9a55a8010bef1c394d2e3cf8e RISC-V: Fix vsingle attribute
96f12b9f9b9646deb0f7678a3f8d544e8d48cb91 Enable vectorization for V2HF/V4HF rounding operations and sqrt.
e6d063086726ccb2c5219611319285099a628878 Support 32/64-bit vectorization for conversion between _Float16 and integer/float.
a5fe9f063de64aa2755c9ae9e90ed1ff64ee0f47 RISC-V: Use VLS modes if the NITERS is known and smaller than VLS mode elements.
04c9cf5c786b94fbe3f6f21f06cae73a7575ff7a Implement new RTL optimizations pass: fold-mem-offsets
c92737722ffff85c759247f96f281438bbf1418d RISC-V/testsuite: add a default march (lacking zfa) to some fp tests
328745607c5d403a1c7b6bc2ecaa1574ee42122f RISC-V: NFC: Move scalar block move expansion code into riscv-string.cc
b25b43caf2503a160a928d61318dff837efabd97 RISC-V: Fix unexpected big LMUL choosing in dynamic LMUL model for non-adjacent load/store
8eb9cdd142182aaa3ee39750924bc0a0491236c3 expr: don't clear SUBREG_PROMOTED_VAR_P flag for a promoted subreg [target/111466]
5bb79a427adb57d4a55690f29d4f49e42d68c2a5 RISC-V: Fix failed testcase when use -cmodel=medany
323209cd73bf1d81d91637677db5883afc8ae5f6 tree-optimization/111846 - put simd-clone-info into SLP tree
9cad42786ca28461633d524bbb6480f388bfdc55 RISC-V/testsuite/pr111466.c: update test and expected output
5e4abf4233cd34212680cca700d6438445e6a16a ssa_name_has_boolean_range vs signed-boolean:31 types
cf7739d4a6ba0b88068877d14439436c22b57630 RISC-V: Enable more tests for dynamic LMUL and bug fix[PR111832]
cead92b7fc4d7a545dcf2f02397120e3c9afe1a3 Support 32/64-bit vectorization for _Float16 fma related operations.
c51040cb43404f411d4234abe7cf1a238b6e0d34 RISC-V: Optimize consecutive permutation index pattern by vrgather.vi/vx
46937e1b47274c5f5edfc22c7e70b820c6d55530 middle-end: refactor vectorizable_comparison to make the main body re-usable.
d65e38e616e7ac8157ef04b55beb6670f2c0f142 middle-end: Refactor vectorizer loop conditionals and separate out IV to new variables
0c8522870effb87f9ea0f0f5897d5b0084c32b50 middle-end: updated niters analysis to handle multiple exits.
60c231cb65807fb963624acc4f82d2935e305f93 middle-end: maintain LCSSA throughout loop peeling
b0372ef12f6f7f863606b0d2858d049b18a4cfda Re-instantiate integer mask to traditional vector mask support
4b39aeef594f311e2c1715f15608f1d7ebc2d868 middle-end: Fold vec_cond into conditional ternary or binary operation when sharing operand [PR109154]
b0fe8f2f960d746e61debd61655f231f503bccaa middle-end: ifcvt: Allow any const IFN in conditional blocks
beab5b95c581452adeb26efd59ae84a61fb3b429 tree-optimization/111131 - SLP for non-IFN gathers
217a0fcb852aeb4aa9e3fb9baec6ff947c8de3d4 middle-end: don't create LC-SSA PHI variables for PHI nodes who dominate loop
79a50a17409a39759326a494d85dccfd9008a9de omp: Replace simd_clone_subparts with TYPE_VECTOR_SUBPARTS
c9ce846763c3d220c754ac0a327e275ac00a83e1 vect: Fix vect_get_smallest_scalar_type for simd clones
8b704ed0b8f35ec1a57e70bd8e6913ba0e9d1f24 vect: don't allow fully masked loops with non-masked simd clones [PR 110485]
d8e4e7def3338344a761d841010e98d017c58b0a vect: Use inbranch simdclones in masked loops
29331e72d0ce9fe8aabdeb8c320b99943b9e067a RISC-V: Refactor and cleanup vsetvl pass
f0e28d8c13713f509fde26fbe7dd13280b67fb87 RISC-V: Fix failed hoist in LICM of vmv.v.x instruction
dd3e6f52e406a0bab787aebcb384ef6e2cf7a1e8 middle-end: Enable bit-field vectorization to work correctly when we're vectoring inside conds
88c27070c253094fb7e366583fbe09cec2371e8b ifcvt: Support bitfield lowering of multiple-exit loops
4fd09aed384df6acb141ee1f319a500c239626a4 RISC-V: Rename some variables of vector_block_info[NFC]
5dde64775baad91686a33edc020f74cfaa9078e5 Fixup vect_get_and_check_slp_defs for gathers and .MASK_LOAD
e489464acf5541e6fdb4007c49266193cc93d16e Rewrite more refs for epilogue vectorization
d70575f542f575133eb4c49eda89ab61eedf83b8 tree-optimization/111891 - fix assert in vectorizable_simd_clone_call
eb15fad3190a8b33e3e451b964ff1ecf08bbb113 middle-end: don't pass loop_vinfo to vect_set_loop_condition during prolog peeling
cd0e05b7ac3dee11287078acd00a19e52a738963 c++: remove NON_DEPENDENT_EXPR, part 2
24cf1f600b8ad34c68a51f48884e72d01f729893 ifcvt: Don't lower bitfields with non-constant offsets [PR 111882]
66c26e5cfdf65ae024fcb658629dc5a9a10f3f85 RISC-V: Support partial VLS mode when preference fixed-vlmax [PR111857]
f232391ae6dda94d8a37fc69a3ced7ab6cffcb8e RISC-V: 'Zfa' extension is now ratified
11f50716eee812c4a27b66f894e7f3ed0c870534 RISC-V: Prohibit combination of 'E' and 'H'
dbde384bd56f07bfbcae86f81fc74aa92e3786ad Avoid compile time hog on vect_peel_nonlinear_iv_init for nonlinear induction vec_step_op_mul when iteration count is too big.
f08ca5903c7a02b450b93143467f70b9fd8e0085 Expand: Enable vector mode for by pieces compares
85858c71a89dfe0d9e7d96fc9f7bdf1a18df65ba RISC-V: Bugfix for merging undefined tmp register in math
1908775f7982bd2de36df5d94396eca0865bad9a vect: Cost adjacent vector loads/stores together [PR111784]
75322a6d0cf6d611973d3730fd888ce37407c41f RISC-V: Fix AVL_TYPE attribute of tuple mode mov<mode>
7846d2288750613ce56bf02050732eb78de5c0dc RISC-V: Remove unnecessary asm check for rounding autovec
c2d41cdfeadb82d921b01c0e104d83f47e2262a2 RISC-V: Remove unnecessary asm check for binop constraint
4cd4c34acda411e4b3bd03a43d68921f38ce9822 RISC-V: Fix typo[VSETVL PASS]
996785db50a4e2df0b0e892cfe39dcf4130fb87d RISC-V: Bugfix for merging undef tmp register for trunc
09c9de06074ced7a4beb148bcf9611a5c5fb0d61 RISC-V: Remove unnecessary asm check for vec cvt
0c4bd1321a6def5eb44c530e83b01a415633b660 RISC-V: Fix ICE for the fusion case from vsetvl to scalar move[PR111927]
9ed6b22eb4188c57bb3f5cdba5a7effa95395186 middle-end: don't keep .MEM guard nodes for PHI nodes who dominate loop [PR111860]
00eb0812e6464307f9f971d2a743d720015e70cf tree-optimization/111915 - mixing grouped and non-grouped accesses
82bbbb73c67f79582d38a1aa63984987dcd0923a RISC-V: Add popcount fallback expander.
32b74c9e1d46932a4bbb1f46353bfc43c702c20a vect: Allow same precision for bit-precision conversions.
7b2984ad76cac67b962eeb39eab62b6dacf7845e RISC-V: Fix ICE of RTL CHECK on VSETVL PASS[PR111947]
b44d4ff7b43ff6a34d5c074c7ade03c4a38974fa RISC-V: Fix ICE of RVV vget/vset intrinsic[PR111935]
5e71499275525283f2255b4574599316b7ae8a78 RISC-V: Change MD attribute avl_type into avl_type_idx[NFC]
8064e7e2b5033073911c8d669638a7c61167c0e5 RISC-V: Export some functions from riscv-vsetvl to riscv-v[NFC]
4d49685d671e4e604b2b873ada65aaac89348794 RISC-V: Pass abi to g++ rvv testsuite
e37bc2cf00671e3bc4d82f2627330c0f885a6f29 RISC-V: Add AVL propagation PASS for RVV auto-vectorization
446efa52a8cadb56d1d994da5c4de394efaff462 RISC-V: Move lmul calculation into macro
7eed861e8ca3f533e56dea6348573caa09f16f5e Support vec_cmpmn/vcondmn for v2hf/v4hf.
b038e202210eb3e982c2ec802438edd523b47a02 Fortran: Fix some problems with SELECT TYPE selectors [PR104625].
3351ec2a9803cf4f0f43ef70b6925a039850d6ca RISC-V: Fix cond_sqrt tests.
9c032218107675291d05be28f8c08a32e3a17b95 RISC-V: Add rawmemchr expander.
7bcdb777e6a0d1a0159f25616c5d8e35e7cb5fb6 [PATCH] RISC-V: Fix wrong tune parameters on int_div
92fcbe8a323faee4c0fc571560f1a32317c4b26a RISC-V: Make stack_save_restore_2 more robust
b8b63e87669ef835e367f7b8ad437c6d1a6791f1 RISC-V: Fix one range-loop-construct warning of avlprop
8111b5c23bd14f80607bd35af58ec31e38a0378e Expand: Checking available optabs for scalar modes in by pieces operations
8c40b72036c967fbb1d1150515cf70aec382f0a2 Improve memcmpeq for 512-bit vector with vpcmpeq + kortest.
eb1cdb3e43f43a7311c324e0acf85ceaf79314e5 RISC-V: Fix bugs of handling scalar of SEW64 vx instruction in RV32
68880e40533c41c89eb72247c3080703ad09270c RISC-V: Make rv32i_zcmp testcase more robust
f5d33d0c790a00cb5240a966dd99df9961bf57a0 Fix wrong code due to incorrect define_split
5ee894130fd0103b3d95fbca19ea1acc4e68d828 RISC-V: Add the missed combine of [u]int64 -> _Float16 and vcond
711d703d07c8e9241361975674843cf0a3263f98 match.pd: Support combine cond_len_op + vec_cond similar to cond_op
5ee961b6f26575cb3d29572fa5653bb65330d949 RISC-V: Add assert of the number of vmerge in autovec cond testcases
184378027e92f51e02d3649e0ca523f487fd2810 genemit: Split insn-emit.cc into several partitions.
5de05bdaa7130a2fb14b90ef4e5669f418642a3c RISC-V: Add vector fmin/fmax expanders.
2d65622fda5cbfdc5f9a12822af6e54336f37cb3 riscv: thead: Add support for the XTheadMemIdx ISA extension
60d6c63df00e047ebee74b7bad9b076e55e50f28 riscv: thead: Add support for the XTheadFMemIdx ISA extension
b93fddba394cf19d8a9fd1739314b6c57425be01 RISC-V: Let non-atomic targets use optimized amo loads/stores
2b19c387696b0da9a5b02024c01cb45bfc1619ff RISC-V: Require a extension for testcases with atomic insns
f66b2fc122b8a17591afbb881d580b32e8ddb708 VECT: Support SLP MASK_LEN_GATHER_LOAD with conditional mask
c9bb20f7c90471c87236d4fe795e2099111cc746 NFC: Fix whitespace
084ea7ea5aa9054569c6bbb980ba1cfa59b3e5f1 RISC-V: Support vundefine intrinsics for tuple types
ea4a3d08f11a59319df7b750a955ac613a3f438a omp: Reorder call for TARGET_SIMD_CLONE_ADJUST
7560f2b4e387ef43ef45ee9fb06efbad6ca0fedf RISC-V: fix TARGET_PROMOTE_FUNCTION_MODE hook for libcalls
ea2e7bf80b8deead064d9b54c3caa852dfe009b3 RISC-V: Enable ztso tests on rv32
274c904471a11c493353a8b4f6e50d8fb7fef906 RISC-V: Use riscv_subword_address for atomic_test_and_set
1a0af6e5a99cd895a663f0221c25321ae802413f RISC-V: Allow dest operand and accumulator operand overlap of widen reduction instruction[PR112327]
88aca917eb705b16ec6c045ae7d499b1602a85e8 VECT: Refine the type size restriction of call vectorizer
d508a94167c186b2baacc679896e2809554c0b99 RISC-V: Support vcreate intrinsics for non-tuple types
4ea36076d66eea0f5ccb9cbb9774028a667e122c RISC-V: Fix redundant attributes
36a26298ec7dfca615d4ba411a3508d1287d6ce5 Make GCN target effective-target 'vect_gather_load_ifn'
01c18f58d37865d5f3bbe93e666183b54ec608c7 ifcvt/vect: Emit COND_OP for conditional scalar reduction.
f6284ef38701920865de3c9e18bb3f6068fde4d1 RISC-V: Fix bug of AVL propagation PASS
a29ce9bf8d87e632840bacacb663ece90a5c7710 RISC-V: Add check for types without insn reservations
1027c1c02069ef8310256d8d5521cd4703223327 Revert "RISC-V: Refactor prefix [I/L/LL] rounding API autovec iterator"
5ea3c039b784b0676323243940fd9916b1f6d540 RISC-V: Fix redundant vsetvl in fixed-vlmax vectorized codes[PR112326]
c0cf9b78573d3d353f22e5dd1c32fecdbca703b8 tree-optimization/112366 - remove assert for failed live lane code gen
60034ecf25597bd515f8152ea85832ff95a7563b VECT: Support SLP for MASK_LEN_GATHER_LOAD with dummy mask
95cfa2cdd1b525a5b2830206692ddb9f948000d3 Cleanup vectorizable_live_operation
e902dfbea7a75affbf645d024ff8c762afd9741e Testcases for vectorizer peeling
aed00696a01ac065e9ed327434ec29d1cf50179e vect: allow using inbranch simdclones for masked loops
8d22ac6a18cf542cd541c06b2a7df8fdd293946d RISC-V: Remove HF modes of FP to INT rounding autovec
40b9af020fc2842b4e22ae06742088815400631e openmp: Add support for omp::directive and omp::sequence attributes in C2X
53010f6ff6dfbf7bcd40055cf00d9f8e653cc641 RISC-V: Fix bug of vlds attribute
9acea4376fd98696ba51e59f417c94911a4d8248 RISC-V: Support FP rint to i/l/ll diff size autovec
1a55724f7870719d51a7acc0ccada254fcfd1cda RISC-V: Implement RESOLVE_OVERLOADED_BUILTIN for RVV intrinsic
3f9ff6e81b2554ed87131b3c6d25cf72130fbbfc RISC-V: Adjust FP rint round tests for RV32
d803438e0c4016aff720fad418377c5b13567063 tree-optimization/112369 - strip_float_extensions and vectors
0c42741ad95af3a1e3ac07350da4c3a94865ed63 internal-fn: Add VCOND_MASK_LEN.
3cc9ad41db87fb85b13a56bff1f930c258542a70 tree-optimization/112404 - two issues with SLP of .MASK_LOAD
bf72d50d16f0c1fa8102ca2544d2a05772f8c273 tree-optimization/111950 - vectorizer loop copying
418bd6427e3b7e06d031fef037bbc36d529be23f RISC-V: Early expand DImode vec_duplicate in RV32 system
ffa0a73e152807a57fe4159a0d53ede25812fd1f RISC-V: Support FP round to i/l/ll diff size autovec
9125969086bfa1bf804b246ea574a2329b06d2c5 tree-optimization/112405 - SIMD clone calls with (loop) mask
942ff588ba257d530b671019716275f9ef04041d RISC-V regression test: Fix FAIL of bb-slp-39.c
ee7ba242cf43884477f09e59d9b80af4bf91d143 test: Fix FAIL of bb-slp-cond-1.c for RVV
fd56a9cc5e37bb51c725a83aa44de34b9c238e78 RISC-V: Support FP ceil to i/l/ll diff size autovec
f1e084c6c3ef1d1233e35823dacfdf9cee722430 RISC-V: Enhance AVL propagation for complicate reduction auto-vectorization
d060f8a4fff81a117923adac1e02edb64160b31b test: Fix XPASS of bb-slp-43.c for RVV
7ba2d2344c508c825db800f0218f8121887c6852 test: Fix FAIL of SAD tests for RVV
86c913ec92c1b8e871e061ff35db58c2f81780f4 test: Fix FAIL of vect-sdiv-pow2-1.c for RVV test: Fix FAIL of vect-sdiv-pow2-1.c for RVV#
71b1efd910d47362558defc31b92fc4cc80c0ec6 RISC-V: Fixed failed rvv combine testcases
ab7ccb91e592035261e1cac34d9815b6d58ca1bb RISC-V regression test: Fix FAIL bb-slp-cond-1.c for RVV
4169033178f22ff31f2aba186d441bdfeca0e674 RISC-V: Add ABI requirement for XTheadFMemIdx tests
74b35716a8eb3fef8ce2545ebdb1ff78cbeed28b RISC-V: Use stdint-gcc.h in xtheadmemidx-helpers.h
e87bc7dc08a1bd05f07781edf064db26456102d5 testsuite: check for and use -mno-strict-align where needed
204186bae107f9f54ed4ea0f94619431860c6b97 RISC-V: Add RISC-V into vect_cmdline_needed
7aacbd44ead433f5e669a1eaf160089beeb25f3f testsuite: Change expectation for bb-slp-over-widen-n.c
dd5c3ca98a86e04a316b3d90dadcfcb2b171760b testsuite/vect: Make check more accurate.
beb1e2bf1bd4b7c8fc8d3dd450667344ae8e0aca test: Fix FAIL of pr65518.c for RVV[PR112420]
fd940d248bfccb6994794152681dc4c693160919 vect/ifcvt: Add vec_cond fallback and check for vector versioning.
2b61b8063b83c1764e43b547223372faee4bcfbd test: Recover sdiv_pow2 check and remove test of RISC-V
63dc25eda71c72586b81cb1cb22e1971ba09a3d1 RISC-V: Support FP floor to i/l/ll diff size autovec
f9148120048f4508156acfcd19a334f4dcbb96f0 RISC-V: Normalize user vsetvl intrinsics[PR112092]
ecb5ddd4f09f315f76b6a02cc68b56a9a6d2be94 test: Fix bb-slp-33.c for RVV
80f466aa1cce2759112c8b0121964d1bbb158f25 RISC-V: Eliminate unused parameter warning.
c2f2351494794a86360dfc7db97848de4638f9f6 RISC-V: Fix VSETVL VL check condition bug
8cf7b936d44c37558b518cbbea4b21ed502b651e RISC-V: Removed unnecessary sign-extend for vsetvl
c49e0c57b22e68e1aa89204f300dc5d61b42d812 Fix SLP of masked loads
38168bb69f8ed2b5d3e2e66a3813435230f83293 TLC to vect_check_store_rhs and vect_slp_child_index_for_operand
39d81b667373b0033f44702a4b532a4618dde9ff Fix SLP of emulated gathers
339ced829fefe7ac3811707472768a8fdff7bfcb RISC-V: Fix dynamic tests [NFC]
e39b3e02c27bd771a07e385f9672ecf1a45ced77 libstdc++: optimize bit iterators assuming normalization [PR110807]
5b6f4e6f05d5ef64ecb918db02f5b8149cb2b0a0 RISC-V: Fix dynamic LMUL cost model ICE
f586515accd0bafffba88ab906c6c43534a2ad94 Fix SIMD clone SLP a bit more
5e9fb75840e10bff5850ee610ca94c889c9a78e5 RISC-V: Fix the illegal operands for the XTheadMemidx extension.
8863a7990e9f0cd49c8900605a2c75a0e8886e85 tree-optimization/112450 - avoid AVX512 style masking for BImode masks
83f66d90af69837f7c8fc88f8afb7074d4555394 RISC-V: Add PR112450 test to avoid regression
177ca16b615d285f419cf2ab0337bc01f7be09db RISC-V: Refine frm emit after bb end in succ edges
2d44ab221f64f01fc676be0da1a6774740d713c6 middle-end: expand copysign handling from lockstep to nested iters
6c2ac6e9ce152e120f166866c5c77924c726db99 RISC-V/testsuite: Fix several zvfh tests.
907603d4b117e82dbbde2d58a04e33f3021908e7 Internal-fn: Add FLOATN support for l/ll round and rint [PR/112432]
1fa7dde8d680f28ed66db47309ed5e8f2789054d RISC-V: Move cond_copysign from combine pattern to autovec pattern
5a410860640f0fbd0a744dd89130d7d709a0ef07 test: Fix FAIL of pr97428.c for RVV
e7f4040d9d6ec40c48ada940168885d7dde03af9 RISC-V: Support vec_init for trailing same element
040e5b0edbca861196d9e2ea2af5e805769c8d5d Revert "RISC-V: Support vec_init for trailing same element"
072a409803a270fd3e8f8aa1b4f9bb8e83789b85 RISC-V: Robustify vec_init pattern[NFC]
a5922427c29fad177251d89cc946d1c5bfc135eb vect: Don't set excess bits in unform masks
e5f1956498251a4973d52c8aad3faf34d0443169 tree-optimization/110221 - SLP and loop mask/len
b70ad8c19aa8be672cdba6afe9cbab2d1254d127 RISC-V: XTheadMemPair: Fix missing fcsr handling in ISR prologue/epilogue
d7b971cf61ae0091dbc777c9aa056e6f1293da2f vect: Look through pattern stmt in fold_left_reduction.
62e6ded7ae8582ade4e56aea10d67b9e942d8026 RISC-V: testsuite: Fix 32-bit FAILs.
6aaf72ff533550dad68362e8da308b480a9e0f30 RISC-V: Add combine optimization by slideup for vec_init vectorization
fb906061e10662280f602886c3659ac1c7522a37 Middle-end: Fix bug of induction variable vectorization for RVV
5dbaf4851bbf56b6176dca1f1e7d38a16b5b84ee Allow md iterators to include other iterators
61701b20fa268c93266ba8c18d9f209bb4317400 g++: Rely on dg-do-what-default to avoid running pr102788.cc on non-vector targets
c8bff398cf6c67753843fa39b3393d4ff3b15bcf RISC-V: Fix indentation of "length" attribute for branches and jumps
807f47497f17ed50be91f0f879308cb6fa063966 libstdc++: Do not use assume attribute for Clang [PR112467]
108e93403c461f57437da28348e5d5409ed2adc8 RISC-V: Add test for PR112469
29d3e1892ebec8abce784077d1f1a3e21d763218 mode-switching: Pass set of live registers to the needed hook
93d65f39bc5c3dc318deb6da0e3633f3a4c6c34d mode-switching: Pass the set of live registers to the after hook
7610e5cc82bd6316cfe0bfee6d9f12d8c2cfa9c3 tree-ssa-math-opts: Fix up gsi_remove order in match_uaddc_usubc [PR112430]
5dfa501d2f2e58f2448466c75d6dbebce669638f RISC-V: Support FP l/ll round and rint HF mode autovec
401dc18184af6b32a3ccbe1eaeed0c7ff9ae1d5a RISC-V: Fix RVV dynamic frm tests failure
5a0c302d2d721b9650c1e354695dbba87364c334 gimple-range-cache: Fix ICEs when dumping details [PR111967]
5c432b0efab54e81e11de7f5ec26d371a55d48e7 C99 testsuite readiness: More unverified testcase un-reductions
2794d510b979be76b0fee4521d1a454332176007 Support vec_set/vec_extract/vec_init for V4HF/V2HF.
ed3ce1c3bbab096891012968cd6b938a45d83969 RISC-V: Optimize combine sequence by merge approach
e0cacaabca30208f4ed05abddf48ff821374a0c6 RISC-V: Adapt VLS init tests
2020bce38cf2e02cbd1097faa8f1fd6586364a7e RISC-V: vsetvl: Refine REG_EQUAL equality.
bfcb6e518371bb943b77e0ef784e1de72a99aec6 RISC-V: Fix init-2.c assembly check
f28306b4fd309b579c8a4a5bf2f1b24fa40f8f7f Fix ICE in vectorizable_nonlinear_induction with bitfield.
7383cb56e1170789929201b0dadc156888928fdd Add type-generic clz/ctz/clrsb/ffs/parity/popcount builtins [PR111309]
5ea2965b499f9e491e45db19fedbccfccb75076a tree-optimization/112281 - loop distribution and zero dependence distances
948b8b6e0e50958ecf56d4d9fb7ac16f245d9cc3 Fix ICE generating uniform vector masks
a1ad62ee2fd070854d2137f35614af639c1a94f2 libstdc++: bvector: undef always_inline macro
081fddbbcf9790229f4fe885781548ba1f6a365a Revert "libstdc++: bvector: undef always_inline macro"
d85161a73b9bdd382e62ca1ba3f9f962971a9695 RISC-V: Disallow RVV mode address for any load/store[PR112535]
319bbb3693787a5493cc46793804231d1670cdee RISC-V: Refine the mask generation for vec_init case 2
e9fc877f6d4b89940dbfb9f18549b82720d0d992 RISC-V: Support trailing vec_init optimization
28219f7f99a80519d1c6ab5e5dc83b4c7f8d7251 libsanitizer: merge from upstream (c425db2eb558c263)
bcef48b59e4b4f86595929b490a8303da1239ac0 Fix ICE with SLP and -fdbg-cnt
fb4e2c1648ea4cf1b1d34205a1da519702328d92 RISC-V: elide unnecessary sign extend when expanding cmp_and_jump
d1189ceefc1da1515e039c9cfd2f5a67b5820207 RISC-V: fix vsetvli pass testsuite failure [PR/112447]
026d9454b1d9971061ad2e7d47c3ef4b0b96495d RISC-V: Fix ICE in non-canonical march parsing
fc6f7ab4e078aaf52c37739da73eb6416f5ec788 VECT: Clear LOOP_VINFO_USING_SELECT_VL_P when loop is not partial vectorized
9f35d8cd767155e9c24f5ef0944168711d38bc6b slp: Fix handling of IFN_CLZ/CTZ [PR112536]
f4ab68469ccffa83f23c321e8cb675b1eaf35f0c libstdc++: Test for feature test macros more accurately
7ffa63df8f5281bcd81bbb9842b698bc91fbb4fd libstdc++: Only declare feature test macros in standard headers
defa8681d951c6d6c43c71e3636ce4db9de04a28 RISC-V: Save/restore ra register correctly [PR112478]
5f1105612b592650566a54846dd5f9ccdfed01a9 RISC-V: Implement target attribute
7a496b7ce105185be12e023e749c90d5f7561879 middle-end: skip checking loop exits if loop malformed [PR111878]
a671095c208c7cf5eb934b6a31bd9fb6f6640a6b RISC-V: Change unaligned fast/slow/avoid macros to misaligned [PR111557]
172a72da368146e0fe34194020eb7a6636db4438 vect: Fix check_reduction_path [PR112374]
231bb992592a9e1bd7ce6583131acb1874c8e34e vect: Pass truth type to vect_get_vec_defs.
07fe07935ddb9228b4426dbfdb62d4a7e7337efe RISC-V: Refactor RVV iterators[NFC]
5f4499606ea6ab49bec30e83209db71e52d0b267 RISC-V: Fix mismatched new delete for unique_ptr
af7fa3135b6b046fe3ba869993221042a65301eb RISC-V: Fix bug of tuple move splitter
07da9b7f13c92a21d12172a9df85ad762591b998 [committed] Fix missing mode on a few unspec/unspec_volatile operands
c177f28d601408180fdb2db0d5ba89d53b370b5e [committed] RISC-V: Infrastructure for instruction fusion
bb6028b40bf19db1b42bf8c68c35eb82f40043b7 RISC-V: Optimize constant AVL for LRA pattern
e6269bb69c0734a5af716bfbded3621de6ca351d RISC-V: Implement -mmemcpy-strategy= options[PR112537]
2b59e2b4dff42118fe3a505f07b9a6aa4cf53bdf Support reduc_{plus,xor,and,ior}_scal_m for vector integer mode.
f25a5b199a0ebd4695466e665e49041339f0c6a7 vect: Add bool pattern handling for COND_OPs.
509b470dcee9795887a60ddb32ab454f22e74411 c, c++: Add new value for vector types for __builtin_classify_type
a63cbcc52e4490d365cb09d60ba32577b7134c75 RISC-V Regression: Remove scalable compile option
b3677563cd3ebc20c186650ff94171d321a52b30 RISC-V: Disallow 64-bit indexed loads and stores for rv32gcv.
a27f587816b6c3b8e46e4e46777abdc915ae00aa RISC-V: Fix intermediate mode on slide1 instruction for SEW64 on RV32
b7a1b89e60c4b492f85b47e02c12b01dd8a6e28b middle-end/112622 - convert and vector-to-float
57c028acbec4f7b594e6b024e02d6c799b51e03d tree-optimization/112618 - unused .MASK_CALL
53ba8d669550d3a1f809048428b97ca607f95cf5 inter-procedural value range propagation
7e2a429ae8f938a94c69bcab96062c9f036b721e RISC-V: Fix reduc_run-9.c test value check bug
c656d268c9dac8b6f710b9bbd399214cb11b3287 tree-optimization/111970 - fix issue with SLP of emulated gather/scatter
4d011701c074cac9bab7edfcf07c1868f0472177 ada: Fix issue with indefinite vector of overaligned unconstrained array
0a033038cdd1360f96dff171d719ea49f951ce63 RISC-V: Add missing dump check of pr112438.c
8faae311a60a552ed3d506de28c50c77fa49b229 RISC-V: Disallow COSNT_VECTOR for DI on RV32
1d82fc2e6824bf83159389729c31a942f7b91b04 optimize std::vector::push_back
ae156936cf4f15d9cc2b7d4e39f2e6b8fe22a9c3 Move VF based dependence check
aef1aaff41190d2f82cf49d8907682b6dff71c3c tree-optimization/112623 - forwprop VEC_PACK_TRUNC generation
f1b2f3a7e0638c450129ea099baa42cbf290e313 gfortran: Rely on dg-do-what-default to avoid running pr85853.f90, pr107254.f90 and vect-alias-check-1.F90 on non-vector targets
4efa929a0254b093cc31386cf7fb7c91091ca3cd RISC-V: testsuite: Do not set default arch for RVV.
686056b7965d5f6c3e7ef568e66b1435faad950d RISC-V: testsuite: Add rv64 requirement for bug-9 and bug-14.
638c2f3caf01b1b570b403235ad6a28bd8245fc6 RISC-V: testsuite: Fix popcount test.
2bbc7f4ef6329df62146fd6d0da5f30750cc72b4 vect: Allow reduc_index != 1 for COND_OPs.
932fe50a8ba980f9cd92b0dcc15485ca503df30a RISC-V/testsuite: Add cases for integer SFB cond-move operations
3bb4000c5f5f70cf5cb651314a939f1cbc65046d RISC-V: Reorder comment on SFB patterns
9f5aa4e210cbcb621ead82f4b56482deaa548c13 RISC-V: Sanitise NEED_EQ_NE_P case with `riscv_emit_int_compare'
04c9c27c6f34a1ce1cd4900ccc8dc2521852e8e6 RISC-V: Fix `mode' usage in `riscv_expand_conditional_move'
00a3bd4ccae4f7a7fd1d76db325808129208986b RISC-V: Avoid repeated GET_MODE calls in `riscv_expand_conditional_move'
5a21d507561883460411921a291bfd50a9a1d429 RISC-V: Use `nullptr' in `riscv_expand_conditional_move'
35bea66d367520e6f62fc723bca6bf9cb291e581 RISC-V: Simplify EQ vs NE selection in `riscv_expand_conditional_move'
c1e8cb3d9f9475bf99fba6f12fc9d226a7ae5f57 RISC-V: Rework branch costing model for if-conversion
dcf4395fc67a6fc83e50329d92bea82b2fdf4254 RISC-V/testsuite: Add branched cases for integer cond-move operations
28d6d6bfbde2b08ce5fde5a2f3129908881b1a29 RISC-V/testsuite: Add branchless cases for integer cond-move operations
bc40013cd6074f506f488c4717871ebcb7bb9087 RISC-V/testsuite: Add branched cases for FP cond-move operations
814485b2564a453ce9c0731344282f18e12ed0b5 RISC-V/testsuite: Add branchless cases for FP cond-move operations
db9d825b212994e89dabc710c61944552eb1fe90 RISC-V: Also invert the cond-move condition for GEU and LEU
cfa6536f29d19300d0687f4c9ae07800278ad31f RISC-V/testsuite: Add branched cases for GEU and LEU cond-move operations
3a746501f6baf88f1a1e55d94a762a737b9daf6a RISC-V/testsuite: Add branchless cases for GEU and LEU cond-move operations
cfec7fc11017f964b9b5ece5692e30c2d3f0e7a1 RISC-V: Avoid extraneous EQ or NE operation in cond-move expansion
5e884a894206735cf1909edfe8a1410ac411c392 RISC-V/testsuite: Add branched cases for equality cond-move operations
c47fb7d09ea7b152f48129fb73af1bb24d65fcc3 RISC-V/testsuite: Add branchless cases for equality cond-move operations
eeb112542f9a93974ee17d582ba649c50af95c86 RISC-V: Also accept constants for T-Head cond-move comparison operands
566a2b3baa342c7e00b7de7112d92637baba9c75 RISC-V: Also accept constants for T-Head cond-move data input operands
413ebfd660793ce16f0e6173b38ad91cd2f0cf64 RISC-V: Fold all the cond-move variants together
4f83f79d93a2c25e984d08457649c6b94f47b3e9 RISC-V/testsuite: Add branched cases for T-Head non-equality cond moves
6e3237321454a48f37c43e9b71f7c1ffd1879b96 RISC-V/testsuite: Add branchless cases for T-Head non-equality cond moves
4daeedcbaf5d596d00004ca6ec4835dc57bdd02a RISC-V: Implement `riscv_emit_unary' helper
dc95b338c04281224f5c9c058acec170e4008b5c RISC-V: Add `movMODEcc' implementation for generic targets
430b9636a55ddfadc83b76f6e46a22e0328e08e1 RISC-V/testsuite: Add branched cases for generic integer cond moves
4111bdf99bf5c54b13e7d484fe4b75661d04a4e0 RISC-V/testsuite: Add branchless cases for generic integer cond moves
40b243c4701e564d317ab35af7805ddd21a3e08f RISC-V: Add `addMODEcc' implementation for generic targets
bbfe2639e18cbaa431f82d69fb79f34562a60881 RISC-V/testsuite: Add branched cases for generic integer cond adds
5e6903ddd39e058b9a8304a77765529d64819966 RISC-V/testsuite: Add branchless cases for generic integer cond adds
7e126d8d0fbe5677070f02c32a1425849ce36298 RISC-V: Only use SUBREG if applicable in `riscv_expand_float_scc'
37ff43c27344784caed28778fb847244a49644bd RISC-V: Also allow FP conditions in `riscv_expand_conditional_move'
2f825475b2a64fce716a2628bdc631491dd3a1e1 RISC-V: Provide FP conditional-branch instructions for if-conversion
2f0c6252f4e697e187a35427b4b78ba55a830b3d RISC-V: Avoid extraneous integer comparison for FP comparisons
fe276a42a73767931cae38665851e01ae3c14927 RISC-V/testsuite: Add branched cases for generic FP cond moves
9d02897e885e547ac7af11883717b1539154db61 RISC-V/testsuite: Add branchless cases for generic FP cond moves
2278c6443aa6aaa12b3682afb8ad0774575ae1b4 RISC-V/testsuite: Add branched cases for generic FP cond adds
0f4ce86eebd031d1d8ad5bd8fc92333030ce56a1 RISC-V/testsuite: Add branchless cases for generic FP cond adds
9a1a2e9857b144872798973fc83ef6e8648cfb08 RISC-V: Handle FP NE operator via inversion in cond-operation expansion
23207facbbe6da8659608b3d69544a608152a415 RISC-V/testsuite: Add branched cases for FP NE cond-add operation
6300e672c86236720952227bc4fd6a6dc4eeb55a RISC-V/testsuite: Add branchless cases for FP NE cond-add operation
ae098dfeeefe74968530289d9f5e3ae6f78097bb RISC-V: Remove duplicate `order_operator' predicate
d13e59b86c5cbeec6135ada3f6dc983289cac610 RISC-V: Fix permutation indice mode bug
de6f3e12bd188fee30bc79a5e323e16e0dbbe8ca RISC-V: Fix incorrect use of vcompress in permutation auto-vectorization
990769a343f090088f5025ad233f88824b2c6263 DSE: Allow vector type for get_stored_val when read < store
97ddebb6b4f6b132b0a8072b26d030077b418963 RISC-V: Refine some codes of riscv-v.cc[NFC]
35a688f434159a923420310860c5bc721e29a741 RISC-V: Disable AVL propagation of vrgather instruction
ef296fb37cac12a5a10e83c16ae021a624e1238c RISC-V: Add wrapper for emit vec_extract[NFC]
af7a422da457aa13df8eb1feb601dffafb76ed7c RISC-V: Disable BSWAP optimization for NUNITS < 4
d83013b88b74d1f1f774d94ca950d3b6dba26e5d RISC-V: Optimize a special case of VLA SLP
9f63a8898154473f7b773c3e2ed71e4959719b71 tree-optimization/112677 - stack corruption with .COND_* reduction
eebcad0ac22010fc59de9d856bb02017fccab282 match.pd: Avoid simplification into invalid BIT_FIELD_REFs [PR112673]
aea337cf740ec33022f3cabfa7dd4333d5ba78ee RISC-V: Fix inconsistency among all vectorization hooks
aae723d360ca26cd9fd0b039fb0a616bd0eae363 sra: SRA of non-escaped aggregates passed by reference to calls
c2dcfb6ba6e9a84a16e63ae73a822ae2a843170c Use memcpy instead of memmove in __relocate_a_1
ec84a1e7a18f65858a1b129ff80cb32e64cf151b RISC-V: Disable AVL propagation of slidedown instructions
006e90e13441c3716b40616282b200a0ef689376 RISC-V: Initial RV64E and LP64E support
e02772344815e505c8c146ce48b1427dc9e9d190 RISC-V: Remove incorrect function gate gather_scatter_valid_offset_mode_p
061a82fa2b751b42d0d8ddfcd45367c848d3ee64 vect: Avoid duplicate_and_interleave for uniform vectors [PR112661]
2065438db4ac13af7e0de2f934959413647f74a7 PR111754: Rework encoding of result for VEC_PERM_EXPR with constant input vectors.
f1b03fa964527678f15e6ef416bfe37e60b3dc54 match.pd: Fix parity (X) ^ parity (Y) simplification [PR112719]
e6c01334ccfca8bc748c8de90ba2a636d1662490 testsuite: Fix up pr111754.c test
9f3f0b829b62f11f350867d2350e2af8639ec890 RISC-V: Disallow poly (1,1) VLA SLP interleave vectorization
f26d68d5d128c86faaceeb81b1e8f22254ad53df middle-end/112732 - stray TYPE_ALIAS_SET in type variant
25a51e98fdd504826a40775a5e5b9ffb336b5aa1 RISC-V: Bugfix for ICE in block move when zve32f
862867eab78d7731f725cf7fa4ba02ed5e503db1 Introduce hardbool attribute for C
73a63efcdae4b979b4a1dcff2da7d68b905453a0 RISC-V: Add explicit braces to eliminate warning.
bdad036da32f72b84a96070518e7d75c21706dc2 RISC-V: Support highpart register overlap for vwcvt
b09b879e4e9cc24a5d2b0344c1930020c218a104 middle-end/110237 - wrong MEM_ATTRs for partial loads/stores
62685890d8861b72f812bfe171a20332df08bd49 RISC-V: Support highpart overlap for vext.vf
e65aaf8efe1900f7bbf76235a078000bf2ec8b45 RISC-V: Rename vconstraint into group_overlap
8614cbb253484e28c3eb20cde4d1067aad56de58 RISC-V: Support highpart overlap for floating-point widen instructions
fc7b70fa3497664a58b3c0b36fa94f9ec87d4f22 RISC-V: Fix 'E' extension version to test
a1a3939bea5b0d9cbd3465d96e7e4a5222ae6c48 Use vec_extact_lo instead of subreg in reduc_<code>_scal_m.
b4a7c1c8c59d191bff64a720cca61d1d308af531 Support sdot_prodv*qi with emulation of sdot_prodv*hi.
5a35152f87a36db480693884dfb27ff6a5d5d683 RISC-V: Remove earlyclobber for wx/wf instructions.
303195e2a6b6f0e8f42e0578b61f9f37c6250beb RISC-V: Support widening register overlap for vf4/vf8
9715c545d33b3a32ddc1ae817ba9356ade1fb9df c: Turn -Wincompatible-pointer-types into a permerror
8332b991e42dbffd1f2a7b7aa9a23f5aa242e602 Fix ambiguity between vect_get_vec_defs with/without vectype
4418d55bcd1b7e0ef823981b6a781d7de5c38cce RISC-V: Support highpart overlap for indexed load with SRC EEW < DEST EEW
e5bbeedcf7020dfa3870d11cf2b85bc048655698 RISC-V: Bugfix for legitimize move when get vec mode in zve32f
1461b431da51f80c90c3bea03d587d76e3e50843 RISC-V: Fix incorrect combine of extended scalar pattern
193ef02a7f4f3e5349ad9cf8d3d4df466a99b677 RISC-V: Improve style to work around PR 60994 in host compiler.
7fa24687aa3a683fd105ce5ff6b176f48dca3b6c Allow target attributes in non-gnu namespaces
806789e6daa39ab0503d91c71b3faeb5d5cdd317 RISC-V: Fix typo in test abi configuration
d3544cea63d0a642b6357a7be55986f5562beaa0 RISC-V: Robostify the W43, W86, W87 constraint enabled attribute
26b1599d83ddd5b5ac6fb845549e66acc45981f6 RISC-V: Refine riscv_subset_list::parse [NFC]
9e12010b5e724277ea44c300630802f464407d8d RISC-V: Refactor riscv_implied_info_t to make it able to handle conditional implication [NFC]
ba94969bad24d57895b02cc2d4663462f8fb5bc5 RISC-V: Add sifive-x280 to -mcpu
fc98a41c8def1cab4f9b8359be84e8623eab88e2 prefer Zicond primitive semantics to SFB
9448428b6871a4f7cbc9a1971077c3f9f3742e0d RISC-V: Update crypto vector ISA info with latest spec
462ccc3b9d5625cdc6104322a417bcd1ff1a8ff4 RISC-V: Add test case for bug PR112813
7804b4e24cd16283067225d4c2c4a4483a2b31bc RISC-V: Remove earlyclobber from widen reduction
969d4e25e7dccaf9f3a32126545b73725b5b455d RISC-V: Rename bug-01.C to bug-1.C
80d67d8f682a6050a3bf4dcfa18a83f321986f2a tree-optimization/112818 - re-instantiate vector type size check for bswap
27fde325d64447a3a0d5d550c5976e5f3fb6dc16 RISC-V: Support highest-number regno overlap for widen ternary
018ba3ac952bed4ae01344c060360f13f7cc084a RISC-V: Fix overlap group incorrect overlap on v0
82576a6e77e0a284975dda87efe4b2d5bc5b9b1c RISC-V: Document optimization parameter riscv-strcmp-inline-limit
4ae5a7336ac8e1ba57ee1e885b5b76ed86cdbfd5 RISC-V: Rename and unify stringop strategy handling.
cdb34bf5dd10df967b7f72a502a48cc34e284ef0 RISC-V: Fix rawmemchr implementation.
1067e9d347a9d9ff8e1cd3df9e60bca3da85a734 RISC-V: Fix two testscases related to -std changes.
d9b51588e960239337c964e5ddd87ac5c4c2f086 RISC-V: testsuite: Remove redundant vector_hw and zvfh_hw.
1f1c432226cf3db399b2a2a627e3c5720b02b1d6 c++: implement P2564, consteval needs to propagate up [PR107687]
b1cb2d993cc1148281fb4922a7ae26a4ae9ecf6f Take register pressure into account for vec_construct/scalar_to_vec when the components are not loaded from memory.
8b93a0f3eb46cbc4ba8eece8eba58aaade4399b6 RISC-V: Add blocker for gather/scatter auto-vectorization
33c1f7233af84f003a574650d0f8878acb84cdf3 RISC-V: FAIL:g++.dg/torture/vshuf-v[2|4]di.C -Os (execution test) on RV32
f542df026cd24e604eb40426a83ce072ef34e15a RISC-V: Check if zcd conflicts with zcmt and zcmp
e9d2ae6b9816e61a6148040149c63faa83f54702 Allow prologues and epilogues to be inserted later
2e7abd09621a4401d44f4513adf126bce4b4828b RISC-V: Block VLSmodes according to TARGET_MAX_LMUL and BITS_PER_RISCV_VECTOR
8a5ef148bbab3b5397e293cbc28f6d6ebc5bb596 RISC-V: Remove useless modes
056cce412862f8d9b56a40dfbcbc3f9fa7f92883 RISC-V: Add vec_init expander for masks [PR112854].
c1e54c82a9e1855499ef7bb8827540e6a097532b c++: partial ordering of object parameter [PR53499]
c9d5b46a25547035e381b0246de5cb553ca8b02d RISC-V: Fix VSETVL PASS bug
1bd15d87031e8bf8fe9585fbc166b315303f676c RISC-V: Remove xfail from ssa-fre-3.c testcase
db642d60ee81cd99d55f4e228d01de704b5b7cfa RISC-V: Fix PR112888 ICE
8c09c73adf4c537876e8ef418378d6581b768a64 RISC-V: xtheadfmemidx: Disable if xtheadmemidx is not available
570d74119d2daaa9ea909b6326a3756f548097d0 RISC-V: xtheadmemidx: Document inline asm issue with memory constraint
abded9bf3e1ebc1789d47ac2c445f5b613981a0e RISC-V: Fix AVL propagation ICE for vleff/vlsegff
249404649d26f544d1ad6808625807532c2b6a42 testsuite: require avx_runtime for some tests
71a5ac6703d1b7a0409936fcdec4e592d7cc06b0 RISC-V: Support interleave vector with different step sequence
9f7ad5eff3bf1e42aac0825b37d2c9ab43eaafd2 [PATCH 1/5][V3][ifcvt] optimize x=c ? (y op z) : y by RISC-V Zicond like insns
2efe3a7de0107618397264017fb045f237764cc7 tree-optimization/112774: extend the SCEV CHREC tree with a nonwrapping flag
b241d91f1e344a7324f66b216f11b40bbb65cf2e RISC-V: Remove redundant check of better_main_loop_than_p in COST model
39a1ab9c33b6067b1cc843408886e7ba709fbb62 Add IntegerRange for -param=min-nondebug-insn-uid= and fix vector growing in LRA and vec [PR112411]
8f60f5499e10d19218cada082e0909516ebf0e74 haifa-sched: Avoid overflows in extend_h_i_d [PR112411]
51b8259212791dbea846706bc5e9db5310f1fc10 RISC-V: Fix ICE for incorrect mode attr in V_F2DI_CONVERT_BRIDGE
2664964b2f695e947faea4c29dbddd3615cc4b0b RISC-V: Add vectorized strlen.
d468718c9a097aeb8794fb1a2df6db2c1064d7f7 RISC-V: Add vectorized strcmp and strncmp.
9363d91956931bb28735bed97035b9ec965c850f RISC-V: Fix VLS mode movmiaslign bug
5a4faf915575c690a25f0522dccc5b8d82909f10 [PATCH 2/5] [ifcvt] optimize x=c ? (y shift_op z):y by RISC-V Zicond like insns
ec201e2a6021d144797f5558e4d08a2385de7a63 [PATCH 3/5] [ifcvt] optimize x=c ? (y AND z) : y by RISC-V Zicond like insns
a536d235d2204f3ff9be126fec3acbc032db3086 RISC-V: Remove poly selftest when --preference=fixed-vlmax
330bb06485b18bae3effe83b45b97dbdcd543367 RISC-V: Fix ICE in extract_single_source
7e854b58084c131fceca9e8fa9dcc7469972e69d RISC-V: Support highest overlap for wv instructions
037f57025921e026d520c1eda26a54853e4cb245 Simplify vector ((VCE (a cmp b ? -1 : 0)) < 0) ? c : d to just (VCE ((a cmp b) ? (VCE c) : (VCE d))).
d9dd06ad51b7479f09acb88adf404664a1e18b2a RISC-V: Recognize stepped series in expand_vec_perm_const.
63194a0e8ede9e15dfa01c6ec7aeea8f7702d3b7 RISC-V: Rename test[NFC]
4db744149b6ed46314107187bb25e142c729f442 RISC-V: Robostify shuffle index used by vrgather and fix regression
0a569f87cd8436abaa6ac8c0da6e441152904e67 RTL-SSA: Fix ICE on record_use of RTL_SSA for RISC-V VSETVL PASS
b1474da1bb9cc829cbf597f9a51393795108419f RISC-V: testsuite: Fix strcmp-run.c test.
fda2e1ab60377ca1a6aff093355b29115cff5880 RISC-V: Move RVV POLY VALUE estimation from riscv.cc to riscv-v.cc[NFC]
ce7e66787b5b4ad385b21756da5a89171d233ddc RISC-V: Add avail interface into function_group_info
8b832bfb4f9e50c2793463d9756499124de2f3e6 RISC-V: Disable RVV VCOMPRESS avl propagation
878cb5acf0c499702ffd315e273f55e8bd0970b8 tree-optimization/112961 - include latch in if-conversion CSE
6d0b0806eb638447c3184c59d996c2f178553d45 tree-optimization/112736 - avoid overread with non-grouped SLP load
26250632df1526bad2af9f2620204427008ac433 RISC-V: Refactor Dynamic LMUL codes
8501edba91ea63bdfc045f1cb66fb1c242e44e80 RISC-V: Apply vla vs. vls mode heuristic vector COST model
b9baead90d74e9211fc94d655ecd5d3af3858158 tree-optimization/112990 - unsupported VEC_PERM from match pattern
f6d787c231905063dc3b55ce7028e348b74719be Middle-end: Adjust decrement IV style partial vectorization COST model
90be333ad515b6126ce6dfe37aff6eb6b442b4ed RISC-V: Fix dynamic lmul tests depended on abi
ef21ae5c45f3b79a36fadc1cb5723c095e2965ad RISC-V: Postpone full available optimization [VSETVL PASS]
6a737ec24a98b3aa13605988c54c827f1bdae308 RISC-V:Add crypto vector implied ISA info.
d702387b1b765f85e19961a0b2a29df14df89bfd RISC-V: Refine test cases for both PR112929 and PR112988
5fdb150cd4bf8f2da335e3f5c3a17aafcbc66dbe OpenMP/OpenACC: Rework clause expansion and nested struct handling
5e0f67b84a615ba186ab234a9bc43df0df5a50b6 RISC-V: Add RVV builtin vectorization cost model
d16479170066b7606dea8dc25a7527a081a90a0b testsuite: Fix up target-enter-data-1.c on 32-bit targets
e9f0af150358d93b4c4c5f65d662748ae87bd3d0 RISC-V: Add failed SLP testcase
be0ff0866a6f072ccfbbb3a3c2079adf1db51aa1 Force broadcast constant to mem for vec_dup{v4di,v8si,v4df,v8df} when TARGET_AVX2 is not available.
203efd5097b86a1eb0e41ca1a6be357721d5f14d Revert "RISC-V: Add avail interface into function_group_info"
d782ec8362eadc3169286eb1e39c631effd02323 tree-optimization/112793 - SLP of constant/external code-generated twice
4e9b2c94e45f5991a472fb639fb2baa6aa42b76b tree-optimization/113018 - ICE with BB reduction vectorization
7d00a59229ee17af009a3c6c6208b0611740ed49 libstdc++: Make __gnu_debug::vector usable in constant expressions [PR109536]
0a5170b5f596bb5fcedf25d93952b979d02d1f56 expmed: Use GET_MODE_PRECISION and expander's output mode.
e5e1999aa664333f766f3e6cc6996f769d50ae7a expmed: Compare unit_precision for better mode.
7b15959f8e35b821ebfe832a36e5e712b708dae1 Update 'gcc.dg/vect/vect-simd-clone-*.c' GCN 'dg-warning's
c7ef2189855a8cf12427a778cd5a31d42ddf6260 Middle-end: Do not model address cost for SELECT_VL style vectorization
4bfafea6922dffea145d1aa1d5f5fa4814e66173 RISC-V: Tweak generic vector COST model
afead7fb9b3113dbc3dc84e514847f8b688742bf RISC-V: Adjust test
7304e85ffff8cd832bb520f2b4f341fca286d510 RISC-V: Remove xfail for some of the SLP tests
5ddf651ad91d34b754dbe280e5ab2b19cf90f8ee RISC-V: Fix vmerge optimization bug in vec_perm vectorization
1ddf65c5fc6ba7cf5826e1c02c569c923a541c09 [PATCH] RISC-V: Add Zvfbfmin extension to the -march= option
082835836cf763e74ed2fdf9645ac4f1f94d6d4f Re: [PATCH] RISC-V: fix scalar crypto patterns
723d62feae96fb528d5faf715fe2ff47233670a0 [PATCH] RISC-V: Add -fno-vect-cost-model to pr112773 testcase
14876d6aa73b9e9385313c857ab6f399e4823bf8 [PATCH v4 1/3] RISC-V: Add support for XCVelw extension in CV32E40P
e0fe3ab96848633e1e09f20ddbf32bdb6552db11 [PATCH v4 2/3] RISC-V: Update XCValu constraints to match other vendors
2c3e4d18b2f75cce287c8566c4231c677a243161 RISC-V: Fix POLY INT handle bug
73aeec31c5ef15b5a3877370353164a2a6aaa8a6 RISC-V: Add viota missed avl_type attribute
7b4d6734b87ed1002e24d8bf6d4fd1dfb4fda383 testsuite: Fix cpymem-1.c dump checks under different riscv-sim for RVV.
2c0c3368de5f8e3951f14a21d2d9183f6998ead5 RISC-V: Bugfix for the RVV const vector
10493cd4c1e852a4e89742b5c81e6d8bc2eef9a5 RISC-V: Fix natural regsize for fixed-vlmax of -march=rv64gc_zve32f
8c5d1d13882a0e58c308b95b1b51484721eafded RISC-V: Enable vect test for RV32
b3b2799b872bc4c1944629af9dfc8472c8ca5fe6 RISC-V: Support one more overlap for wv instructions
ac9c81dd76cfc34ed53402049021689a61c6d6e7 RISC-V: Rename the rvv test case.
88a398a487ee37f1fc7850740f2d94d895657646 middle-end/111975 - dump -> GIMPLE FE roundtrip improvements
15cb5204e4c5f79d1b7179ae2590bb65e24b745f RISC-V: Add required_extensions in function_group
605d21f8ef1f0f0ff784adc05cbeea229a6b5ddf testsuite: Fix cpymem-2.c dump checks under different riscv-sim for RVV.
caa2d2a588c028393fa153ddddb893040f8f9833 RISC-V: Remove 256/512/1024 VLS vectors
b61e849bd39e55509bc383514a9f4333ea88b3d2 testsuite: Fix dump checks under different riscv-sim for RVV.
746e7b214d61879c3531c0f0fe34656764a26906 RISC-V: Fix FAIL of dynamic-lmul2-7.c
a0cc5eb21de80136ddb104cfb3c6994b5de87bbe RISC-V: Force scalable vector on all vsetvl tests
1555a5e24cc3b6231491d9760e916a4193255b09 RISC-V: Refine some codes of expand_const_vector [NFC]
aa2a48984c3d8c7a6a6da10d924e030b141b44cd tree-optimization/113073 - amend PR112736 fix
71bc7c6fa116dec13ca0c636c2755d26f3341b33 RISC-V: Fix FAIL of bb-slp-cond-1.c for RVV
672db38c6f0723ca57fe8ff4c43422341e7fb857 -finline-stringops: allow expansion into edges [PR113002]
bfdadcb2991c8601671944e5a7834194d73d2c14 RISC-V: Bugfix for the const vector in single steps
3dd6f73a231362a67ff6dee05510bb4fe6253820 RISC-V: Fix calculation of max live vregs
a8f0278ade1353e3e6389aa7a00525b6e9b723ab Improve DCE of dead parts of a permute chain
a3ff76278efe006dc0b50249c8e5baf565bff56b veclower: improve selection of vector mode when lowering [PR 112787]
eef65d60a8bb2e9328fd9d2b6cd869618be4f08e [PATCH] RISC-V: Fix RISCV_FUSE_ZEXTWS fusion condition
d07d0e992232d668ba6c27e15433f7616a69e5b5 RISC-V: Support -mcmodel=large.
08ab2293dcce442e139b163ba22f65a32e7ebd6c cse: Fix handling of fake vec_select sets [PR111702]
d82bb518fa372cc30cc3352e0a124d0bd6deb36f RISC-V: Fix bug of VSETVL fusion
008b80e42eb7cb55c6a2ef55728241b8733dfd17 RISC-V: Optimize SELECT_VL codegen when length is known as smaller than VF
41a5f67db3cd625d2f3cfba6a87d3530a3291f33 RISC-V: Add dynamic LMUL test for x264
135bb9e37167ef70501a888bd3db195b11b37ae3 omp: Fix simdclone arguments with veclen lower than simdlen [PR113040]
619a9539ee378e635ba3a26300dff746a9ff4ba2 c++: fix -Wparentheses for bool-like class types
cefae511ed7fa34ef6d24b67a7bc305459bf10e8 combine: Don't optimize paradoxical SUBREG AND CONST_INT on WORD_REGISTER_OPERATIONS targets [PR112758]
290230034092898981488d0716ddae43bd36c09f RISC-V: Make PHI initial value occupy live V_REG in dynamic LMUL cost model analysis
bd901d76734c1fb73cd2fa73d7f0427261a2541a RISC-V: XFail the signbit-5 run test for RVV
0994ddd86f9c3d829b06009d9e706ff72b07001a testsuite: Add more pragma novector to new tests
f1dcc0fe371e3cb10d2cbe3f6c88db6f72edddda middle-end: prevent LIM from hoising vector compares from gconds if target does not support it.
01f4251b8775c832a92d55e2df57c9ac72eaceef middle-end: Support vectorization of loops with multiple exits.
c5232ec14937a34e599e9e386a5975fab9a5e283 testsuite: Add tests for early break vectorization
a657c7e3518fcfc796f223d47385cad5e97dc9a5 testsuite: un-xfail TSVC loops that check for exit control flow vectorization
0beeddd6b1b1cb41104c4df925323e8fc0437ba8 RISC-V: Add one more ASM check in PR113112-1.c
fd032cce216e003d58b2394f7e61b03dee27e81a middle-end: explicitly initialize vec_stmts [PR113132]
ed60b2868abdb7932bda1dd08477c12fe62a49cb RISC-V: Move RVV V_REGS liveness computation into analyze_loop_vinfo
f83cfb8148bcf0876df76761a9a4545bc939667d RISC-V: Some minior tweak on dynamic LMUL cost model
c4ac073d4fc7474e29d085bbd10971138ee7478e RISC-V: Make known NITERS loop be aware of dynamic lmul cost model liveness information
76f5542c48315cca5dfcbff2f22c94f8d145bde6 RISC-V: Make dynamic LMUL cost model more accurate for conversion codes
d1eacedc6d9ba9f5522f2c8d49ccfdf7939ad72d RISC-V: Disallow transformation into VLMAX AVL for cond_len_xxx when length is in range [0, 31]
7dc868cb31c41d6d237d01be67469c2e9576c99d RISC-V: Robostify testcase pr113112-1.c
200531d5b9fb99eca2b0d6b8d1e42d176413225f Fix gen-vect-26.c testcase after loops with multiple exits [PR113167]
9a29b00365a07745c4ba2ed2af374e7c732aaeb3 RISC-V: Count pointer type SSA into RVV regs liveness for dynamic LMUL cost model
d3d6a96d45108d30395b6506fe4b3a91cd40f573 RISC-V: Add crypto machine descriptions
d2e40f2867da1d2c6a42122c057ee980e74a5440 RISC-V: Declare STMT_VINFO_TYPE (...) as local variable
6be6305fb6f1a0bf0c088302cc57cbd8aa411873 RISC-V: Modify copyright year of vector-crypto.md
76f069fef7dc12166fa65a664f03f82e7d2d9a78 RISC-V: Add simplification of dummy len and dummy mask COND_LEN_xxx pattern
ae11ee8f85c359714a15d234a577486acb8e8987 libsanitizer: Enable LSan and TSan for riscv64
152cd65bf468c378e1e06ac72e443453137034b5 RISC-V: Use vector_length_operand instead of csr_operand in vsetvl patterns
a43bd8255451227fc1cd3601b1f0265b21fafada RISC-V: Make liveness be aware of rgroup number of LENS[dynamic LMUL]
97c1f176278ddf42931d8ff8ca86c044227e77e3 RISC-V: Fix indent
4a0a8dc1b88408222b88e10278017189f6144602 RISC-V: Fix bug of earliest fusion for infinite loop[VSETVL PASS]
83869ff4bcd694634fca969993af4c0dbc51e2bb RISC-V: Refine LMUL computation for MASK_LEN_LOAD/MASK_LEN_STORE IFN
73a4f67b9c8c497d87fda44160953293bc4e11e5 RISC-V: Fix misaligned stack offset for interrupt function
4831ad982c08a7d926263666c62cd6e52674f885 Revert "RISC-V: Make liveness estimation be aware of .vi variant"
057dc349021660c40699fb5c98fd9cac8e168653 RISC-V: Nan-box the result of movhf on soft-fp16
5bb18475a10d05d2aebf37db73ebf36c6912104d Add generated .opt.urls files
fd946ecba7d2ec7090408b8b3ddd9d389db606e5 Revert "RISC-V: Add crypto vector builtin function."
fc75b733dc4db9e6b73991917bc704f16be47166 Revert "RISC-V: Add crypto vector api-testing cases."
05415dba984639cc2ca897786738d76dadd0cfb6 RISC-V: Clean up unused variable [NFC]
085585e97610c1ca4e38d65fdad80f766001a915 RISC-V: Clean up testsuite for multi-lib testing [NFC]
397bdd1ac59a556a9619c2b2bf203f88ff5e97c2 RISC-V: Fix wrong fix in last clean up
c659dd8bfb55e02a1b97407c1c28f7a0e8f7f09b Implement ASM_DECLARE_FUNCTION_NAME using ASM_OUTPUT_FUNCTION_LABEL
9873f13d833b536b46cd6ff46d72e62407b048a8 RISC-V: Allow simplification non-vlmax with len = NUNITS reg to reg move
19c76b5a91837cdb3e7aa4cb484dd4cfdebca8ae RISC-V: Teach liveness computation loop invariant shift amount
6cf47447f6fba84a17864fc7a19a532a62b6e736 RISC-V: Update MAX_SEW for available vsevl info[VSETVL PASS]
e74c37aab51d2350a3417f442c3a7d119b755378 RISC-V: Use MAX instead of std::max [VSETVL PASS]
c97436f84cef191618f61912520bc0f0d62d8146 RISC-V: Fix avl-type operand index error for ZVBC
4d31d6606201b339825c370c2e1969b2dcd17f39 RISC-V: Fix testsuite
b3cc5a1efead520bc977b4ba51f1328d01b3e516 tree-optimization/113026 - avoid vector epilog in more cases
2e4607666c3238a62d08468720549e70e71417c3 RISC-V: Fix comments of segment load/store intrinsic [NFC]
b1d4e5b51375efd285378173375d634ad6ba8462 vect: Ensure both NITERSM1 and NITERS are INTEGER_CSTs or neither of them [PR113210]
db584633e600840619bfb821d8293094ef26a668 RISC-V: Fix loop invariant check
cbf569486b2decbde0308f9f4d0f0837e4cfefd9 middle-end: rejects loops with nonlinear inductions and early breaks [PR113163]
109f2316725bd74d85279fa749e5ea59686ad320 frontend: don't ice with pragma NOVECTOR if loop has no condition [PR113267]
c22cf7a7a77bf9245bd0790b21695440208c3aa5 tree-optimization/113026 - fix vector epilogue maximum iter bound
80bb94e88faaadd4d6f008fececb46214dc89e9f middle-end: check if target can do extract first for early breaks [PR113199]
27194610d269d28f1800592e9c1fd39c2b51b809 middle-end: removed unused variable in vectorizable_live_operation_1
cf4dcf83a7df7805186aca7db0595bbf59cd40eb RISC-V: Robostify dynamic lmul test
0141ee79d72a3bccf040e02cd047fe585b96fa8d RISC-V: Refine unsigned avg_floor/avg_ceil
9e7c77c7933b1bb0dd07214333e52a9a896fa349 middle-end: Fix dominators updates when peeling with multiple exits [PR113144]
5daf9104ed5d4ef21b01e9564e5325adb157e5d8 pretty-print: support urlification in phase 3
cac9d2d2346bf06b29b34e12cf0a005c37eacdc9 tree-optimization/113078 - conditional subtraction reduction vectorization
91fd5c94965b4077490c6bfcc9aa4b0e4146b38a middle-end: correctly identify the edge taken when condition is true. [PR113287]
6c3365e715faa20d8adefe244531f778578a9326 RISC-V: Also handle sign extension in branch costing
3353e7d28447f4591a752859ddea96b308561c0a RISC-V/testsuite: Fix comment termination in pr105314.c
7cbe41d35e6a60776484e04e42e408de9fc82954 middle-end: Don't apply copysign optimization if target does not implement optab [PR112468]
52e809d5cf345ce01fc81be716a57f5b6d5b4545 RISC-V: T-HEAD: Add support for the XTheadInt ISA extension
2aa83f0ad8a613fc46bf13cdd3403445d5c85b69 RISC-V: Minor tweak dynamic cost model
3b8ef3f25ed68790f77eea8ea445b7c9144c8ca6 RISC-V: Switch RVV cost model.
6686e16fda419067b91614835dd743ebb82717ea Optimize A < B ? A : B to MIN_EXPR.
1a51886a79c97e53ba945c1926ab215ed6a9f5ed RISC-V: VLA preempts VLS on unknown NITERS loop
e1f2d58a1e2536f13d3f2ea2d7373ae62cec9125 middle-end/112740 - vector boolean CTOR expansion issue
b89ef3d40afc4604c279e8802bf279f6e4060f67 LOOP-UNROLL: Leverage HAS_SIGNED_ZERO for var expansion
897b95a12b7fe549ec2cb8ef3a3f0e4fbabf9737 tree-optimization/113126 - vector extension compare optimization
ec345df53556ec581590347f71c3d9ff3cdbca76 tree-optimization/112505 - bit-precision induction vectorization
da1e651e9c00b9c6100b2ea915631eba0e0d07ba testsuite: remove -save-temps from many tests [PR113319]
a2be4e155992151b60fca6969a97d6efd91e82b5 expr: Limit the store flag optimization for single bit to non-vectors [PR113322]
b79cd204c780ee27e240616ac07e8201b85aeb92 RISC-V: THEAD: Fix ICE caused by split optimizations for XTheadFMemIdx.
72609f5591b751b34fca3730acaf274c0ba32dab RISC-V: Modify ABI-name length of vfloat16m8_t
d79629b316f48c45c0a38d10b8fef1a84beceb46 RISC-V: Update the comments of riscv_v_ext_mode_p [NFC]
7ec177ecdb237f4ca9547e36420ec7ed3fe43fe2 RISC-V: Enhance a testcase
160799b366c33246ca16b84020ec49c3feabb0a3 middle-end/113344 - is_truth_type_for vs GENERIC tcc_comparison
a2d66158541c0923620b044098bf66a73b51c463 lower-bitint: Fix a typo in a condition [PR113323]
0acb63670bf1058fce00a75bd318c40be3bfa222 RISC-V: Adjust scalar_to_vec cost
6cb155a6cf314232248a12bdd395ed4151ae5a28 middle-end: make memory analysis for early break more deterministic [PR113135]
411de96dbf2bdafc7a90ebbfc63e68afd6388d29 middle-end: maintain LCSSA form when peeled vector iterations have virtual operands
99c0a540d6689ede068f9ba98af6f38c3cd71362 middle-end: thread through existing LCSSA variable for alternative exits too [PR113237]
e79c5855ab39d96baa7c6bec63eb97715abcf68d middle-end: fill in reduction PHI for all alt exits [PR113178]
a8dbae45926db1ebc94c0cc32647c3a45ca62eef middle-end: remove more usages of single_exit
d14ef0987de2f6f2dac64f4f0f068b929078a01d testsuite: Make bitint early vect test more accurate
7012a252528233ca3ced5b9230013c50b604da9b testsuite: Fix up vect-early-break_100-pr113287.c testcase [PR113287]
9935667a69896865b848dfa690f94c9c693a48a3 Fortran: annotations for DO CONCURRENT loops [PR113305]
0627d1f5340c693699ad36fa2b741ff11d6f026a RISC-V: Fix attributes bug configuration of ternary instructions
baa931cc2e007be762ae48f9b1f7898d1d817d50 RISC-V: Add optimized dump check of VLS reduc tests
e037a0fa040ee1a3500c8523f3ffa713069ac283 RISC-V: Remove m_num_vector_iterations[NFC]
afac1bd33657a5054f5e6ea6746c25bbb70b82f2 tree-optimization/113385 - wrong loop father with early exit vectorization
405096f908e1ceb0d6a1b5420ded20ad85ddae9e RISC-V: Adjust loop len by costing 1 when NITER < VF
7be87b7d2e330afd14a7cc028f64d88f80e12f40 RISC-V: Fix regression (GCC-14 compare with GCC-13.2) of SHA256 from coremark-pro
4d7c4288a90ab949f70c47a4b3e97c52f4f39f11 RISC-V: Remove the Scalar Bitmanip and Crypto Built-In function testsuites
c7ad6bf5b9e478d87294230318db675d7c8f3ce4 RISC-V: Add C intrinsic for Scalar Crypto Extension
04f22670d32f6a0b765969997269107b6b7e8c21 RISC-V: Add C intrinsic for Scalar Bitmanip Extension
b2e06d71613ba0a01d6f91b2600725aac9fb761b RISC-V: delete all the vector psabi checking.
04c5b9e4ab6f86305a3cc45682d0b4f5b528b190 RISC-V: delete vector abi checking in all relevant tests.
39fa71a0882928a25bd170580e3e9e89a69dce36 testsuite: Fix vect_long_mult on Power [PR109705]
5134d3074ad7a462b4c8e2c0bc904b5ba40b7373 RISC-V: Report Sorry when users enable RVV in big-endian mode [PR113404]
57f611604e8bab67af6c0bcfe6ea88c001408412 Do not count unused scalar use when marking STMT_VINFO_LIVE_P [PR113091]
98b83ea8a41763d1a760a79a27132fbc610b93d4 gccrs: Fix assignment operator overloads for AST and HIR patterns
9761160120e96c4507e29f626f3333e0a97ab9f8 gccrs: ast: Add TokenStream collect function
0c985f7d309d321482833d409df8864820c778eb gccrs: expand: Add inner attribute expansion stubs
e755e6e407be2ed3d6d3d93a215a9237c681026d gccrs: Fix memory corruption at peek_context
71249c646b77a73002ea9f1061c492c76ac5bda5 gccrs: ast: Rename TokenStream in the AST module
ec5f8090a17dede3165650b0db362afbfa5819e0 gccrs: ast: Move token converter out of ast module
2099a757e22b8cfeebc8b40e06c071dde201b3cb gccrs: converter: Return a vector to const pointers
95103ba9cda60274c4402fcdcb625b3af72cbb1a gccrs: converter: Const conversion to tokenstream
cf58150bea85a633247c77f1989c6389c8eb7974 gccrs: libproc_macro: Fix Tokenstream growth
663c4102a8ad43ec409e04d5ab834d38f161bdb5 gccrs: expand: Add prc macro expander and registration
7d59ce850c10c2162e54b4f115ec0cb34536d8e7 gccrs: expand: Add in order trait expansion
93866b6a930170302778d23e034619c8f669547b gccrs: rust-unreachable: Add specific behavior for rust_unreachable
d31b401c8cd72a1c81c9be489a1f4f54bd6850dc gccrs: import: Change package opening prototypes
cfb98788f0afd404dcc6d675c8b8971a8a6b1603 gccrs: import: Store procedural macros in extern crate
37451ad09f7edc081700909208f90b9eea1eb592 gccrs: import: Load procedural macros into external crate
ed866110ef0f90f24c60a91a7141565b706ad185 gccrs: resolve: Add mappings for proc macros and resolving
8b1e1faa7f2eec13df511fa76d181337efb14f4d gccrs: better handling of incorrect file loading in include_* builtin macros
750ac3263c8db064b1d6b3ae33ec6a2036e38bb8 gccrs: Improve byte vector to string conversion
ad1c244dd607fd7607ef95eecc2718e98578a70c gccrs: Fix bad uninit intrinsic
c00624a6c8b9a08b10674abff7826ac990e9248a gccrs: Fix invalid call to vector::front in TypeBoundPredicate constructors
90ee631428f0af1d91ee297ea114755d7f0563c7 gccrs: Change trait getter to return references
1caf0e8ffed0d4e454470550950cc99eb4bce13a gccrs: Change early resolver visit_attributes arguments
86a3d1582f98dec4f663b1170e2f63bd7c3d2b85 gccrs: Move proc macro definition to mappings
513b0154ab1f00e92d2072a5858f585510599b9b gccrs: Rework function special parameters
3359942417b02de88ae84d50aac232ac01ff9e15 tree-optimization/113371 - avoid prologue peeling for peeled early exits
de4c9a27ba51e409e9d9e2a2827da53b1c979b09 RISC-V: Fix asm checks regression due to recent middle-end change
7ee7e07d0fb996d9632178f5b9790842096351ae RISC-V: RVV: add toggle to control vsetvl pass behavior
3340878009acfc69f5315386437841a277174c83 RISC-V: fix some vsetvl debug info in pass's Phase 2 code [NFC]
e935c0662fe6301d524c54bb5bd75e923abb61e9 RISC-V: Add has compatible check for conflict vsetvl fusion
a689c1f4865ea6d4c7d2a928a17894671642fa34 test regression fix: Add vect128 for bb-slp-43.c
cc34fc9ffde60815b6571a60129199ddc5a07ca2 test regression fix: Add !vect128 for variable length targets of bb-slp-subgroups-3.c
0f38666680d6ad0e40c4a8b6d94b2c93931cdf42 tree-optimization/113374 - early break vect and virtual operands
b981d5c60b8ef78e2adecd6b5d7e36f9e5e61c54 tree-optimization/113431 - wrong dependence with invariant load
1203fc2e6a40c65896763554f62cacfb4bd6a836 opts: Fix up -ffold-mem-offsets option keywords
484f48f03cf9a382b3bcf4dadac09c4ee59c2ddf testsuite: Fix up scev-16.c test [PR113446]
3c7add6af4641e0e8a812596d59606aeb8a84b3f riscv: Remove Bool keywords from riscv.opt
38d8facddfd891e15b287e5f19c5139272900346 RISC-V: Support vi variant for vec_cmp
1c1853a70f9422169190e65e568dcccbce02d95c Fix memory leak in vect_analyze_loop_form
5b421c2a5b429fcebd7ee6444a5677633df0f28a Fix memory leak in vectorizable_store
895a2138265fd9cace3588404523122f73626d2a tree-optimization/113475 - fix memory leak in phi_analyzer
d05b5265110709996fa19af1267c6669b7992879 RISC-V: Introduce XTheadVector as a subset of V1.0.0
9a55cc625c5f4b0318b16173b20dcab80cff03a1 RISC-V: Adds the prefix "th." for the instructions of XTheadVector.
2d7205eb2c3b175a86aab92bb652314f308f9c05 RISC-V: Handle differences between XTheadvector and Vector
0a41c3e49af36cde6792413051c7054eeccb63fb RISC-V: Add support for xtheadvector-specific intrinsics.
cdf4729f0889501c622cc1ad2df9377f2819cc07 RISC-V: Fix register overlap issue for some xtheadvector instructions
9e1b554cc75e25fe96baf9b8d7963b932cb2c36d RISC-V: Rewrite some instructions using ASM targethook
d190a5553a1a8e8c279f96a998a5343fdd3feb8b Another memory leak in vectorizable_store
3d3145e9e1461e92bef02d55d36990261dd0444d libstdc++/debug: Fix constexpr _Safe_iterator in C++20 mode [PR109536]
d5604febcfb09445eb738dcb8c675a4cb9671519 analyzer: fix ICE on strlen ((char *)&VECTOR_CST) [PR111361]
173852ab68a461bbee07f6420a927c16d9019081 RISC-V: Raname UNSPEC_CLMUL in vector-crypto.md.
565935f93a7da629da89b05812a3e8c43287598f RISC-V: Tweak the wording for the sorry message
1c51d0109a4730827c40c3bbd3a59d459828017e Fix testcase failure on many platforms which don't support vect_int_max.
4e8fef35f7c4553529e92a0d9f501b94481ede0b RISC-V: Extract part parsing base ISA logic into a standalone function [NFC]
006ad3e7f7847eb53c837aa1a581af0f822b7616 RISC-V: Relax the -march string for accept any order
e752a1ee00fef0244079a4c044d151e3be8073ab RISC-V: Remove unused function in riscv_subset_list [NFC]
7fd11421959c14c82fb03d148f14375d3b975584 RISC-V: Update testsuite due to -march string relaxation
5a22bb250d8f4ad239e12fea9828c18a0aa23e38 RISC-V: Document the syntax of -march
730a801f950e7817696067906cf40d590688387a RISC-V: Add the Zihpm and Zicntr extensions
6ce7008cfa1a240895ecca0898e7dbaecd975567 tree-optimization/113494 - Fix two observed regressions with r14-8206
01260a823073675e13dd1fc85cf2657a5396adf2 RISC-V: Fix RVV_VLMAX
19260a04ba6f75b1fae52afab50dcb43d44eb259 RISC-V: Documnet the list of supported extensions
54519030b05e2a85565cd65c88afe7da4670dd86 RISC-V: Update testcase due to message update
63736351ec4d1e49261a483ea55e0f5ecfc591c8 libgccjit: Make is_int return false on vector types
615e25c82de97acc17ab438f88d6788cf7ffe1d6 RISC-V: Suppress warning
0366231967776653b7c297055e6eac090549310e Remove several xfails for 32-bit hppa*-*-*
b1829de17bdf9770b276756ead49eba6f408ecd1 [committed] [NFC] Fix riscv_init_cumulative_args for unused arguments
5efd98c6f818ce2c55f54c34008557d0a3f953aa Install right version of last change.
3a6b650689b9bd43eaf8911045e1852fd45bad44 [PATCH v3 2/2] RISC-V: Fix XCValu test
46a664dd59ec6c1121914d6857d6edb94501c517 RISC-V: Bugfix for resolve_overloaded_builtin[PR113420]
a618b3c65745a6992ced4df60c186241c2da6eae RISC-V: Fix vfirst/vmsbf/vmsif/vmsof ratio attributes
86f3cbdaa6f60eaff1cdb4ab2f1a9bc796b67207 tree-optimization/113373 - add missing LC PHIs for live operations
f625c017e60b6e05675b7d6280f2c7677ce691c3 RISC-V: Fix regressions due to 86de9b66480b710202a2898cf513db105d8c432f
f9df00340e307e52be7e025689d6c8bcbb8bcd55 RISC-V: Lower vmv.v.x (avl = 1) into vmv.s.x
5015015ae6b29b3f1734c7693ba25b88cdd531a1 fold-const: Fold larger VIEW_CONVERT_EXPRs [PR113462]
02e683894942da1620c07bd7e3e8b1d5950d91aa Refactor exit PHI handling in vectorizer epilogue peeling
d5d43dc399bb0f15084827c59a025189c630afdd tree-optimization/113552 - fix num_call accounting in simd clone vectorization
3132d2d36b4705bb762e61b1c8ca4da7c78a8321 RISC-V: Fix large memory usage of VSETVL PASS [PR113495]
7f7d9c525c694e36ae525ed93ccd5b6ffad0f1d8 RISC-V: Add regression test for vsetvl bug pr113429
72429448fd16733f876b282bb37a0653049c446d middle-end: fix epilog reductions when vector iters peeled [PR113364]
59004711660065a731be07c92150d45de430a550 middle-end: rename main_exit_p in reduction code.
fb54b9772816968032518d4008be5090e0d95109 [PATCH v3] RISC-V: Add split pattern to generate SFB instructions. [PR113095]
0d1b0f2ad391217a43e9239ca017958f89e8f076 RISC-V: Don't make Ztso imply A
ba2c1a45dd58f10483efe6150bfb36d049a76024 Fix check_effective_target_vect_long_mult
578c7b91f418ebbef1bf169117815409e06f5197 tree-optimization/113576 - non-empty latch and may_be_zero vectorization
1a8bebb1c59960590e7e2bc1a52757dfdd94210a RISC-V: Add optim-no-fusion compile option [VSETVL PASS]
36c1384038f3b9f01124f0fc38bb3c930b1cbe8a docs: Fix 2 typos
e7d7c9e889ae8553b9aac79e6944d70702f8ee53 Fix a few vect gimple testcases for LLP64 targets (e.g. mingw) [PR113548]
5ee45f5e2838caf9180af1702349daa017a032f5 RISC-V: Remove redundant full available computation [NFC]
c6c2a1d79eb333a00124bf67820a7f405d0d8641 RISC-V: Add LCM delete block predecessors dump information
acc22d56e140220e7dc6c138918cb6754b6d1c0b RISC-V: remove param riscv-vector-abi. [PR113538]
5739d5fb5417e3e4303533ae464829e43ad3b47c RISC-V: Add support for XCVsimd extension in CV32E40P
90880e117aa70a5ecd9b7df4381410c2ea0dcfdb testsuite/vect: Add target checks to refined patterns.
660e17f00658b68115282e6de38243e3c6cc1ee2 fold-const: Handle AND, IOR, XOR with stepped vectors [PR112971].
d40b3c1e439db05c835b6bd4fd5bba58fda71dd6 RISC-V: Fix incorrect LCM delete bug [VSETVL PASS]
bfd6b36f08021f023e0e9223f5aea315b74a5c56 testsuite/vect: Fix pr25413a.c expectations [PR109705]
bf23a62ee08fdc114a517dc4af148f15fa5d6545 RISC-V: Refine some codes of VSETVL PASS [NFC]
f9b143d239db775318a29e9ff63f232b9501a22a tree-optimization/113602 - datarefs of non-addressables
a0596173c8975073dba8288598a483bfa97605ee RISC-V/testsuite: Widen coverage for pr105314.c
d4e15084e2155c7e7c5e872b3a88e64df27aa4e6 RISC-V/testsuite: Add RTL pr105314.c testcase variants
5a874dec6006357cca4e5f10a1c399157b96b837 RISC-V/testsuite: Add RTL cset-sext.c testcase variants
ec57d183d35412aa5e0bcd7a448ccb75a4e1eab7 c++: Stream additional fields for DECL_STRUCT_FUNCTION [PR113580]
5b393ac7f1715328ee92236071edc3885bf53317 testsuite: Fix vect_long_mult for 32-bit Power [PR109705]
1a8261e047f7a2c2b0afb95716f7615cba718cd1 vect: Tighten vect_determine_precisions_from_range [PR113281]
25cd22bf02d55d0778ee7b883eb698204a120a16 RISC-V: Add require-effective-target to pr113429 testcase
0ac37563fa41c72e499abd620c652ba5debe7fb9 RISC-V: Fix regression
4ac00b7c809ca70775a04708863b9101d94af5c2 RISC-V: THEAD: Fix improper immediate value for MODIFY_DISP instruction on 32-bit systems.
47b81161c98cf2ff5495d4aa6386cc3c87f9d27b testsuite: Fix up pr113622-{2,3}.c for i686-linux [PR113622]
d7250c1e02478586a0cd6d5cb67bf4d17249a7e7 tree-ssa-strlen: Fix up handle_store [PR113603]
87ed338808f8d56b1270724584218cf7d801fe5b riscv: Move UNSPEC_XTHEAD* from unspecv to unspec
4c2169d2f4061e72e1e61e9a175d16f7ff50f5c0 tree-optimization/113659 - early exit vectorization and missing VUSE
7bfea0aedbce3f33a783bbb47f39724a58d19f73 RISC-V: Bugfix for vls mode aggregated in GPR calling convention
9dd10de15b183f7b662905e1383fdc3a08755f2e RISC-V: Fix VSETLV PASS compile-time issue
924137b9012cee5603482242de08fbf0b2030f6a tree-optimization/113670 - gather/scatter to/from hard registers
8123f3ca3fd891034a8366518e756f161c4ff40d match: Fix vcond into conditional op folding [PR113607].
be697c0ab187466a0a76ef228055b591718e3e4d Revert "RISC-V: Enable assert for insn_has_dfa_reservation"
017b4c2a4977a8e50a336e4fef8c4ef817765033 Revert "RISC-V: Use default cost model for insn scheduling"
2a30dd3a763a3a5f517bd923607b6081157eeaac Revert "RISC-V: Add vector related pipelines"
fd4829dde46b9836c40c9ab27bde98521e692119 Revert "RISC-V: Add non-vector types to dfa pipelines"
5c18df44fd1387653595869c9145c63fffb8cfac RISC-V: Add minimal support for 7 new unprivileged extensions
ec217f7282cd4284cecda1c65a1e04323e6c8354 RISC-V: Support scheduling for sifive p600 series
4571b4d413a4ba5f1e2d429a2623180ad1c73c0f middle-end: Fix ICE in poly-int.h due to SLP.
22622a5a314114fa2c6033fd7b4f7a2060e55284 RISC-V: Remove vsetvl_pre bogus instructions in VSETVL PASS
e0701f8f7b6dcddb299eb5345e510cf9ea419150 RISC-V: Cleanup the comments for the psabi
74489c19070703361acc20bc172f304cae845a96 RISC-V: Allow LICM hoist POLY_INT configuration code sequence
3e0b495311e982d349a28322fa305083ef25f866 Revert "RISC-V: Allow LICM hoist POLY_INT configuration code sequence"
922e4599e6261644d336b009b6901cd221ec95fd RISC-V: Expand VLMAX scalar move in reduction
48148a0bb6c05b68b9c8f867f5c5ee9d8f4dd996 Fix some of vect-avg-*.c testcases
85094e2aa6dba7908f053046f02dd443e8f65d72 middle-end: check memory accesses in the destination block [PR113588].
777df37a12e55ecbc135efbed2749a8a8a756d4d [committed] Reasonably handle SUBREGs in risc-v cost modeling
7c190f93cd53a8391d78da2ba39d98dba9211faa RISC-V: Support scheduling for sifive p400 series
91e09b3a7e9c86bb29fc138744fd2e087216733c RISC-V: Add sifive-p450, sifive-p67 to -mcpu
9d139c036547a4b3b43439b82f94a9c350d4fa2f Vectorizer and address-spaces
8ca585e56c1d6837f96ddd88c13ed1e815c74f93 libitm: small update for C++20
184978cd74f962712e813030d58edc109ad9a92d riscv: Fix compiler warning in thead.cc
d29136ad3282905145e24d7ec10b6efe4ab5d2f1 RISC-V: Fix infinite compilation of VSETVL PASS
db5c3f6d952bc3950d23c0a6be4e8ec9147ef752 RISC-V: Bugfix for RVV overloaded intrinisc ICE when empty args
194d0956ef5992d4e453bde3eb5772dc077f610c middle-end: add additional runtime test for [PR113467]
8f6ed71d8fff3c3c6249651a72aee084e31ffb9e middle-end: fix ICE when moving statements to empty BB [PR113731]
5c3ba60024fedc6b3d374ebb071bcf5b3e27cd62 middle-end: fix ICE when destination BB for stores starts with a label [PR113750]
830d4659604e4d0f6e908d1cdb5bf1638a60bb21 Apply TLC to vect_analyze_early_break_dependences
1c649ac36f1eab8094fb0a697c001e064c031ac1 gccrs: Fix ICE accessing empty vector without check
99200573096c03120c8d4514383951acecdd5ab1 PR target/113690: Remove TImode REG_EQUAL notes in STV.
9ec08782b45869b33fec2a8772c25118221208e3 RISC-V: Bugfix for RVV overloaded intrinsic ICE in function checker
56adcd4878ee4078d6c674dc77713248f8397c06 testsuite: fix pointer conversion error in testcase vect-early-break_110-pr113467.c
5bd96fed4ff5bc480c7af2e650b16198e7e527cc Revert part of vect_analyze_early_break_dependences changes
3f69db1812106cb5bab203e17a60300ac51cdc68 middle-end: don't cache restart_loop in vectorizable_live_operations [PR113808]
70b9dd8b388668df96f457b3c6ee33fc5b35f94c testsuite: address Jakub's comments on vect-early-break_1-PR113808.f90
d2d5ef6e22082d945c4d255b44194155680a93bd ranger: Grow BBs in relation oracle as needed [PR113735]
232ffb61ceb63c4a86a8bc67f1db989c2124db5f RISC-V: Fix rvv intrinsic pragma tests dejagnu selector
1e3f78dbb328a2f2db8def241372cb947d9cb7eb tree-optimization/113863 - elide degenerate virtual PHIs when moving ee stores
016fbd2d89972e0c44d9cd8375d2332108e447c4 RISC-V: Fix misspelled term args in error_at message
76fb83559dc85d9a6de92c0505cf5c4dfa698430 testsuite: Fix up gcc.dg/pr113693.c for ia32
491e57451df47cda88f658601a92d6d006ae09d7 middle-end: update vector loop upper bounds when early break vect [PR113734]
7eac19be5f7dd92fcbcfe13f6edbb4f9bd45c15c Re: [PATCH] RISC-V: Fix macro fusion for auipc+add, when identifying UNSPEC_AUIPC. [PR113742]
5352ede92483b949e811cbdcdfaec5378f3e06d6 middle-end/113576 - zero padding of vector bools when expanding compares
948dbc5ee45f9ffd5f41fd6782704081cc7c8c27 vect/testsuite: Fix vect-simd-clone-1[02].c when dg-do default is compile [PR113899]
16ae5efedd389e8952f35bb10665518c22a9251c middle-end: inspect all exits for additional annotations for loop.
98e931de9adce41fba0e7f187e31ac1dfcbb8a00 Skip gnat.dg/div_zero.adb on RISC-V
b312cf21afd62b43fbc5034703e2796b0c3c416d tree-optimization/111156 - properly dissolve SLP only groups
7af0f1e107a480fbfe882cb985603960114aefb5 RISC-V: Add new option -march=help to print all supported extensions
325d5dd53270fe8fd62b36c92c8f8b87c2938bf1 RISC-V: Fix *sge<u>_<X:mode><GPR:mode> pattern
5f1438db419c9eb8901d1d1d7f98fb69082aec8e c++: Add testcase for this PR [PR97990]
cd503b0616462445381a8232fb753239d319af76 Add -Wstrict-aliasing to vector-struct-1.C testcase
6082024891e421bfd81d8f708a7411f4019d0d97 RISC-V: Suppress the vsetvl fusion for conflict successors
2bfdeca19d96239479488cd07b1e952d95a02f72 match.pd: Fix ICE on BIT_INSERT_EXPR of BIT_FIELD_REF folding [PR113967]
641b50bffc06123853a1421c0dd5a318c353fd85 GCN: Conditionalize 'define_expand "reduc_<fexpander>_scal_<mode>"' on '!TARGET_RDNA2_PLUS' [PR113615]
d70facd54a576faca1bfba96e92e1475e0da22a3 analyzer: Fix maybe_undo_optimize_bit_field_compare vs non-scalar types [PR113983]
ecfcc362b7f3f796c72f3525c4e3a6dd8ab3beac testsuite: Fix up analyzer/torture/vector-extract-1.c test for i686 [PR113983]
c8742849e22d004b6ab94b3f573639f763e42e3a ipa: Convert lattices from pure array to vector (PR 113476)
3232ebd91ed55b275b9d5a6e8355336382c4afd5 RISC-V: Specify mtune and march for PR113742
bc6b42666cfe1467774b942c7afabe480e3b5ccb RISC-V: Quick and simple fixes to testcases that break due to reordering
9ca4c1bf082a4691482ca9f4814fea68f04e2cb3 RISC-V: Add tests for constraints "i" and "s"
3688c2b1a604a16b9ff46935770976960016b15c RISC-V: Upgrade RVV intrinsic version to 0.12
549f251f055e3a0b0084189a3012c4f15d635e75 tree-optimization/114027 - conditional reduction chain
1c5da882bf77400748aeb0b01bf9a7faba1a4f32 doc: RISC-V: Document that -mcpu doesn't override -march or -mtune
23f5da91ccb4927562ea4d1c245639bfd4a0088b RISC-V: Point our Python scripts at python3
818094a07a0b550643ecd0090647dc29cc9e153a testsuite: vect: Actually skip gcc.dg/vect/vect-bic-bitmask-12.c etc. on SPARC
85c12ae8b80902ed46c97f33dbb61533e07f2905 RISC-V: Fix vec_init for simple sequences [PR114028].
5e7a176e88a2a37434cef9b1b6a37a4f8274854a bitint: Handle VIEW_CONVERT_EXPRs between large/huge BITINT_TYPEs and VECTOR/COMPLEX_TYPE etc. [PR114073]
0394ae31e832c5303f3b4aad9c66710a30c097f0 vect: Tighten check for impossible SLP layouts [PR113205]
8293df8019adfffae3384cb6fb9cb6f496fe8608 tree-optimization/114068 - missed virtual LC PHI after vect peeling
fb68e2cac1283f731a3a979cb714621afb1ddfcc tree-optimization/114099 - virtual LC PHIs and early exit vect
8a5d9409584aeb777b06f9c19c7d1a3552d496ad tree-optimization/114081 - dominator update for prologue peeling
a0b1798042d033fd2cc2c806afbb77875dd2909b tree-optimization/114074 - CHREC multiplication and undefined overflow
cc383e9702897dd783657ea3dce4aecf48318441 gimple-fold: Use bitwise vector types rather than barely supported huge integral types in memcpy etc. folding [PR113988]
82ebfd35da49e5df87da132a7b8c41baeebc57b4 Only emulate integral vectors.
2d8cd712b17e88f2935237665799d0c72b7ce1b6 libstdc++: Add more nodiscard uses in <vector>
fd07a29e39f5347d6cef3e7042a32306f97a1719 RISC-V: Fix __atomic_compare_exchange with 32 bit value on RV64
d3d0fcb652748191714e4c0b2541e977a7fc7bd7 bitint: Handle VCE from large/huge _BitInt SSA_NAME from load [PR114156]
c6f5f773323ab689a665bc208c3b221db42fe624 function: Fix another TYPE_NO_NAMED_ARGS_STDARG_P spot
0a01d1232ff0a8b094270fbf45c9fd0ea46df19f RISC-V: Introduce gcc option mrvv-vector-bits for RVV
4547628c78618616595f4b5e1bef2b582c77793d RISC-V: Add riscv_vector_cc function attribute
f9c30ea737b806caac917d8f501305151a2cbd57 middle-end/114070 - VEC_COND_EXPR folding
867cbadb912ab75d0eaf919a3f992595e508482b c++: Fix up decltype of non-dependent structured binding decl in template [PR92687]
b7b387e1200fd182599195979d5d21656fa8969d [14 regression] Fix insn types in risc-v port
889fbc9454e2d4e2b9a11a9e02b3b7e698edcd1c testsuite: Make pr104992.c irrelated to target vector feature [PR113418]
324d2907c86f05e40dc52d226940308f53a956c2 tree-optimization/114192 - scalar reduction kept live with early break vect
a19ab1c42aba47fbfb122a6160f504565aef0943 tree-optimization/114164 - unsupported SIMD clone call, unsupported VEC_COND
8fdac08b4d5f65973164a476bd255533ed97a766 tree-optimization/114197 - unexpected if-conversion for vectorization
71244316cf714725930c2de61c79d635238595bf Regenerate opt.urls
77eb86be8841989651b3150a020dd1a95910cc00 vect: Fix integer overflow calculating mask
1a8dde963590b415768b070bd309b188858dc589 RISC-V: Cleanup unused code in riscv_v_adjust_bytesize [NFC]
7890836de20912bd92afaf5abbeaf9d8c5b86542 tree-optimization/114231 - use patterns for BB SLP discovery root stmts